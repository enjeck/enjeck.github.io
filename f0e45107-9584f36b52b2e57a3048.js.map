{"version":3,"file":"f0e45107-9584f36b52b2e57a3048.js","mappings":"6MAKIA,EAAgB,CAClB,EAAG,sNACH,EAAG,+CACH,EAAG,OACHC,OAAQ,yEACRC,WAAY,kBAKVC,EAAuB,8KACvBC,EAAW,CACb,EAAGD,EACH,EAAGA,EAAuB,4CAExBE,EAA4B,kBAU5BC,EAA+B,86BAC/BC,EAA0B,ijBAC1BC,EAA0B,IAAIC,OAAO,IAAMH,EAA+B,KAC1EI,EAAqB,IAAID,OAAO,IAAMH,EAA+BC,EAA0B,KACnGD,EAA+BC,EAA0B,KASzD,IAAII,EAA6B,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,KAAM,GAAI,IAAK,KAAM,IAAK,GAAI,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,IAAK,GAAI,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,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AAI,IACJC,KAAM,IACNC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,IAAK,IACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,KAAM,IACNC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,MAAO,IACPC,QA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","sources":["webpack://enjeck-personal-website/./node_modules/buble/dist/buble-browser.es.js"],"sourcesContent":["import rewritePattern from 'regexpu-core';\nimport MagicString from 'magic-string';\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 190, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 26, 230, 43, 117, 63, 32, 0, 257, 0, 11, 39, 8, 0, 22, 0, 12, 39, 3, 3, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 68, 12, 0, 67, 12, 65, 1, 31, 6129, 15, 754, 9486, 286, 82, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 280, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) {\n      return false;\n    }\n    pos += set[i + 1];\n    if (pos >= code) {\n      return true;\n    }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) {\n    return code === 36;\n  }\n  if (code < 91) {\n    return true;\n  }\n  if (code < 97) {\n    return code === 95;\n  }\n  if (code < 123) {\n    return true;\n  }\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  if (astral === false) {\n    return false;\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) {\n    return code === 36;\n  }\n  if (code < 58) {\n    return true;\n  }\n  if (code < 65) {\n    return false;\n  }\n  if (code < 91) {\n    return true;\n  }\n  if (code < 97) {\n    return code === 95;\n  }\n  if (code < 123) {\n    return true;\n  }\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  if (astral === false) {\n    return false;\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if (conf === void 0) conf = {};\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\nfunction binop(name, prec) {\n  return new TokenType(name, {\n    beforeExpr: true,\n    binop: prec\n  });\n}\nvar beforeExpr = {\n  beforeExpr: true\n};\nvar startsExpr = {\n  startsExpr: true\n};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if (options === void 0) options = {};\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options);\n}\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix: true,\n    postfix: true,\n    startsExpr: true\n  }),\n  prefix: new TokenType(\"!/~\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr: true,\n    binop: 9,\n    prefix: true,\n    startsExpr: true\n  }),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {\n    beforeExpr: true\n  }),\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {\n    isLoop: true,\n    beforeExpr: true\n  }),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {\n    isLoop: true\n  }),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {\n    isLoop: true\n  }),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _instanceof: kw(\"instanceof\", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _typeof: kw(\"typeof\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _void: kw(\"void\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _delete: kw(\"delete\", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  })\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || !ecma2019String && (code === 0x2028 || code === 0x2029);\n}\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName);\n}\nvar isArray = Array.isArray || function (obj) {\n  return toString.call(obj) === \"[object Array]\";\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\nPosition.prototype.offset = function offset(n) {\n  return new Position(this.line, this.column + n);\n};\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) {\n    this.source = p.sourceFile;\n  }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n  // (2019). This influences support for strict mode, the set of\n  // reserved words, and support for new syntax features. The default\n  // is 9.\n  ecmaVersion: 9,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n  for (var opt in defaultOptions) {\n    options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];\n  }\n  if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n  if (options.allowReserved == null) {\n    options.allowReserved = options.ecmaVersion < 5;\n  }\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) {\n      return tokens.push(token);\n    };\n  }\n  if (isArray(options.onComment)) {\n    options.onComment = pushComment(options, options.onComment);\n  }\n  return options;\n}\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations) {\n      comment.loc = new SourceLocation(this, startLoc, endLoc);\n    }\n    if (options.ranges) {\n      comment.range = [start, end];\n    }\n    array.push(comment);\n  };\n}\n\n// Each scope gets a bitset that may contain these flags\nvar SCOPE_TOP = 1;\nvar SCOPE_FUNCTION = 2;\nvar SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION;\nvar SCOPE_ASYNC = 4;\nvar SCOPE_GENERATOR = 8;\nvar SCOPE_ARROW = 16;\nvar SCOPE_SIMPLE_CATCH = 32;\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);\n}\n\n// Used in checkLVal and declareName to determine the type of a binding\nvar BIND_NONE = 0;\nvar BIND_VAR = 1;\nvar BIND_LEXICAL = 2;\nvar BIND_FUNCTION = 3;\nvar BIND_SIMPLE_CATCH = 4;\nvar BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\");\n}\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--) {\n      if (reserved = reservedWords[v]) {\n        break;\n      }\n    }\n    if (options.sourceType === \"module\") {\n      reserved += \" await\";\n    }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\") {\n    this.skipLineComment(2);\n  }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n};\nvar prototypeAccessors = {\n  inFunction: {\n    configurable: true\n  },\n  inGenerator: {\n    configurable: true\n  },\n  inAsync: {\n    configurable: true\n  }\n};\nParser.prototype.parse = function parse() {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node);\n};\nprototypeAccessors.inFunction.get = function () {\n  return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n};\nprototypeAccessors.inGenerator.get = function () {\n  return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0;\n};\nprototypeAccessors.inAsync.get = function () {\n  return (this.currentVarScope().flags & SCOPE_ASYNC) > 0;\n};\nParser.extend = function extend() {\n  var plugins = [],\n    len = arguments.length;\n  while (len--) plugins[len] = arguments[len];\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) {\n    cls = plugins[i](cls);\n  }\n  return cls;\n};\nParser.parse = function parse(input, options) {\n  return new this(options, input).parse();\n};\nParser.parseExpressionAt = function parseExpressionAt(input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression();\n};\nParser.tokenizer = function tokenizer(input, options) {\n  return new this(options, input);\n};\nObject.defineProperties(Parser.prototype, prototypeAccessors);\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function (start) {\n  var this$1 = this;\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) {\n      return false;\n    }\n    if ((match[1] || match[2]) === \"use strict\") {\n      return true;\n    }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function (type) {\n  if (this.type === type) {\n    this.next();\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function (name) {\n  return this.type === types.name && this.value === name && !this.containsEsc;\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function (name) {\n  if (!this.isContextual(name)) {\n    return false;\n  }\n  this.next();\n  return true;\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function (name) {\n  if (!this.eatContextual(name)) {\n    this.unexpected();\n  }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function () {\n  return this.type === types.eof || this.type === types.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\npp.insertSemicolon = function () {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon) {\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n    }\n    return true;\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function () {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) {\n    this.unexpected();\n  }\n};\npp.afterTrailingComma = function (tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma) {\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n    }\n    if (!notNext) {\n      this.next();\n    }\n    return true;\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function (type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function (pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\nfunction DestructuringErrors() {\n  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n}\npp.checkPatternErrors = function (refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) {\n    return;\n  }\n  if (refDestructuringErrors.trailingComma > -1) {\n    this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\");\n  }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) {\n    this.raiseRecoverable(parens, \"Parenthesized pattern\");\n  }\n};\npp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) {\n    return false;\n  }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) {\n    return shorthandAssign >= 0 || doubleProto >= 0;\n  }\n  if (shorthandAssign >= 0) {\n    this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\");\n  }\n  if (doubleProto >= 0) {\n    this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\");\n  }\n};\npp.checkYieldAwaitInDefaultParams = function () {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {\n    this.raise(this.yieldPos, \"Yield expression cannot be a default value\");\n  }\n  if (this.awaitPos) {\n    this.raise(this.awaitPos, \"Await expression cannot be a default value\");\n  }\n};\npp.isSimpleAssignTarget = function (expr) {\n  if (expr.type === \"ParenthesizedExpression\") {\n    return this.isSimpleAssignTarget(expr.expression);\n  }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\";\n};\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function (node) {\n  var this$1 = this;\n  var exports = {};\n  if (!node.body) {\n    node.body = [];\n  }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\");\n};\nvar loopLabel = {\n  kind: \"loop\"\n};\nvar switchLabel = {\n  kind: \"switch\"\n};\npp$1.isLet = function () {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) {\n    return false;\n  }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length,\n    nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) {\n    return true;\n  } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) {\n      ++pos;\n    }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function () {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\")) {\n    return false;\n  }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === \"function\" && (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)));\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function (context, topLevel, exports) {\n  var starttype = this.type,\n    node = this.startNode(),\n    kind;\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case types._break:\n    case types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case types._debugger:\n      return this.parseDebuggerStatement(node);\n    case types._do:\n      return this.parseDoStatement(node);\n    case types._for:\n      return this.parseForStatement(node);\n    case types._function:\n      if (context && (this.strict || context !== \"if\") && this.options.ecmaVersion >= 6) {\n        this.unexpected();\n      }\n      return this.parseFunctionStatement(node, false, !context);\n    case types._class:\n      if (context) {\n        this.unexpected();\n      }\n      return this.parseClass(node, true);\n    case types._if:\n      return this.parseIfStatement(node);\n    case types._return:\n      return this.parseReturnStatement(node);\n    case types._switch:\n      return this.parseSwitchStatement(node);\n    case types._throw:\n      return this.parseThrowStatement(node);\n    case types._try:\n      return this.parseTryStatement(node);\n    case types._const:\n    case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") {\n        this.unexpected();\n      }\n      return this.parseVarStatement(node, kind);\n    case types._while:\n      return this.parseWhileStatement(node);\n    case types._with:\n      return this.parseWithStatement(node);\n    case types.braceL:\n      return this.parseBlock(true, node);\n    case types.semi:\n      return this.parseEmptyStatement(node);\n    case types._export:\n    case types._import:\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) {\n          this.raise(this.start, \"'import' and 'export' may only appear at the top level\");\n        }\n        if (!this.inModule) {\n          this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\");\n        }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports);\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) {\n          this.unexpected();\n        }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context);\n      }\n      var maybeName = this.value,\n        expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n        return this.parseLabeledStatement(node, maybeName, expr, context);\n      } else {\n        return this.parseExpressionStatement(node, expr);\n      }\n  }\n};\npp$1.parseBreakContinueStatement = function (node, keyword) {\n  var this$1 = this;\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) {\n    node.label = null;\n  } else if (this.type !== types.name) {\n    this.unexpected();\n  } else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) {\n        break;\n      }\n      if (node.label && isBreak) {\n        break;\n      }\n    }\n  }\n  if (i === this.labels.length) {\n    this.raise(node.start, \"Unsyntactic \" + keyword);\n  }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n};\npp$1.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\");\n};\npp$1.parseDoStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6) {\n    this.eat(types.semi);\n  } else {\n    this.semicolon();\n  }\n  return this.finishNode(node, \"DoWhileStatement\");\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function (node) {\n  this.next();\n  var awaitAt = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual(\"await\") ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, null);\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(),\n      kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) && init$1.declarations.length === 1 && !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) {\n            this.unexpected(awaitAt);\n          }\n        } else {\n          node.await = awaitAt > -1;\n        }\n      }\n      return this.parseForIn(node, init$1);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init$1);\n  }\n  var refDestructuringErrors = new DestructuringErrors();\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual(\"of\")) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n      } else {\n        node.await = awaitAt > -1;\n      }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init);\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) {\n    this.unexpected(awaitAt);\n  }\n  return this.parseFor(node, init);\n};\npp$1.parseFunctionStatement = function (node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);\n};\npp$1.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\");\n};\npp$1.parseReturnStatement = function (node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction) {\n    this.raise(this.start, \"'return' outside of function\");\n  }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) {\n    node.argument = null;\n  } else {\n    node.argument = this.parseExpression();\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ReturnStatement\");\n};\npp$1.parseSwitchStatement = function (node) {\n  var this$1 = this;\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) {\n        this$1.finishNode(cur, \"SwitchCase\");\n      }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) {\n          this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\");\n        }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) {\n        this$1.unexpected();\n      }\n      cur.consequent.push(this$1.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) {\n    this.finishNode(cur, \"SwitchCase\");\n  }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\");\n};\npp$1.parseThrowStatement = function (node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {\n    this.raise(this.lastTokEnd, \"Illegal newline after throw\");\n  }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\");\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\npp$1.parseTryStatement = function (node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) {\n        this.unexpected();\n      }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer) {\n    this.raise(node.start, \"Missing catch or finally clause\");\n  }\n  return this.finishNode(node, \"TryStatement\");\n};\npp$1.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\");\n};\npp$1.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\");\n};\npp$1.parseWithStatement = function (node) {\n  if (this.strict) {\n    this.raise(this.start, \"'with' in strict mode\");\n  }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\");\n};\npp$1.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\");\n};\npp$1.parseLabeledStatement = function (node, maybeName, expr, context) {\n  var this$1 = this;\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1) {\n    var label = list[i$1];\n    if (label.name === maybeName) {\n      this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    }\n  }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else {\n      break;\n    }\n  }\n  this.labels.push({\n    name: maybeName,\n    kind: kind,\n    statementStart: this.start\n  });\n  node.body = this.parseStatement(context);\n  if (node.body.type === \"ClassDeclaration\" || node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" || node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async)) {\n    this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\");\n  }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\");\n};\npp$1.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\");\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function (createNewLexicalScope, node) {\n  var this$1 = this;\n  if (createNewLexicalScope === void 0) createNewLexicalScope = true;\n  if (node === void 0) node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterScope(0);\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitScope();\n  }\n  return this.finishNode(node, \"BlockStatement\");\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitScope();\n  node.body = this.parseStatement(\"for\");\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\");\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function (node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" || init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (this.strict || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, \"Invalid assignment in for-in loop head\");\n    }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitScope();\n  node.body = this.parseStatement(\"for\");\n  this.labels.pop();\n  return this.finishNode(node, type);\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function (node, isFor, kind) {\n  var this$1 = this;\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\"))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) {\n      break;\n    }\n  }\n  return node;\n};\npp$1.parseVarId = function (decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\nvar FUNC_STATEMENT = 1;\nvar FUNC_HANGING_STATEMENT = 2;\nvar FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function (node, statement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    node.generator = this.eat(types.star);\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  if (statement & FUNC_STATEMENT) {\n    node.id = statement & FUNC_NULLABLE_ID && this.type !== types.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT)) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? BIND_LEXICAL : BIND_FUNCTION);\n    }\n  }\n  var oldYieldPos = this.yieldPos,\n    oldAwaitPos = this.awaitPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n  if (!(statement & FUNC_STATEMENT)) {\n    node.id = this.type === types.name ? this.parseIdent() : null;\n  }\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  return this.finishNode(node, statement & FUNC_STATEMENT ? \"FunctionDeclaration\" : \"FunctionExpression\");\n};\npp$1.parseFunctionParams = function (node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function (node, isStatement) {\n  var this$1 = this;\n  this.next();\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var element = this$1.parseClassElement();\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) {\n          this$1.raise(element.start, \"Duplicate constructor in the same class\");\n        }\n        hadConstructor = true;\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n};\npp$1.parseClassElement = function () {\n  var this$1 = this;\n  if (this.eat(types.semi)) {\n    return null;\n  }\n  var method = this.startNode();\n  var tryContextual = function tryContextual(k, noLineBreak) {\n    if (noLineBreak === void 0) noLineBreak = false;\n    var start = this$1.start,\n      startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) {\n      return false;\n    }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n      return true;\n    }\n    if (method.key) {\n      this$1.unexpected();\n    }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false;\n  };\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) {\n    this.parsePropertyName(method);\n  }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" || key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") {\n      this.raise(key.start, \"Constructor can't have get/set modifier\");\n    }\n    if (isGenerator) {\n      this.raise(key.start, \"Constructor can't be a generator\");\n    }\n    if (isAsync) {\n      this.raise(key.start, \"Constructor can't be an async method\");\n    }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0) {\n    this.raiseRecoverable(method.value.start, \"getter should have no params\");\n  }\n  if (method.kind === \"set\" && method.value.params.length !== 1) {\n    this.raiseRecoverable(method.value.start, \"setter should have exactly one param\");\n  }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\") {\n    this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\");\n  }\n  return method;\n};\npp$1.parseClassMethod = function (method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  return this.finishNode(method, \"MethodDefinition\");\n};\npp$1.parseClassId = function (node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\npp$1.parseClassSuper = function (node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function (node, exports) {\n  var this$1 = this;\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) {\n      this.unexpected();\n    }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\");\n  }\n  if (this.eat(types._default)) {\n    // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync, true);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\");\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\") {\n      this.checkVariableExport(exports, node.declaration.declarations);\n    } else {\n      this.checkExport(exports, node.declaration.id.name, node.declaration.id.start);\n    }\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) {\n        this.unexpected();\n      }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n        this$1.checkUnreserved(spec.local);\n      }\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\");\n};\npp$1.checkExport = function (exports, name, pos) {\n  if (!exports) {\n    return;\n  }\n  if (has(exports, name)) {\n    this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\");\n  }\n  exports[name] = true;\n};\npp$1.checkPatternExport = function (exports, pat) {\n  var this$1 = this;\n  var type = pat.type;\n  if (type === \"Identifier\") {\n    this.checkExport(exports, pat.name, pat.start);\n  } else if (type === \"ObjectPattern\") {\n    for (var i = 0, list = pat.properties; i < list.length; i += 1) {\n      var prop = list[i];\n      this$1.checkPatternExport(exports, prop);\n    }\n  } else if (type === \"ArrayPattern\") {\n    for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n      if (elt) {\n        this$1.checkPatternExport(exports, elt);\n      }\n    }\n  } else if (type === \"Property\") {\n    this.checkPatternExport(exports, pat.value);\n  } else if (type === \"AssignmentPattern\") {\n    this.checkPatternExport(exports, pat.left);\n  } else if (type === \"RestElement\") {\n    this.checkPatternExport(exports, pat.argument);\n  } else if (type === \"ParenthesizedExpression\") {\n    this.checkPatternExport(exports, pat.expression);\n  }\n};\npp$1.checkVariableExport = function (exports, decls) {\n  var this$1 = this;\n  if (!exports) {\n    return;\n  }\n  for (var i = 0, list = decls; i < list.length; i += 1) {\n    var decl = list[i];\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\npp$1.shouldParseExportStatement = function () {\n  return this.type.keyword === \"var\" || this.type.keyword === \"const\" || this.type.keyword === \"class\" || this.type.keyword === \"function\" || this.isLet() || this.isAsyncFunction();\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function (exports) {\n  var this$1 = this;\n  var nodes = [],\n    first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes;\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function (node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\");\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function () {\n  var this$1 = this;\n  var nodes = [],\n    first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) {\n      return nodes;\n    }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes;\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, BIND_LEXICAL);\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes;\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function (statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function (statement) {\n  return statement.type === \"ExpressionStatement\" && statement.expression.type === \"Literal\" && typeof statement.expression.value === \"string\" && (\n  // Reject parenthesized strings.\n  this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\");\n};\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function (node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\") {\n          this.raise(node.start, \"Can not use 'await' as identifier inside an async function\");\n        }\n        break;\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n          this$1.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (prop.type === \"RestElement\" && (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")) {\n            this$1.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break;\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") {\n          this.raise(node.key.start, \"Object pattern can't contain getter or setter\");\n        }\n        this.toAssignable(node.value, isBinding);\n        break;\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n        this.toAssignableList(node.elements, isBinding);\n        break;\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\") {\n          this.raise(node.argument.start, \"Rest elements cannot have a default value\");\n        }\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n      case \"AssignmentPattern\":\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding);\n        break;\n      case \"MemberExpression\":\n        if (!isBinding) {\n          break;\n        }\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n  }\n  return node;\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function (exprList, isBinding) {\n  var this$1 = this;\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) {\n      this$1.toAssignable(elt, isBinding);\n    }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\") {\n      this.unexpected(last.argument.start);\n    }\n  }\n  return exprList;\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function (refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\");\n};\npp$2.parseRestBinding = function () {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name) {\n    this.unexpected();\n  }\n  node.argument = this.parseBindingAtom();\n  return this.finishNode(node, \"RestElement\");\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function () {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\");\n      case types.braceL:\n        return this.parseObj(true);\n    }\n  }\n  return this.parseIdent();\n};\npp$2.parseBindingList = function (close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n  var elts = [],\n    first = true;\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this$1.expect(types.comma);\n    }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break;\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) {\n        this$1.raise(this$1.start, \"Comma is not permitted after the rest element\");\n      }\n      this$1.expect(close);\n      break;\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts;\n};\npp$2.parseBindingListItem = function (param) {\n  return param;\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) {\n    return left;\n  }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\");\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function (expr, bindingType, checkClashes) {\n  var this$1 = this;\n  if (bindingType === void 0) bindingType = BIND_NONE;\n  switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {\n        this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\");\n      }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name)) {\n          this.raiseRecoverable(expr.start, \"Argument name clash\");\n        }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) {\n        this.declareName(expr.name, bindingType, expr.start);\n      }\n      break;\n    case \"MemberExpression\":\n      if (bindingType) {\n        this.raiseRecoverable(expr.start, \"Binding member expression\");\n      }\n      break;\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n        this$1.checkLVal(prop, bindingType, checkClashes);\n      }\n      break;\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break;\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n        if (elem) {\n          this$1.checkLVal(elem, bindingType, checkClashes);\n        }\n      }\n      break;\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break;\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break;\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break;\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function (prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\") {\n    return;\n  }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {\n    return;\n  }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n    case \"Identifier\":\n      name = key.name;\n      break;\n    case \"Literal\":\n      name = String(key.value);\n      break;\n    default:\n      return;\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) {\n          refDestructuringErrors.doubleProto = key.start;\n        }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return;\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition) {\n      this.raiseRecoverable(key.start, \"Redefinition of property\");\n    }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function (noIn, refDestructuringErrors) {\n  var this$1 = this;\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) {\n      node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors));\n    }\n    return this.finishNode(node, \"SequenceExpression\");\n  }\n  return expr;\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) {\n      return this.parseYield();\n    }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else {\n      this.exprAllowed = false;\n    }\n  }\n  var ownDestructuringErrors = false,\n    oldParenAssign = -1,\n    oldTrailingComma = -1,\n    oldShorthandAssign = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldShorthandAssign = refDestructuringErrors.shorthandAssign;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.shorthandAssign = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors();\n    ownDestructuringErrors = true;\n  }\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name) {\n    this.potentialArrowAt = this.start;\n  }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) {\n    left = afterLeftParse.call(this, left, startPos, startLoc);\n  }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) {\n      DestructuringErrors.call(refDestructuringErrors);\n    }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\");\n  } else {\n    if (ownDestructuringErrors) {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n  }\n  if (oldParenAssign > -1) {\n    refDestructuringErrors.parenthesizedAssign = oldParenAssign;\n  }\n  if (oldTrailingComma > -1) {\n    refDestructuringErrors.trailingComma = oldTrailingComma;\n  }\n  if (oldShorthandAssign > -1) {\n    refDestructuringErrors.shorthandAssign = oldShorthandAssign;\n  }\n  return left;\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  return expr;\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start,\n        startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n  return left;\n};\npp$3.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\");\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n  var startPos = this.start,\n    startLoc = this.startLoc,\n    expr;\n  if (this.isContextual(\"await\") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(),\n      update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) {\n      this.checkLVal(node.argument);\n    } else if (this.strict && node.operator === \"delete\" && node.argument.type === \"Identifier\") {\n      this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\");\n    } else {\n      sawUnary = true;\n    }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) {\n      return expr;\n    }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n  if (!sawUnary && this.eat(types.starstar)) {\n    return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false);\n  } else {\n    return expr;\n  }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function (refDestructuringErrors) {\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) {\n    return expr;\n  }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) {\n      refDestructuringErrors.parenthesizedAssign = -1;\n    }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) {\n      refDestructuringErrors.parenthesizedBind = -1;\n    }\n  }\n  return result;\n};\npp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = void 0;;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) {\n        this$1.expect(types.bracketR);\n      }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors(),\n        oldYieldPos = this$1.yieldPos,\n        oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true);\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({\n        isTagged: true\n      });\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base;\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function (refDestructuringErrors) {\n  var node,\n    canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n    case types._super:\n      if (!this.inFunction) {\n        this.raise(this.start, \"'super' outside of function or class\");\n      }\n      node = this.startNode();\n      this.next();\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super Arguments\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL) {\n        this.unexpected();\n      }\n      return this.finishNode(node, \"Super\");\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\");\n    case types.name:\n      var startPos = this.start,\n        startLoc = this.startLoc,\n        containsEsc = this.containsEsc;\n      var id = this.parseIdent(this.type !== types.name);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function)) {\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true);\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow)) {\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false);\n        }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent();\n          if (this.canInsertSemicolon() || !this.eat(types.arrow)) {\n            this.unexpected();\n          }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true);\n        }\n      }\n      return id;\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {\n        pattern: value.pattern,\n        flags: value.flags\n      };\n      return node;\n    case types.num:\n    case types.string:\n      return this.parseLiteral(this.value);\n    case types._null:\n    case types._true:\n    case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\");\n    case types.parenL:\n      var start = this.start,\n        expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {\n          refDestructuringErrors.parenthesizedAssign = start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = start;\n        }\n      }\n      return expr;\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\");\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors);\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0);\n    case types._class:\n      return this.parseClass(this.startNode(), false);\n    case types._new:\n      return this.parseNew();\n    case types.backQuote:\n      return this.parseTemplate();\n    default:\n      this.unexpected();\n  }\n};\npp$3.parseLiteral = function (value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\");\n};\npp$3.parseParenExpression = function () {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val;\n};\npp$3.parseParenAndDistinguishExpression = function (canBeArrow) {\n  var this$1 = this;\n  var startPos = this.start,\n    startLoc = this.startLoc,\n    val,\n    allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n    var innerStartPos = this.start,\n      innerStartLoc = this.startLoc;\n    var exprList = [],\n      first = true,\n      lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors(),\n      oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break;\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) {\n          this$1.raise(this$1.start, \"Comma is not permitted after the rest element\");\n        }\n        break;\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start,\n      innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList);\n    }\n    if (!exprList.length || lastIsComma) {\n      this.unexpected(this.lastTokStart);\n    }\n    if (spreadStart) {\n      this.unexpected(spreadStart);\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\");\n  } else {\n    return val;\n  }\n};\npp$3.parseParenItem = function (item) {\n  return item;\n};\npp$3.parseParenArrowList = function (startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\npp$3.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc) {\n      this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\");\n    }\n    if (!this.inNonArrowFunction()) {\n      this.raiseRecoverable(node.start, \"new.target can only be used in functions\");\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  var startPos = this.start,\n    startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) {\n    node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);\n  } else {\n    node.arguments = empty$1;\n  }\n  return this.finishNode(node, \"NewExpression\");\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function (ref) {\n  var isTagged = ref.isTagged;\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\");\n};\npp$3.parseTemplate = function (ref) {\n  var this$1 = this;\n  if (ref === void 0) ref = {};\n  var isTagged = ref.isTagged;\n  if (isTagged === void 0) isTagged = false;\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({\n    isTagged: isTagged\n  });\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) {\n      this$1.raise(this$1.pos, \"Unterminated template literal\");\n    }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({\n      isTagged: isTagged\n    }));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\");\n};\npp$3.isAsyncProp = function (prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" && (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function (isPattern, refDestructuringErrors) {\n  var this$1 = this;\n  var node = this.startNode(),\n    first = true,\n    propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) {\n      this$1.checkPropClash(prop, propHash, refDestructuringErrors);\n    }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\");\n};\npp$3.parseProperty = function (isPattern, refDestructuringErrors) {\n  var prop = this.startNode(),\n    isGenerator,\n    isAsync,\n    startPos,\n    startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\");\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\");\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\");\n};\npp$3.parsePropertyValue = function (prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon) {\n    this.unexpected();\n  }\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) {\n      this.unexpected();\n    }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" && (prop.key.name === \"get\" || prop.key.name === \"set\") && this.type !== types.comma && this.type !== types.braceR) {\n    if (isGenerator || isAsync) {\n      this.unexpected();\n    }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\") {\n        this.raiseRecoverable(start, \"getter should have no params\");\n      } else {\n        this.raiseRecoverable(start, \"setter should have exactly one param\");\n      }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\");\n      }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0) {\n        refDestructuringErrors.shorthandAssign = this.start;\n      }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else {\n    this.unexpected();\n  }\n};\npp$3.parsePropertyName = function (prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key;\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true);\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function (node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = false;\n  }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function (isGenerator, isAsync) {\n  var node = this.startNode(),\n    oldYieldPos = this.yieldPos,\n    oldAwaitPos = this.awaitPos;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = isGenerator;\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator));\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  return this.finishNode(node, \"FunctionExpression\");\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function (node, params, isAsync) {\n  var oldYieldPos = this.yieldPos,\n    oldAwaitPos = this.awaitPos;\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\");\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function (node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict,\n    useStrict = false;\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple) {\n        this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\");\n      }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) {\n      this.strict = true;\n    }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n\n  // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n  if (this.strict && node.id) {\n    this.checkLVal(node.id, BIND_OUTSIDE);\n  }\n  this.strict = oldStrict;\n};\npp$3.isSimpleParamList = function (params) {\n  for (var i = 0, list = params; i < list.length; i += 1) {\n    var param = list[i];\n    if (param.type !== \"Identifier\") {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function (node, allowDuplicates) {\n  var this$1 = this;\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1) {\n    var param = list[i];\n    this$1.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n  var elts = [],\n    first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n    var elt = void 0;\n    if (allowEmpty && this$1.type === types.comma) {\n      elt = null;\n    } else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this$1.start;\n      }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts;\n};\npp$3.checkUnreserved = function (ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n  if (this.inGenerator && name === \"yield\") {\n    this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\");\n  }\n  if (this.inAsync && name === \"await\") {\n    this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\");\n  }\n  if (this.keywords.test(name)) {\n    this.raise(start, \"Unexpected keyword '\" + name + \"'\");\n  }\n  if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf(\"\\\\\") !== -1) {\n    return;\n  }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\") {\n      this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\");\n    }\n    this.raiseRecoverable(start, \"The keyword '\" + name + \"' is reserved\");\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function (liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") {\n    liberal = false;\n  }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n  }\n  return node;\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function () {\n  if (!this.yieldPos) {\n    this.yieldPos = this.start;\n  }\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || this.type !== types.star && !this.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\");\n};\npp$3.parseAwait = function () {\n  if (!this.awaitPos) {\n    this.awaitPos = this.start;\n  }\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\");\n};\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos;\n  err.loc = loc;\n  err.raisedAt = this.pos;\n  throw err;\n};\npp$4.raiseRecoverable = pp$4.raise;\npp$4.curPosition = function () {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n};\nvar pp$5 = Parser.prototype;\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterScope = function (flags) {\n  this.scopeStack.push(new Scope(flags));\n};\npp$5.exitScope = function () {\n  this.scopeStack.pop();\n};\npp$5.declareName = function (name, bindingType, pos) {\n  var this$1 = this;\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    redeclared = scope$2.lexical.indexOf(name) > -1;\n    scope$2.var.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this$1.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) {\n        redeclared = true;\n      }\n      scope$3.var.push(name);\n      if (scope$3.flags & SCOPE_VAR) {\n        break;\n      }\n    }\n  }\n  if (redeclared) {\n    this.raiseRecoverable(pos, \"Identifier '\" + name + \"' has already been declared\");\n  }\n};\npp$5.currentScope = function () {\n  return this.scopeStack[this.scopeStack.length - 1];\n};\npp$5.currentVarScope = function () {\n  var this$1 = this;\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this$1.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) {\n      return scope;\n    }\n  }\n};\npp$5.inNonArrowFunction = function () {\n  var this$1 = this;\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    if (this$1.scopeStack[i].flags & SCOPE_FUNCTION && !(this$1.scopeStack[i].flags & SCOPE_ARROW)) {\n      return true;\n    }\n  }\n  return false;\n};\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations) {\n    this.loc = new SourceLocation(parser, loc);\n  }\n  if (parser.options.directSourceFile) {\n    this.sourceFile = parser.options.directSourceFile;\n  }\n  if (parser.options.ranges) {\n    this.range = [pos, 0];\n  }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\npp$6.startNode = function () {\n  return new Node(this, this.start, this.startLoc);\n};\npp$6.startNodeAt = function (pos, loc) {\n  return new Node(this, pos, loc);\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations) {\n    node.loc.end = loc;\n  }\n  if (this.options.ranges) {\n    node.range[1] = pos;\n  }\n  return node;\n}\npp$6.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) {\n    return p.tryReadTemplateToken();\n  }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\nvar pp$7 = Parser.prototype;\npp$7.initialContext = function () {\n  return [types$1.b_stat];\n};\npp$7.braceIsBlock = function (prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat) {\n    return true;\n  }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr)) {\n    return !parent.isExpr;\n  }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed) {\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n    return true;\n  }\n  if (prevType === types.braceL) {\n    return parent === types$1.b_stat;\n  }\n  if (prevType === types._var || prevType === types.name) {\n    return false;\n  }\n  return !this.exprAllowed;\n};\npp$7.inGeneratorContext = function () {\n  var this$1 = this;\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\") {\n      return context.generator;\n    }\n  }\n  return false;\n};\npp$7.updateContext = function (prevType) {\n  var update,\n    type = this.type;\n  if (type.keyword && prevType === types.dot) {\n    this.exprAllowed = false;\n  } else if (update = type.updateContext) {\n    update.call(this, prevType);\n  } else {\n    this.exprAllowed = type.beforeExpr;\n  }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return;\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\ntypes.braceL.updateContext = function (prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\ntypes.dollarBraceL.updateContext = function () {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\ntypes.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.context.push(types$1.f_expr);\n  } else {\n    this.context.push(types$1.f_stat);\n  }\n  this.exprAllowed = false;\n};\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.q_tmpl) {\n    this.context.pop();\n  } else {\n    this.context.push(types$1.q_tmpl);\n  }\n  this.exprAllowed = false;\n};\ntypes.star.updateContext = function (prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr) {\n      this.context[index] = types$1.f_expr_gen;\n    } else {\n      this.context[index] = types$1.f_gen;\n    }\n  }\n  this.exprAllowed = true;\n};\ntypes.name.updateContext = function (prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed || this.value === \"yield\" && this.inGeneratorContext()) {\n      allowed = true;\n    }\n  }\n  this.exprAllowed = allowed;\n};\nvar data = {\n  \"$LONE\": [\"ASCII\", \"ASCII_Hex_Digit\", \"AHex\", \"Alphabetic\", \"Alpha\", \"Any\", \"Assigned\", \"Bidi_Control\", \"Bidi_C\", \"Bidi_Mirrored\", \"Bidi_M\", \"Case_Ignorable\", \"CI\", \"Cased\", \"Changes_When_Casefolded\", \"CWCF\", \"Changes_When_Casemapped\", \"CWCM\", \"Changes_When_Lowercased\", \"CWL\", \"Changes_When_NFKC_Casefolded\", \"CWKCF\", \"Changes_When_Titlecased\", \"CWT\", \"Changes_When_Uppercased\", \"CWU\", \"Dash\", \"Default_Ignorable_Code_Point\", \"DI\", \"Deprecated\", \"Dep\", \"Diacritic\", \"Dia\", \"Emoji\", \"Emoji_Component\", \"Emoji_Modifier\", \"Emoji_Modifier_Base\", \"Emoji_Presentation\", \"Extender\", \"Ext\", \"Grapheme_Base\", \"Gr_Base\", \"Grapheme_Extend\", \"Gr_Ext\", \"Hex_Digit\", \"Hex\", \"IDS_Binary_Operator\", \"IDSB\", \"IDS_Trinary_Operator\", \"IDST\", \"ID_Continue\", \"IDC\", \"ID_Start\", \"IDS\", \"Ideographic\", \"Ideo\", \"Join_Control\", \"Join_C\", \"Logical_Order_Exception\", \"LOE\", \"Lowercase\", \"Lower\", \"Math\", \"Noncharacter_Code_Point\", \"NChar\", \"Pattern_Syntax\", \"Pat_Syn\", \"Pattern_White_Space\", \"Pat_WS\", \"Quotation_Mark\", \"QMark\", \"Radical\", \"Regional_Indicator\", \"RI\", \"Sentence_Terminal\", \"STerm\", \"Soft_Dotted\", \"SD\", \"Terminal_Punctuation\", \"Term\", \"Unified_Ideograph\", \"UIdeo\", \"Uppercase\", \"Upper\", \"Variation_Selector\", \"VS\", \"White_Space\", \"space\", \"XID_Continue\", \"XIDC\", \"XID_Start\", \"XIDS\"],\n  \"General_Category\": [\"Cased_Letter\", \"LC\", \"Close_Punctuation\", \"Pe\", \"Connector_Punctuation\", \"Pc\", \"Control\", \"Cc\", \"cntrl\", \"Currency_Symbol\", \"Sc\", \"Dash_Punctuation\", \"Pd\", \"Decimal_Number\", \"Nd\", \"digit\", \"Enclosing_Mark\", \"Me\", \"Final_Punctuation\", \"Pf\", \"Format\", \"Cf\", \"Initial_Punctuation\", \"Pi\", \"Letter\", \"L\", \"Letter_Number\", \"Nl\", \"Line_Separator\", \"Zl\", \"Lowercase_Letter\", \"Ll\", \"Mark\", \"M\", \"Combining_Mark\", \"Math_Symbol\", \"Sm\", \"Modifier_Letter\", \"Lm\", \"Modifier_Symbol\", \"Sk\", \"Nonspacing_Mark\", \"Mn\", \"Number\", \"N\", \"Open_Punctuation\", \"Ps\", \"Other\", \"C\", \"Other_Letter\", \"Lo\", \"Other_Number\", \"No\", \"Other_Punctuation\", \"Po\", \"Other_Symbol\", \"So\", \"Paragraph_Separator\", \"Zp\", \"Private_Use\", \"Co\", \"Punctuation\", \"P\", \"punct\", \"Separator\", \"Z\", \"Space_Separator\", \"Zs\", \"Spacing_Mark\", \"Mc\", \"Surrogate\", \"Cs\", \"Symbol\", \"S\", \"Titlecase_Letter\", \"Lt\", \"Unassigned\", \"Cn\", \"Uppercase_Letter\", \"Lu\"],\n  \"Script\": [\"Adlam\", \"Adlm\", \"Ahom\", \"Anatolian_Hieroglyphs\", \"Hluw\", \"Arabic\", \"Arab\", \"Armenian\", \"Armn\", \"Avestan\", \"Avst\", \"Balinese\", \"Bali\", \"Bamum\", \"Bamu\", \"Bassa_Vah\", \"Bass\", \"Batak\", \"Batk\", \"Bengali\", \"Beng\", \"Bhaiksuki\", \"Bhks\", \"Bopomofo\", \"Bopo\", \"Brahmi\", \"Brah\", \"Braille\", \"Brai\", \"Buginese\", \"Bugi\", \"Buhid\", \"Buhd\", \"Canadian_Aboriginal\", \"Cans\", \"Carian\", \"Cari\", \"Caucasian_Albanian\", \"Aghb\", \"Chakma\", \"Cakm\", \"Cham\", \"Cherokee\", \"Cher\", \"Common\", \"Zyyy\", \"Coptic\", \"Copt\", \"Qaac\", \"Cuneiform\", \"Xsux\", \"Cypriot\", \"Cprt\", \"Cyrillic\", \"Cyrl\", \"Deseret\", \"Dsrt\", \"Devanagari\", \"Deva\", \"Duployan\", \"Dupl\", \"Egyptian_Hieroglyphs\", \"Egyp\", \"Elbasan\", \"Elba\", \"Ethiopic\", \"Ethi\", \"Georgian\", \"Geor\", \"Glagolitic\", \"Glag\", \"Gothic\", \"Goth\", \"Grantha\", \"Gran\", \"Greek\", \"Grek\", \"Gujarati\", \"Gujr\", \"Gurmukhi\", \"Guru\", \"Han\", \"Hani\", \"Hangul\", \"Hang\", \"Hanunoo\", \"Hano\", \"Hatran\", \"Hatr\", \"Hebrew\", \"Hebr\", \"Hiragana\", \"Hira\", \"Imperial_Aramaic\", \"Armi\", \"Inherited\", \"Zinh\", \"Qaai\", \"Inscriptional_Pahlavi\", \"Phli\", \"Inscriptional_Parthian\", \"Prti\", \"Javanese\", \"Java\", \"Kaithi\", \"Kthi\", \"Kannada\", \"Knda\", \"Katakana\", \"Kana\", \"Kayah_Li\", \"Kali\", \"Kharoshthi\", \"Khar\", \"Khmer\", \"Khmr\", \"Khojki\", \"Khoj\", \"Khudawadi\", \"Sind\", \"Lao\", \"Laoo\", \"Latin\", \"Latn\", \"Lepcha\", \"Lepc\", \"Limbu\", \"Limb\", \"Linear_A\", \"Lina\", \"Linear_B\", \"Linb\", \"Lisu\", \"Lycian\", \"Lyci\", \"Lydian\", \"Lydi\", \"Mahajani\", \"Mahj\", \"Malayalam\", \"Mlym\", \"Mandaic\", \"Mand\", \"Manichaean\", \"Mani\", \"Marchen\", \"Marc\", \"Masaram_Gondi\", \"Gonm\", \"Meetei_Mayek\", \"Mtei\", \"Mende_Kikakui\", \"Mend\", \"Meroitic_Cursive\", \"Merc\", \"Meroitic_Hieroglyphs\", \"Mero\", \"Miao\", \"Plrd\", \"Modi\", \"Mongolian\", \"Mong\", \"Mro\", \"Mroo\", \"Multani\", \"Mult\", \"Myanmar\", \"Mymr\", \"Nabataean\", \"Nbat\", \"New_Tai_Lue\", \"Talu\", \"Newa\", \"Nko\", \"Nkoo\", \"Nushu\", \"Nshu\", \"Ogham\", \"Ogam\", \"Ol_Chiki\", \"Olck\", \"Old_Hungarian\", \"Hung\", \"Old_Italic\", \"Ital\", \"Old_North_Arabian\", \"Narb\", \"Old_Permic\", \"Perm\", \"Old_Persian\", \"Xpeo\", \"Old_South_Arabian\", \"Sarb\", \"Old_Turkic\", \"Orkh\", \"Oriya\", \"Orya\", \"Osage\", \"Osge\", \"Osmanya\", \"Osma\", \"Pahawh_Hmong\", \"Hmng\", \"Palmyrene\", \"Palm\", \"Pau_Cin_Hau\", \"Pauc\", \"Phags_Pa\", \"Phag\", \"Phoenician\", \"Phnx\", \"Psalter_Pahlavi\", \"Phlp\", \"Rejang\", \"Rjng\", \"Runic\", \"Runr\", \"Samaritan\", \"Samr\", \"Saurashtra\", \"Saur\", \"Sharada\", \"Shrd\", \"Shavian\", \"Shaw\", \"Siddham\", \"Sidd\", \"SignWriting\", \"Sgnw\", \"Sinhala\", \"Sinh\", \"Sora_Sompeng\", \"Sora\", \"Soyombo\", \"Soyo\", \"Sundanese\", \"Sund\", \"Syloti_Nagri\", \"Sylo\", \"Syriac\", \"Syrc\", \"Tagalog\", \"Tglg\", \"Tagbanwa\", \"Tagb\", \"Tai_Le\", \"Tale\", \"Tai_Tham\", \"Lana\", \"Tai_Viet\", \"Tavt\", \"Takri\", \"Takr\", \"Tamil\", \"Taml\", \"Tangut\", \"Tang\", \"Telugu\", \"Telu\", \"Thaana\", \"Thaa\", \"Thai\", \"Tibetan\", \"Tibt\", \"Tifinagh\", \"Tfng\", \"Tirhuta\", \"Tirh\", \"Ugaritic\", \"Ugar\", \"Vai\", \"Vaii\", \"Warang_Citi\", \"Wara\", \"Yi\", \"Yiii\", \"Zanabazar_Square\", \"Zanb\"]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\nvar pp$9 = Parser.prototype;\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\nRegExpValidationState.prototype.reset = function reset(start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\nRegExpValidationState.prototype.raise = function raise(message) {\n  this.parser.raiseRecoverable(this.start, \"Invalid regular expression: /\" + this.source + \"/: \" + message);\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at(i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1;\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c;\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00;\n};\nRegExpValidationState.prototype.nextIndex = function nextIndex(i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l;\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1;\n  }\n  return i + 2;\n};\nRegExpValidationState.prototype.current = function current() {\n  return this.at(this.pos);\n};\nRegExpValidationState.prototype.lookahead = function lookahead() {\n  return this.at(this.nextIndex(this.pos));\n};\nRegExpValidationState.prototype.advance = function advance() {\n  this.pos = this.nextIndex(this.pos);\n};\nRegExpValidationState.prototype.eat = function eat(ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true;\n  }\n  return false;\n};\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) {\n    return String.fromCharCode(ch);\n  }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00);\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function (state) {\n  var this$1 = this;\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function (state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function (state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n  this.regexp_disjunction(state);\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function (state) {\n  var this$1 = this;\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function (state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function (state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true;\n  }\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function (state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true;\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true;\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true;\n    }\n  }\n  state.pos = start;\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function (state, noError) {\n  if (noError === void 0) noError = false;\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function (state, noError) {\n  return state.eat(0x2A /* * */) || state.eat(0x2B /* + */) || state.eat(0x3F /* ? */) || this.regexp_eatBracedQuantifier(state, noError);\n};\npp$9.regexp_eatBracedQuantifier = function (state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0,\n      max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true;\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function (state) {\n  return this.regexp_eatPatternCharacters(state) || state.eat(0x2E /* . */) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function (state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$9.regexp_eatUncapturingGroup = function (state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true;\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$9.regexp_eatCapturingGroup = function (state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true;\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function (state) {\n  return state.eat(0x2E /* . */) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function (state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function (state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n  return false;\n};\nfunction isSyntaxCharacter(ch) {\n  return ch === 0x24 /* $ */ || ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ || ch === 0x2E /* . */ || ch === 0x3F /* ? */ || ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ || ch >= 0x7B /* { */ && ch <= 0x7D /* } */;\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function (state) {\n  var ch = state.current();\n  if (ch !== -1 && ch !== 0x24 /* $ */ && !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) && ch !== 0x2E /* . */ && ch !== 0x3F /* ? */ && ch !== 0x5B /* [ */ && ch !== 0x5E /* ^ */ && ch !== 0x7C /* | */) {\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function (state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return;\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function (state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true;\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false;\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function (state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true;\n  }\n  return false;\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function (state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n  state.pos = start;\n  return false;\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F; /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function (state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n  state.pos = start;\n  return false;\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D; /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function (state) {\n  if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {\n    return true;\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false;\n};\npp$9.regexp_eatBackReference = function (state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true;\n    }\n    if (n <= state.numCapturingParens) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$9.regexp_eatKGroupName = function (state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true;\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function (state) {\n  return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);\n};\npp$9.regexp_eatCControlLetter = function (state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return false;\n};\npp$9.regexp_eatZero = function (state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function (state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true;\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function (state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true;\n  }\n  return false;\n};\nfunction isControlLetter(ch) {\n  return ch >= 0x41 /* A */ && ch <= 0x5A /* Z */ || ch >= 0x61 /* a */ && ch <= 0x7A /* z */;\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function (state) {\n  var start = state.pos;\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true;\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true;\n    }\n    if (state.switchU && state.eat(0x7B /* { */) && this.regexp_eatHexDigits(state) && state.eat(0x7D /* } */) && isValidUnicode(state.lastIntValue)) {\n      return true;\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF;\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function (state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true;\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true;\n    }\n    return false;\n  }\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function (state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */);\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function (state) {\n  var ch = state.current();\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true;\n  }\n  if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 0x50 /* P */ || ch === 0x70 /* p */)) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (state.eat(0x7B /* { */) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(0x7D /* } */)) {\n      return true;\n    }\n    state.raise(\"Invalid property name\");\n  }\n  return false;\n};\nfunction isCharacterClassEscape(ch) {\n  return ch === 0x64 /* d */ || ch === 0x44 /* D */ || ch === 0x73 /* s */ || ch === 0x53 /* S */ || ch === 0x77 /* w */ || ch === 0x57 /* W */;\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function (state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true;\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true;\n  }\n  return false;\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function (state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function (state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function (state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\";\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F; /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function (state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\";\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function (state) {\n  return this.regexp_eatUnicodePropertyValue(state);\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function (state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true;\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function (state) {\n  var this$1 = this;\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function (state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true;\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function (state) {\n  var start = state.pos;\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true;\n  }\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true;\n  }\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true;\n    }\n    state.pos = start;\n  }\n  return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function (state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function (state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true;\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start;\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39; /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start;\n};\nfunction isHexDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */ || ch >= 0x41 /* A */ && ch <= 0x46 /* F */ || ch >= 0x61 /* a */ && ch <= 0x66 /* f */;\n}\n\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */);\n  }\n\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */);\n  }\n\n  return ch - 0x30; /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function (state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true;\n  }\n  return false;\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function (state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true;\n  }\n  state.lastIntValue = 0;\n  return false;\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37; /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function (state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false;\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true;\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations) {\n    this.loc = new SourceLocation(p, p.startLoc, p.endLoc);\n  }\n  if (p.options.ranges) {\n    this.range = [p.start, p.end];\n  }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function () {\n  if (this.options.onToken) {\n    this.options.onToken(new Token(this));\n  }\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\npp$8.getToken = function () {\n  this.next();\n  return new Token(this);\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\") {\n  pp$8[Symbol.iterator] = function () {\n    var this$1 = this;\n    return {\n      next: function next() {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        };\n      }\n    };\n  };\n}\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function () {\n  return this.context[this.context.length - 1];\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function () {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) {\n    this.skipSpace();\n  }\n  this.start = this.pos;\n  if (this.options.locations) {\n    this.startLoc = this.curPosition();\n  }\n  if (this.pos >= this.input.length) {\n    return this.finishToken(types.eof);\n  }\n  if (curContext.override) {\n    return curContext.override(this);\n  } else {\n    this.readToken(this.fullCharCodeAtPos());\n  }\n};\npp$8.readToken = function (code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */) {\n    return this.readWord();\n  }\n  return this.getTokenFromCode(code);\n};\npp$8.fullCharCodeAtPos = function () {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) {\n    return code;\n  }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00;\n};\npp$8.skipBlockComment = function () {\n  var this$1 = this;\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos,\n    end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) {\n    this.raise(this.pos - 2, \"Unterminated comment\");\n  }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment) {\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n  }\n};\npp$8.skipLineComment = function (startSkip) {\n  var this$1 = this;\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment) {\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n  }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function () {\n  var this$1 = this;\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n      case 32:\n      case 160:\n        // ' '\n        ++this$1.pos;\n        break;\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n          ++this$1.pos;\n        }\n      case 10:\n      case 8232:\n      case 8233:\n        ++this$1.pos;\n        if (this$1.options.locations) {\n          ++this$1.curLine;\n          this$1.lineStart = this$1.pos;\n        }\n        break;\n      case 47:\n        // '/'\n        switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n          case 42:\n            // '*'\n            this$1.skipBlockComment();\n            break;\n          case 47:\n            this$1.skipLineComment(2);\n            break;\n          default:\n            break loop;\n        }\n        break;\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this$1.pos;\n        } else {\n          break loop;\n        }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function (type, val) {\n  this.end = this.pos;\n  if (this.options.locations) {\n    this.endLoc = this.curPosition();\n  }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function () {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) {\n    return this.readNumber(true);\n  }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n    // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis);\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot);\n  }\n};\npp$8.readToken_slash = function () {\n  // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) {\n    ++this.pos;\n    return this.readRegexp();\n  }\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n  return this.finishOp(types.slash, 1);\n};\npp$8.readToken_mult_modulo_exp = function (code) {\n  // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n  if (next === 61) {\n    return this.finishOp(types.assign, size + 1);\n  }\n  return this.finishOp(tokentype, size);\n};\npp$8.readToken_pipe_amp = function (code) {\n  // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n  }\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n};\npp$8.readToken_caret = function () {\n  // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n  return this.finishOp(types.bitwiseXOR, 1);\n};\npp$8.readToken_plus_min = function (code) {\n  // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken();\n    }\n    return this.finishOp(types.incDec, 2);\n  }\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n  return this.finishOp(types.plusMin, 1);\n};\npp$8.readToken_lt_gt = function (code) {\n  // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) {\n      return this.finishOp(types.assign, size + 1);\n    }\n    return this.finishOp(types.bitShift, size);\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken();\n  }\n  if (next === 61) {\n    size = 2;\n  }\n  return this.finishOp(types.relational, size);\n};\npp$8.readToken_eq_excl = function (code) {\n  // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) {\n    return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n  }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n    // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow);\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n};\npp$8.getTokenFromCode = function (code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      // '.'\n      return this.readToken_dot();\n\n    // Punctuation tokens.\n    case 40:\n      ++this.pos;\n      return this.finishToken(types.parenL);\n    case 41:\n      ++this.pos;\n      return this.finishToken(types.parenR);\n    case 59:\n      ++this.pos;\n      return this.finishToken(types.semi);\n    case 44:\n      ++this.pos;\n      return this.finishToken(types.comma);\n    case 91:\n      ++this.pos;\n      return this.finishToken(types.bracketL);\n    case 93:\n      ++this.pos;\n      return this.finishToken(types.bracketR);\n    case 123:\n      ++this.pos;\n      return this.finishToken(types.braceL);\n    case 125:\n      ++this.pos;\n      return this.finishToken(types.braceR);\n    case 58:\n      ++this.pos;\n      return this.finishToken(types.colon);\n    case 63:\n      ++this.pos;\n      return this.finishToken(types.question);\n    case 96:\n      // '`'\n      if (this.options.ecmaVersion < 6) {\n        break;\n      }\n      ++this.pos;\n      return this.finishToken(types.backQuote);\n    case 48:\n      // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) {\n        return this.readRadixNumber(16);\n      } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) {\n          return this.readRadixNumber(8);\n        } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) {\n          return this.readRadixNumber(2);\n        } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      // 1-9\n      return this.readNumber(false);\n\n    // Quotes produce strings.\n    case 34:\n    case 39:\n      // '\"', \"'\"\n      return this.readString(code);\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47:\n      // '/'\n      return this.readToken_slash();\n    case 37:\n    case 42:\n      // '%*'\n      return this.readToken_mult_modulo_exp(code);\n    case 124:\n    case 38:\n      // '|&'\n      return this.readToken_pipe_amp(code);\n    case 94:\n      // '^'\n      return this.readToken_caret();\n    case 43:\n    case 45:\n      // '+-'\n      return this.readToken_plus_min(code);\n    case 60:\n    case 62:\n      // '<>'\n      return this.readToken_lt_gt(code);\n    case 61:\n    case 33:\n      // '=!'\n      return this.readToken_eq_excl(code);\n    case 126:\n      // '~'\n      return this.finishOp(types.prefix, 1);\n  }\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\npp$8.finishOp = function (type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str);\n};\npp$8.readRegexp = function () {\n  var this$1 = this;\n  var escaped,\n    inClass,\n    start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) {\n      this$1.raise(start, \"Unterminated regular expression\");\n    }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) {\n      this$1.raise(start, \"Unterminated regular expression\");\n    }\n    if (!escaped) {\n      if (ch === \"[\") {\n        inClass = true;\n      } else if (ch === \"]\" && inClass) {\n        inClass = false;\n      } else if (ch === \"/\" && !inClass) {\n        break;\n      }\n      escaped = ch === \"\\\\\";\n    } else {\n      escaped = false;\n    }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) {\n    this.unexpected(flagsStart);\n  }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n  return this.finishToken(types.regexp, {\n    pattern: pattern,\n    flags: flags,\n    value: value\n  });\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function (radix, len) {\n  var this$1 = this;\n  var start = this.pos,\n    total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos),\n      val = void 0;\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } // a\n    else if (code >= 65) {\n      val = code - 65 + 10;\n    } // A\n    else if (code >= 48 && code <= 57) {\n      val = code - 48;\n    } // 0-9\n    else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      break;\n    }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) {\n    return null;\n  }\n  return total;\n};\npp$8.readRadixNumber = function (radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) {\n    this.raise(this.start + 2, \"Expected number in radix \" + radix);\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, \"Identifier directly after number\");\n  }\n  return this.finishToken(types.num, val);\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function (startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) {\n    this.raise(start, \"Invalid number\");\n  }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) {\n    this.raise(start, \"Invalid number\");\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) {\n    octal = false;\n  }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) {\n    // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) {\n    // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) {\n      ++this.pos;\n    } // '+-'\n    if (this.readInt(10) === null) {\n      this.raise(start, \"Invalid number\");\n    }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, \"Identifier directly after number\");\n  }\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val);\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function () {\n  var ch = this.input.charCodeAt(this.pos),\n    code;\n  if (ch === 123) {\n    // '{'\n    if (this.options.ecmaVersion < 6) {\n      this.unexpected();\n    }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) {\n      this.invalidStringToken(codePos, \"Code point out of bounds\");\n    }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code;\n};\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n}\npp$8.readString = function (quote) {\n  var this$1 = this;\n  var out = \"\",\n    chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) {\n      this$1.raise(this$1.start, \"Unterminated string constant\");\n    }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) {\n      break;\n    }\n    if (ch === 92) {\n      // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) {\n        this$1.raise(this$1.start, \"Unterminated string constant\");\n      }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out);\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\npp$8.tryReadTemplateToken = function () {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err;\n    }\n  }\n  this.inTemplateElement = false;\n};\npp$8.invalidStringToken = function (position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR;\n  } else {\n    this.raise(position, message);\n  }\n};\npp$8.readTmplToken = function () {\n  var this$1 = this;\n  var out = \"\",\n    chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) {\n      this$1.raise(this$1.start, \"Unterminated template\");\n    }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) {\n      // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL);\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote);\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out);\n    }\n    if (ch === 92) {\n      // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n        case 13:\n          if (this$1.input.charCodeAt(this$1.pos) === 10) {\n            ++this$1.pos;\n          }\n        case 10:\n          out += \"\\n\";\n          break;\n        default:\n          out += String.fromCharCode(ch);\n          break;\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function () {\n  var this$1 = this;\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n      case \"\\\\\":\n        ++this$1.pos;\n        break;\n      case \"$\":\n        if (this$1.input[this$1.pos + 1] !== \"{\") {\n          break;\n        }\n      // falls through\n\n      case \"`\":\n        return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos));\n\n      // no default\n    }\n  }\n\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function (inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n    case 110:\n      return \"\\n\";\n    // 'n' -> '\\n'\n    case 114:\n      return \"\\r\";\n    // 'r' -> '\\r'\n    case 120:\n      return String.fromCharCode(this.readHexChar(2));\n    // 'x'\n    case 117:\n      return codePointToString(this.readCodePoint());\n    // 'u'\n    case 116:\n      return \"\\t\";\n    // 't' -> '\\t'\n    case 98:\n      return \"\\b\";\n    // 'b' -> '\\b'\n    case 118:\n      return \"\\x0B\";\n    // 'v' -> '\\u000b'\n    case 102:\n      return \"\\f\";\n    // 'f' -> '\\f'\n    case 13:\n      if (this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n      }\n    // '\\r\\n'\n    case 10:\n      // ' \\n'\n      if (this.options.locations) {\n        this.lineStart = this.pos;\n        ++this.curLine;\n      }\n      return \"\";\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? \"Octal literal in template string\" : \"Octal literal in strict mode\");\n        }\n        return String.fromCharCode(octal);\n      }\n      return String.fromCharCode(ch);\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function (len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) {\n    this.invalidStringToken(codePos, \"Bad character escape sequence\");\n  }\n  return n;\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function () {\n  var this$1 = this;\n  this.containsEsc = false;\n  var word = \"\",\n    first = true,\n    chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) {\n      // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117)\n        // \"u\"\n        {\n          this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n        }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {\n        this$1.invalidStringToken(escStart, \"Invalid Unicode escape\");\n      }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break;\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos);\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function () {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) {\n      this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word);\n    }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word);\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// [walk]: util/walk.js\n\nvar version = \"6.0.2\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options);\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options);\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options);\n}\nvar acorn = /*#__PURE__*/Object.freeze({\n  version: version,\n  parse: parse,\n  parseExpressionAt: parseExpressionAt,\n  tokenizer: tokenizer,\n  Parser: Parser,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types,\n  keywordTypes: keywords$1,\n  TokContext: TokContext,\n  tokContexts: types$1,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n});\nvar xhtml = {\n  quot: \"\\\"\",\n  amp: '&',\n  apos: \"'\",\n  lt: '<',\n  gt: '>',\n  nbsp: \"\\xA0\",\n  iexcl: \"\\xA1\",\n  cent: \"\\xA2\",\n  pound: \"\\xA3\",\n  curren: \"\\xA4\",\n  yen: \"\\xA5\",\n  brvbar: \"\\xA6\",\n  sect: \"\\xA7\",\n  uml: \"\\xA8\",\n  copy: \"\\xA9\",\n  ordf: \"\\xAA\",\n  laquo: \"\\xAB\",\n  not: \"\\xAC\",\n  shy: \"\\xAD\",\n  reg: \"\\xAE\",\n  macr: \"\\xAF\",\n  deg: \"\\xB0\",\n  plusmn: \"\\xB1\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  acute: \"\\xB4\",\n  micro: \"\\xB5\",\n  para: \"\\xB6\",\n  middot: \"\\xB7\",\n  cedil: \"\\xB8\",\n  sup1: \"\\xB9\",\n  ordm: \"\\xBA\",\n  raquo: \"\\xBB\",\n  frac14: \"\\xBC\",\n  frac12: \"\\xBD\",\n  frac34: \"\\xBE\",\n  iquest: \"\\xBF\",\n  Agrave: \"\\xC0\",\n  Aacute: \"\\xC1\",\n  Acirc: \"\\xC2\",\n  Atilde: \"\\xC3\",\n  Auml: \"\\xC4\",\n  Aring: \"\\xC5\",\n  AElig: \"\\xC6\",\n  Ccedil: \"\\xC7\",\n  Egrave: \"\\xC8\",\n  Eacute: \"\\xC9\",\n  Ecirc: \"\\xCA\",\n  Euml: \"\\xCB\",\n  Igrave: \"\\xCC\",\n  Iacute: \"\\xCD\",\n  Icirc: \"\\xCE\",\n  Iuml: \"\\xCF\",\n  ETH: \"\\xD0\",\n  Ntilde: \"\\xD1\",\n  Ograve: \"\\xD2\",\n  Oacute: \"\\xD3\",\n  Ocirc: \"\\xD4\",\n  Otilde: \"\\xD5\",\n  Ouml: \"\\xD6\",\n  times: \"\\xD7\",\n  Oslash: \"\\xD8\",\n  Ugrave: \"\\xD9\",\n  Uacute: \"\\xDA\",\n  Ucirc: \"\\xDB\",\n  Uuml: \"\\xDC\",\n  Yacute: \"\\xDD\",\n  THORN: \"\\xDE\",\n  szlig: \"\\xDF\",\n  agrave: \"\\xE0\",\n  aacute: \"\\xE1\",\n  acirc: \"\\xE2\",\n  atilde: \"\\xE3\",\n  auml: \"\\xE4\",\n  aring: \"\\xE5\",\n  aelig: \"\\xE6\",\n  ccedil: \"\\xE7\",\n  egrave: \"\\xE8\",\n  eacute: \"\\xE9\",\n  ecirc: \"\\xEA\",\n  euml: \"\\xEB\",\n  igrave: \"\\xEC\",\n  iacute: \"\\xED\",\n  icirc: \"\\xEE\",\n  iuml: \"\\xEF\",\n  eth: \"\\xF0\",\n  ntilde: \"\\xF1\",\n  ograve: \"\\xF2\",\n  oacute: \"\\xF3\",\n  ocirc: \"\\xF4\",\n  otilde: \"\\xF5\",\n  ouml: \"\\xF6\",\n  divide: \"\\xF7\",\n  oslash: \"\\xF8\",\n  ugrave: \"\\xF9\",\n  uacute: \"\\xFA\",\n  ucirc: \"\\xFB\",\n  uuml: \"\\xFC\",\n  yacute: \"\\xFD\",\n  thorn: \"\\xFE\",\n  yuml: \"\\xFF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  'int': \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nvar hexNumber = /^[\\da-fA-F]+$/;\nvar decimalNumber = /^\\d+$/;\nvar tt = acorn.tokTypes;\nvar TokContext$1 = acorn.TokContext;\nvar tokContexts = acorn.tokContexts;\nvar TokenType$1 = acorn.TokenType;\nvar isNewLine$1 = acorn.isNewLine;\nvar isIdentifierStart$1 = acorn.isIdentifierStart;\nvar isIdentifierChar$1 = acorn.isIdentifierChar;\nvar tc_oTag = new TokContext$1('<tag', false);\nvar tc_cTag = new TokContext$1('</tag', false);\nvar tc_expr = new TokContext$1('<tag>...</tag>', true, true);\nvar tok = {\n  jsxName: new TokenType$1('jsxName'),\n  jsxText: new TokenType$1('jsxText', {\n    beforeExpr: true\n  }),\n  jsxTagStart: new TokenType$1('jsxTagStart'),\n  jsxTagEnd: new TokenType$1('jsxTagEnd')\n};\ntok.jsxTagStart.updateContext = function () {\n  this.context.push(tc_expr); // treat as beginning of JSX expression\n  this.context.push(tc_oTag); // start opening tag context\n  this.exprAllowed = false;\n};\ntok.jsxTagEnd.updateContext = function (prevType) {\n  var out = this.context.pop();\n  if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n    this.context.pop();\n    this.exprAllowed = this.curContext() === tc_expr;\n  } else {\n    this.exprAllowed = true;\n  }\n};\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object) {\n    return object;\n  }\n  if (object.type === 'JSXIdentifier') {\n    return object.name;\n  }\n  if (object.type === 'JSXNamespacedName') {\n    return object.namespace.name + ':' + object.name.name;\n  }\n  if (object.type === 'JSXMemberExpression') {\n    return getQualifiedJSXName(object.object) + '.' + getQualifiedJSXName(object.property);\n  }\n}\nvar acornJsx = function acornJsx(options) {\n  if (options === void 0) options = {};\n  return function (Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\nvar tokTypes = tok;\nfunction plugin(options, Parser) {\n  return function (Parser) {\n    function anonymous() {\n      Parser.apply(this, arguments);\n    }\n    if (Parser) anonymous.__proto__ = Parser;\n    anonymous.prototype = Object.create(Parser && Parser.prototype);\n    anonymous.prototype.constructor = anonymous;\n    anonymous.prototype.jsx_readToken = function jsx_readToken() {\n      var this$1 = this;\n      var out = '',\n        chunkStart = this.pos;\n      for (;;) {\n        if (this$1.pos >= this$1.input.length) {\n          this$1.raise(this$1.start, 'Unterminated JSX contents');\n        }\n        var ch = this$1.input.charCodeAt(this$1.pos);\n        switch (ch) {\n          case 60: // '<'\n          case 123:\n            // '{'\n            if (this$1.pos === this$1.start) {\n              if (ch === 60 && this$1.exprAllowed) {\n                ++this$1.pos;\n                return this$1.finishToken(tok.jsxTagStart);\n              }\n              return this$1.getTokenFromCode(ch);\n            }\n            out += this$1.input.slice(chunkStart, this$1.pos);\n            return this$1.finishToken(tok.jsxText, out);\n          case 38:\n            // '&'\n            out += this$1.input.slice(chunkStart, this$1.pos);\n            out += this$1.jsx_readEntity();\n            chunkStart = this$1.pos;\n            break;\n          default:\n            if (isNewLine$1(ch)) {\n              out += this$1.input.slice(chunkStart, this$1.pos);\n              out += this$1.jsx_readNewLine(true);\n              chunkStart = this$1.pos;\n            } else {\n              ++this$1.pos;\n            }\n        }\n      }\n    };\n    anonymous.prototype.jsx_readNewLine = function jsx_readNewLine(normalizeCRLF) {\n      var ch = this.input.charCodeAt(this.pos);\n      var out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      return out;\n    };\n    anonymous.prototype.jsx_readString = function jsx_readString(quote) {\n      var this$1 = this;\n      var out = '',\n        chunkStart = ++this.pos;\n      for (;;) {\n        if (this$1.pos >= this$1.input.length) {\n          this$1.raise(this$1.start, 'Unterminated string constant');\n        }\n        var ch = this$1.input.charCodeAt(this$1.pos);\n        if (ch === quote) {\n          break;\n        }\n        if (ch === 38) {\n          // '&'\n          out += this$1.input.slice(chunkStart, this$1.pos);\n          out += this$1.jsx_readEntity();\n          chunkStart = this$1.pos;\n        } else if (isNewLine$1(ch)) {\n          out += this$1.input.slice(chunkStart, this$1.pos);\n          out += this$1.jsx_readNewLine(false);\n          chunkStart = this$1.pos;\n        } else {\n          ++this$1.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    };\n    anonymous.prototype.jsx_readEntity = function jsx_readEntity() {\n      var this$1 = this;\n      var str = '',\n        count = 0,\n        entity;\n      var ch = this.input[this.pos];\n      if (ch !== '&') {\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      }\n      var startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this$1.input[this$1.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str)) {\n                entity = String.fromCharCode(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str)) {\n                entity = String.fromCharCode(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = xhtml[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    };\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    anonymous.prototype.jsx_readWord = function jsx_readWord() {\n      var this$1 = this;\n      var ch,\n        start = this.pos;\n      do {\n        ch = this$1.input.charCodeAt(++this$1.pos);\n      } while (isIdentifierChar$1(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    };\n\n    // Parse next token as JSX identifier\n\n    anonymous.prototype.jsx_parseIdentifier = function jsx_parseIdentifier() {\n      var node = this.startNode();\n      if (this.type === tok.jsxName) {\n        node.name = this.value;\n      } else if (this.type.keyword) {\n        node.name = this.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    };\n\n    // Parse namespaced identifier.\n\n    anonymous.prototype.jsx_parseNamespacedName = function jsx_parseNamespacedName() {\n      var startPos = this.start,\n        startLoc = this.startLoc;\n      var name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) {\n        return name;\n      }\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    };\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    anonymous.prototype.jsx_parseElementName = function jsx_parseElementName() {\n      var this$1 = this;\n      if (this.type === tok.jsxTagEnd) {\n        return '';\n      }\n      var startPos = this.start,\n        startLoc = this.startLoc;\n      var node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        var newNode = this$1.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this$1.jsx_parseIdentifier();\n        node = this$1.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    };\n\n    // Parses any type of JSX attribute value.\n\n    anonymous.prototype.jsx_parseAttributeValue = function jsx_parseAttributeValue() {\n      switch (this.type) {\n        case tt.braceL:\n          var node = this.jsx_parseExpressionContainer();\n          if (node.expression.type === 'JSXEmptyExpression') {\n            this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n          }\n          return node;\n        case tok.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n        default:\n          this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    };\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    anonymous.prototype.jsx_parseEmptyExpression = function jsx_parseEmptyExpression() {\n      var node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    };\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    anonymous.prototype.jsx_parseExpressionContainer = function jsx_parseExpressionContainer() {\n      var node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR ? this.jsx_parseEmptyExpression() : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    };\n\n    // Parses following JSX attribute name-value pair.\n\n    anonymous.prototype.jsx_parseAttribute = function jsx_parseAttribute() {\n      var node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    };\n\n    // Parses JSX opening tag starting after '<'.\n\n    anonymous.prototype.jsx_parseOpeningElementAt = function jsx_parseOpeningElementAt(startPos, startLoc) {\n      var this$1 = this;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      var nodeName = this.jsx_parseElementName();\n      if (nodeName) {\n        node.name = nodeName;\n      }\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd) {\n        node.attributes.push(this$1.jsx_parseAttribute());\n      }\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    };\n\n    // Parses JSX closing tag starting after '</'.\n\n    anonymous.prototype.jsx_parseClosingElementAt = function jsx_parseClosingElementAt(startPos, startLoc) {\n      var node = this.startNodeAt(startPos, startLoc);\n      var nodeName = this.jsx_parseElementName();\n      if (nodeName) {\n        node.name = nodeName;\n      }\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    };\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    anonymous.prototype.jsx_parseElementAt = function jsx_parseElementAt(startPos, startLoc) {\n      var this$1 = this;\n      var node = this.startNodeAt(startPos, startLoc);\n      var children = [];\n      var openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      var closingElement = null;\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this$1.type) {\n            case tok.jsxTagStart:\n              startPos = this$1.start;\n              startLoc = this$1.startLoc;\n              this$1.next();\n              if (this$1.eat(tt.slash)) {\n                closingElement = this$1.jsx_parseClosingElementAt(startPos, startLoc);\n                break contents;\n              }\n              children.push(this$1.jsx_parseElementAt(startPos, startLoc));\n              break;\n            case tok.jsxText:\n              children.push(this$1.parseExprAtom());\n              break;\n            case tt.braceL:\n              children.push(this$1.jsx_parseExpressionContainer());\n              break;\n            default:\n              this$1.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, 'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      var fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    };\n\n    // Parse JSX text\n\n    anonymous.prototype.jsx_parseText = function jsx_parseText(value) {\n      var node = this.parseLiteral(value);\n      node.type = \"JSXText\";\n      return node;\n    };\n\n    // Parses entire JSX element from current position.\n\n    anonymous.prototype.jsx_parseElement = function jsx_parseElement() {\n      var startPos = this.start,\n        startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    };\n    anonymous.prototype.parseExprAtom = function parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText) {\n        return this.jsx_parseText(this.value);\n      } else if (this.type === tok.jsxTagStart) {\n        return this.jsx_parseElement();\n      } else {\n        return Parser.prototype.parseExprAtom.call(this, refShortHandDefaultPos);\n      }\n    };\n    anonymous.prototype.readToken = function readToken(code) {\n      var context = this.curContext();\n      if (context === tc_expr) {\n        return this.jsx_readToken();\n      }\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart$1(code)) {\n          return this.jsx_readWord();\n        }\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n        if ((code === 34 || code === 39) && context == tc_oTag) {\n          return this.jsx_readString(code);\n        }\n      }\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return Parser.prototype.readToken.call(this, code);\n    };\n    anonymous.prototype.updateContext = function updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) {\n          this.context.push(tokContexts.b_expr);\n        } else if (curContext == tc_expr) {\n          this.context.push(tokContexts.b_tmpl);\n        } else {\n          Parser.prototype.updateContext.call(this, prevType);\n        }\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return Parser.prototype.updateContext.call(this, prevType);\n      }\n    };\n    return anonymous;\n  }(Parser);\n}\nacornJsx.tokTypes = tokTypes;\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\nvar lib = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DynamicImportKey = undefined;\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  var _get = function () {\n    function get(object, property, receiver) {\n      if (object === null) object = Function.prototype;\n      var desc = Object.getOwnPropertyDescriptor(object, property);\n      if (desc === undefined) {\n        var parent = Object.getPrototypeOf(object);\n        if (parent === null) {\n          return undefined;\n        } else {\n          return get(parent, property, receiver);\n        }\n      } else if (\"value\" in desc) {\n        return desc.value;\n      } else {\n        var getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return getter.call(receiver);\n      }\n    }\n    return get;\n  }();\n  exports['default'] = dynamicImport;\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  } /* eslint-disable no-underscore-dangle */\n\n  var DynamicImportKey = exports.DynamicImportKey = 'Import';\n\n  // NOTE: This allows `yield import()` to parse correctly.\n  acorn.tokTypes._import.startsExpr = true;\n  function parseDynamicImport() {\n    var node = this.startNode();\n    this.next();\n    if (this.type !== acorn.tokTypes.parenL) {\n      this.unexpected();\n    }\n    return this.finishNode(node, DynamicImportKey);\n  }\n  function parenAfter() {\n    return /^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*\\(/.test(this.input.slice(this.pos));\n  }\n  function dynamicImport(Parser) {\n    return function (_Parser) {\n      _inherits(_class, _Parser);\n      function _class() {\n        _classCallCheck(this, _class);\n        return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n      }\n      _createClass(_class, [{\n        key: 'parseStatement',\n        value: function () {\n          function parseStatement(context, topLevel, exports) {\n            if (this.type === acorn.tokTypes._import && parenAfter.call(this)) {\n              return this.parseExpressionStatement(this.startNode(), this.parseExpression());\n            }\n            return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseStatement', this).call(this, context, topLevel, exports);\n          }\n          return parseStatement;\n        }()\n      }, {\n        key: 'parseExprAtom',\n        value: function () {\n          function parseExprAtom(refDestructuringErrors) {\n            if (this.type === acorn.tokTypes._import) {\n              return parseDynamicImport.call(this);\n            }\n            return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'parseExprAtom', this).call(this, refDestructuringErrors);\n          }\n          return parseExprAtom;\n        }()\n      }]);\n      return _class;\n    }(Parser);\n  }\n});\nvar acornDynamicImport = unwrapExports(lib);\nvar lib_1 = lib.DynamicImportKey;\n\n// used for debugging, without the noise created by\n// circular references\nfunction toJSON(node) {\n  var obj = {};\n  Object.keys(node).forEach(function (key) {\n    if (key === 'parent' || key === 'program' || key === 'keys' || key === '__wrapped') {\n      return;\n    }\n    if (Array.isArray(node[key])) {\n      obj[key] = node[key].map(toJSON);\n    } else if (node[key] && node[key].toJSON) {\n      obj[key] = node[key].toJSON();\n    } else {\n      obj[key] = node[key];\n    }\n  });\n  return obj;\n}\nvar Node$1 = function Node() {};\nNode$1.prototype.ancestor = function ancestor(level) {\n  var node = this;\n  while (level--) {\n    node = node.parent;\n    if (!node) {\n      return null;\n    }\n  }\n  return node;\n};\nNode$1.prototype.contains = function contains(node) {\n  var this$1 = this;\n  while (node) {\n    if (node === this$1) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n};\nNode$1.prototype.findLexicalBoundary = function findLexicalBoundary() {\n  return this.parent.findLexicalBoundary();\n};\nNode$1.prototype.findNearest = function findNearest(type) {\n  if (typeof type === 'string') {\n    type = new RegExp(\"^\" + type + \"$\");\n  }\n  if (type.test(this.type)) {\n    return this;\n  }\n  return this.parent.findNearest(type);\n};\nNode$1.prototype.unparenthesizedParent = function unparenthesizedParent() {\n  var node = this.parent;\n  while (node && node.type === 'ParenthesizedExpression') {\n    node = node.parent;\n  }\n  return node;\n};\nNode$1.prototype.unparenthesize = function unparenthesize() {\n  var node = this;\n  while (node.type === 'ParenthesizedExpression') {\n    node = node.expression;\n  }\n  return node;\n};\nNode$1.prototype.findScope = function findScope(functionScope) {\n  return this.parent.findScope(functionScope);\n};\nNode$1.prototype.getIndentation = function getIndentation() {\n  return this.parent.getIndentation();\n};\nNode$1.prototype.initialise = function initialise(transforms) {\n  var this$1 = this;\n  for (var i = 0, list = this$1.keys; i < list.length; i += 1) {\n    var key = list[i];\n    var value = this$1[key];\n    if (Array.isArray(value)) {\n      value.forEach(function (node) {\n        return node && node.initialise(transforms);\n      });\n    } else if (value && typeof value === 'object') {\n      value.initialise(transforms);\n    }\n  }\n};\nNode$1.prototype.toJSON = function toJSON$1() {\n  return toJSON(this);\n};\nNode$1.prototype.toString = function toString() {\n  return this.program.magicString.original.slice(this.start, this.end);\n};\nNode$1.prototype.transpile = function transpile(code, transforms) {\n  var this$1 = this;\n  for (var i = 0, list = this$1.keys; i < list.length; i += 1) {\n    var key = list[i];\n    var value = this$1[key];\n    if (Array.isArray(value)) {\n      value.forEach(function (node) {\n        return node && node.transpile(code, transforms);\n      });\n    } else if (value && typeof value === 'object') {\n      value.transpile(code, transforms);\n    }\n  }\n};\nfunction extractNames(node) {\n  var names = [];\n  extractors[node.type](names, node);\n  return names;\n}\nvar extractors = {\n  Identifier: function Identifier(names, node) {\n    names.push(node);\n  },\n  ObjectPattern: function ObjectPattern(names, node) {\n    for (var i = 0, list = node.properties; i < list.length; i += 1) {\n      var prop = list[i];\n      extractors[prop.type](names, prop);\n    }\n  },\n  Property: function Property(names, node) {\n    extractors[node.value.type](names, node.value);\n  },\n  ArrayPattern: function ArrayPattern(names, node) {\n    for (var i = 0, list = node.elements; i < list.length; i += 1) {\n      var element = list[i];\n      if (element) {\n        extractors[element.type](names, element);\n      }\n    }\n  },\n  RestElement: function RestElement(names, node) {\n    extractors[node.argument.type](names, node.argument);\n  },\n  AssignmentPattern: function AssignmentPattern(names, node) {\n    extractors[node.left.type](names, node.left);\n  }\n};\nvar reserved = Object.create(null);\n'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split(' ').forEach(function (word) {\n  return reserved[word] = true;\n});\nfunction Scope$1(options) {\n  options = options || {};\n  this.parent = options.parent;\n  this.isBlockScope = !!options.block;\n  this.createDeclarationCallback = options.declare;\n  var scope = this;\n  while (scope.isBlockScope) {\n    scope = scope.parent;\n  }\n  this.functionScope = scope;\n  this.identifiers = [];\n  this.declarations = Object.create(null);\n  this.references = Object.create(null);\n  this.blockScopedDeclarations = this.isBlockScope ? null : Object.create(null);\n  this.aliases = Object.create(null);\n}\nScope$1.prototype = {\n  addDeclaration: function addDeclaration(node, kind) {\n    var this$1 = this;\n    for (var i = 0, list = extractNames(node); i < list.length; i += 1) {\n      var identifier = list[i];\n      var name = identifier.name;\n      var declaration = {\n        name: name,\n        node: identifier,\n        kind: kind,\n        instances: []\n      };\n      this$1.declarations[name] = declaration;\n      if (this$1.isBlockScope) {\n        if (!this$1.functionScope.blockScopedDeclarations[name]) {\n          this$1.functionScope.blockScopedDeclarations[name] = [];\n        }\n        this$1.functionScope.blockScopedDeclarations[name].push(declaration);\n      }\n    }\n  },\n  addReference: function addReference(identifier) {\n    if (this.consolidated) {\n      this.consolidateReference(identifier);\n    } else {\n      this.identifiers.push(identifier);\n    }\n  },\n  consolidate: function consolidate() {\n    var this$1 = this;\n    for (var i = 0; i < this.identifiers.length; i += 1) {\n      // we might push to the array during consolidation, so don't cache length\n      var identifier = this$1.identifiers[i];\n      this$1.consolidateReference(identifier);\n    }\n    this.consolidated = true; // TODO understand why this is necessary... seems bad\n  },\n\n  consolidateReference: function consolidateReference(identifier) {\n    var declaration = this.declarations[identifier.name];\n    if (declaration) {\n      declaration.instances.push(identifier);\n    } else {\n      this.references[identifier.name] = true;\n      if (this.parent) {\n        this.parent.addReference(identifier);\n      }\n    }\n  },\n  contains: function contains(name) {\n    return this.declarations[name] || (this.parent ? this.parent.contains(name) : false);\n  },\n  createIdentifier: function createIdentifier(base) {\n    if (typeof base === 'number') {\n      base = base.toString();\n    }\n    base = base.replace(/\\s/g, '').replace(/\\[([^\\]]+)\\]/g, '_$1').replace(/[^a-zA-Z0-9_$]/g, '_').replace(/_{2,}/, '_');\n    var name = base;\n    var counter = 1;\n    while (this.declarations[name] || this.references[name] || this.aliases[name] || name in reserved) {\n      name = base + \"$\" + counter++;\n    }\n    this.aliases[name] = true;\n    return name;\n  },\n  createDeclaration: function createDeclaration(base) {\n    var id = this.createIdentifier(base);\n    this.createDeclarationCallback(id);\n    return id;\n  },\n  findDeclaration: function findDeclaration(name) {\n    return this.declarations[name] || this.parent && this.parent.findDeclaration(name);\n  },\n  // Sometimes, block scope declarations change name during transpilation\n  resolveName: function resolveName(name) {\n    var declaration = this.findDeclaration(name);\n    return declaration ? declaration.name : name;\n  }\n};\nfunction locate(source, index) {\n  var lines = source.split('\\n');\n  var len = lines.length;\n  var lineStart = 0;\n  var i;\n  for (i = 0; i < len; i += 1) {\n    var line = lines[i];\n    var lineEnd = lineStart + line.length + 1; // +1 for newline\n\n    if (lineEnd > index) {\n      return {\n        line: i + 1,\n        column: index - lineStart,\n        char: i\n      };\n    }\n    lineStart = lineEnd;\n  }\n  throw new Error('Could not determine location of character');\n}\nfunction pad(num, len) {\n  var result = String(num);\n  return result + repeat(' ', len - result.length);\n}\nfunction repeat(str, times) {\n  var result = '';\n  while (times--) {\n    result += str;\n  }\n  return result;\n}\nfunction getSnippet(source, loc, length) {\n  if (length === void 0) length = 1;\n  var first = Math.max(loc.line - 5, 0);\n  var last = loc.line;\n  var numDigits = String(last).length;\n  var lines = source.split('\\n').slice(first, last);\n  var lastLine = lines[lines.length - 1];\n  var offset = lastLine.slice(0, loc.column).replace(/\\t/g, '  ').length;\n  var snippet = lines.map(function (line, i) {\n    return pad(i + first + 1, numDigits) + \" : \" + line.replace(/\\t/g, '  ');\n  }).join('\\n');\n  snippet += '\\n' + repeat(' ', numDigits + 3 + offset) + repeat('^', length);\n  return snippet;\n}\nvar CompileError = function (Error) {\n  function CompileError(message, node) {\n    Error.call(this, message);\n    this.name = 'CompileError';\n    if (!node) {\n      return;\n    }\n    var source = node.program.magicString.original;\n    var loc = locate(source, node.start);\n    this.message = message + \" (\" + loc.line + \":\" + loc.column + \")\";\n    this.stack = new Error().stack.replace(new RegExp(\".+new \" + this.name + \".+\\\\n\", 'm'), '');\n    this.loc = loc;\n    this.snippet = getSnippet(source, loc, node.end - node.start);\n  }\n  if (Error) CompileError.__proto__ = Error;\n  CompileError.prototype = Object.create(Error && Error.prototype);\n  CompileError.prototype.constructor = CompileError;\n  CompileError.prototype.toString = function toString() {\n    return this.name + \": \" + this.message + \"\\n\" + this.snippet;\n  };\n  return CompileError;\n}(Error);\nfunction findIndex(array, fn) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (fn(array[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\nvar handlers = {\n  Identifier: destructureIdentifier,\n  AssignmentPattern: destructureAssignmentPattern,\n  ArrayPattern: destructureArrayPattern,\n  ObjectPattern: destructureObjectPattern\n};\nfunction destructure(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n  handlers[node.type](code, createIdentifier, resolveName, node, ref, inline, statementGenerators);\n}\nfunction destructureIdentifier(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n  statementGenerators.push(function (start, prefix, suffix) {\n    code.overwrite(node.start, node.end, (inline ? prefix : prefix + \"var \") + resolveName(node) + \" = \" + ref + suffix);\n    code.move(node.start, node.end, start);\n  });\n}\nfunction destructureMemberExpression(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n  statementGenerators.push(function (start, prefix, suffix) {\n    code.prependRight(node.start, inline ? prefix : prefix + \"var \");\n    code.appendLeft(node.end, \" = \" + ref + suffix);\n    code.move(node.start, node.end, start);\n  });\n}\nfunction destructureAssignmentPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n  var isIdentifier = node.left.type === 'Identifier';\n  var name = isIdentifier ? node.left.name : ref;\n  if (!inline) {\n    statementGenerators.push(function (start, prefix, suffix) {\n      code.prependRight(node.left.end, prefix + \"if ( \" + name + \" === void 0 ) \" + name);\n      code.move(node.left.end, node.right.end, start);\n      code.appendLeft(node.right.end, suffix);\n    });\n  }\n  if (!isIdentifier) {\n    destructure(code, createIdentifier, resolveName, node.left, ref, inline, statementGenerators);\n  }\n}\nfunction destructureArrayPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n  var c = node.start;\n  node.elements.forEach(function (element, i) {\n    if (!element) {\n      return;\n    }\n    if (element.type === 'RestElement') {\n      handleProperty(code, createIdentifier, resolveName, c, element.argument, ref + \".slice(\" + i + \")\", inline, statementGenerators);\n    } else {\n      handleProperty(code, createIdentifier, resolveName, c, element, ref + \"[\" + i + \"]\", inline, statementGenerators);\n    }\n    c = element.end;\n  });\n  code.remove(c, node.end);\n}\nfunction destructureObjectPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators) {\n  var this$1 = this;\n  var c = node.start;\n  var nonRestKeys = [];\n  node.properties.forEach(function (prop) {\n    var value;\n    var content;\n    if (prop.type === 'Property') {\n      var isComputedKey = prop.computed || prop.key.type !== 'Identifier';\n      var key = isComputedKey ? code.slice(prop.key.start, prop.key.end) : prop.key.name;\n      value = isComputedKey ? ref + \"[\" + key + \"]\" : ref + \".\" + key;\n      content = prop.value;\n      nonRestKeys.push(isComputedKey ? key : '\"' + key + '\"');\n    } else if (prop.type === 'RestElement') {\n      content = prop.argument;\n      value = createIdentifier('rest');\n      statementGenerators.push(function (start, prefix, suffix) {\n        var helper = prop.program.getObjectWithoutPropertiesHelper(code);\n        code.overwrite(prop.start, c = prop.argument.start, (inline ? prefix : prefix + \"var \") + value + \" = \" + helper + \"( \" + ref + \", [\" + nonRestKeys.join(', ') + \"] )\" + suffix);\n        code.move(prop.start, c, start);\n      });\n    } else {\n      throw new CompileError(this$1, \"Unexpected node of type \" + prop.type + \" in object pattern\");\n    }\n    handleProperty(code, createIdentifier, resolveName, c, content, value, inline, statementGenerators);\n    c = prop.end;\n  });\n  code.remove(c, node.end);\n}\nfunction handleProperty(code, createIdentifier, resolveName, c, node, value, inline, statementGenerators) {\n  switch (node.type) {\n    case 'Identifier':\n      {\n        code.remove(c, node.start);\n        destructureIdentifier(code, createIdentifier, resolveName, node, value, inline, statementGenerators);\n        break;\n      }\n    case 'MemberExpression':\n      code.remove(c, node.start);\n      destructureMemberExpression(code, createIdentifier, resolveName, node, value, true, statementGenerators);\n      break;\n    case 'AssignmentPattern':\n      {\n        var name;\n        var isIdentifier = node.left.type === 'Identifier';\n        if (isIdentifier) {\n          name = resolveName(node.left);\n        } else {\n          name = createIdentifier(value);\n        }\n        statementGenerators.push(function (start, prefix, suffix) {\n          if (inline) {\n            code.prependRight(node.right.start, name + \" = \" + value + \", \" + name + \" = \" + name + \" === void 0 ? \");\n            code.appendLeft(node.right.end, \" : \" + name + suffix);\n          } else {\n            code.prependRight(node.right.start, prefix + \"var \" + name + \" = \" + value + \"; if ( \" + name + \" === void 0 ) \" + name + \" = \");\n            code.appendLeft(node.right.end, suffix);\n          }\n          code.move(node.right.start, node.right.end, start);\n        });\n        if (isIdentifier) {\n          code.remove(c, node.right.start);\n        } else {\n          code.remove(c, node.left.start);\n          code.remove(node.left.end, node.right.start);\n          handleProperty(code, createIdentifier, resolveName, c, node.left, name, inline, statementGenerators);\n        }\n        break;\n      }\n    case 'ObjectPattern':\n      {\n        code.remove(c, c = node.start);\n        var ref = value;\n        if (node.properties.length > 1) {\n          ref = createIdentifier(value);\n          statementGenerators.push(function (start, prefix, suffix) {\n            // this feels a tiny bit hacky, but we can't do a\n            // straightforward appendLeft and keep correct order...\n            code.prependRight(node.start, (inline ? '' : prefix + \"var \") + ref + \" = \");\n            code.overwrite(node.start, c = node.start + 1, value);\n            code.appendLeft(c, suffix);\n            code.overwrite(node.start, c = node.start + 1, (inline ? '' : prefix + \"var \") + ref + \" = \" + value + suffix);\n            code.move(node.start, c, start);\n          });\n        }\n        destructureObjectPattern(code, createIdentifier, resolveName, node, ref, inline, statementGenerators);\n        break;\n      }\n    case 'ArrayPattern':\n      {\n        code.remove(c, c = node.start);\n        if (node.elements.filter(Boolean).length > 1) {\n          var ref$1 = createIdentifier(value);\n          statementGenerators.push(function (start, prefix, suffix) {\n            code.prependRight(node.start, (inline ? '' : prefix + \"var \") + ref$1 + \" = \");\n            code.overwrite(node.start, c = node.start + 1, value, {\n              contentOnly: true\n            });\n            code.appendLeft(c, suffix);\n            code.move(node.start, c, start);\n          });\n          node.elements.forEach(function (element, i) {\n            if (!element) {\n              return;\n            }\n            if (element.type === 'RestElement') {\n              handleProperty(code, createIdentifier, resolveName, c, element.argument, ref$1 + \".slice(\" + i + \")\", inline, statementGenerators);\n            } else {\n              handleProperty(code, createIdentifier, resolveName, c, element, ref$1 + \"[\" + i + \"]\", inline, statementGenerators);\n            }\n            c = element.end;\n          });\n        } else {\n          var index = findIndex(node.elements, Boolean);\n          var element = node.elements[index];\n          if (element.type === 'RestElement') {\n            handleProperty(code, createIdentifier, resolveName, c, element.argument, value + \".slice(\" + index + \")\", inline, statementGenerators);\n          } else {\n            handleProperty(code, createIdentifier, resolveName, c, element, value + \"[\" + index + \"]\", inline, statementGenerators);\n          }\n          c = element.end;\n        }\n        code.remove(c, node.end);\n        break;\n      }\n    default:\n      {\n        throw new Error(\"Unexpected node type in destructuring (\" + node.type + \")\");\n      }\n  }\n}\nfunction isUseStrict(node) {\n  if (!node) {\n    return false;\n  }\n  if (node.type !== 'ExpressionStatement') {\n    return false;\n  }\n  if (node.expression.type !== 'Literal') {\n    return false;\n  }\n  return node.expression.value === 'use strict';\n}\nvar BlockStatement = function (Node) {\n  function BlockStatement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) BlockStatement.__proto__ = Node;\n  BlockStatement.prototype = Object.create(Node && Node.prototype);\n  BlockStatement.prototype.constructor = BlockStatement;\n  BlockStatement.prototype.createScope = function createScope() {\n    var this$1 = this;\n    this.parentIsFunction = /Function/.test(this.parent.type);\n    this.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\n    this.scope = new Scope$1({\n      block: !this.isFunctionBlock,\n      parent: this.parent.findScope(false),\n      declare: function declare(id) {\n        return this$1.createdDeclarations.push(id);\n      }\n    });\n    if (this.parentIsFunction) {\n      this.parent.params.forEach(function (node) {\n        this$1.scope.addDeclaration(node, 'param');\n      });\n    }\n  };\n  BlockStatement.prototype.initialise = function initialise(transforms) {\n    this.thisAlias = null;\n    this.argumentsAlias = null;\n    this.defaultParameters = [];\n    this.createdDeclarations = [];\n\n    // normally the scope gets created here, during initialisation,\n    // but in some cases (e.g. `for` statements), we need to create\n    // the scope early, as it pertains to both the init block and\n    // the body of the statement\n    if (!this.scope) {\n      this.createScope();\n    }\n    this.body.forEach(function (node) {\n      return node.initialise(transforms);\n    });\n    this.scope.consolidate();\n  };\n  BlockStatement.prototype.findLexicalBoundary = function findLexicalBoundary() {\n    if (this.type === 'Program') {\n      return this;\n    }\n    if (/^Function/.test(this.parent.type)) {\n      return this;\n    }\n    return this.parent.findLexicalBoundary();\n  };\n  BlockStatement.prototype.findScope = function findScope(functionScope) {\n    if (functionScope && !this.isFunctionBlock) {\n      return this.parent.findScope(functionScope);\n    }\n    return this.scope;\n  };\n  BlockStatement.prototype.getArgumentsAlias = function getArgumentsAlias() {\n    if (!this.argumentsAlias) {\n      this.argumentsAlias = this.scope.createIdentifier('arguments');\n    }\n    return this.argumentsAlias;\n  };\n  BlockStatement.prototype.getArgumentsArrayAlias = function getArgumentsArrayAlias() {\n    if (!this.argumentsArrayAlias) {\n      this.argumentsArrayAlias = this.scope.createIdentifier('argsArray');\n    }\n    return this.argumentsArrayAlias;\n  };\n  BlockStatement.prototype.getThisAlias = function getThisAlias() {\n    if (!this.thisAlias) {\n      this.thisAlias = this.scope.createIdentifier('this');\n    }\n    return this.thisAlias;\n  };\n  BlockStatement.prototype.getIndentation = function getIndentation() {\n    var this$1 = this;\n    if (this.indentation === undefined) {\n      var source = this.program.magicString.original;\n      var useOuter = this.synthetic || !this.body.length;\n      var c = useOuter ? this.start : this.body[0].start;\n      while (c && source[c] !== '\\n') {\n        c -= 1;\n      }\n      this.indentation = '';\n\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        c += 1;\n        var char = source[c];\n        if (char !== ' ' && char !== '\\t') {\n          break;\n        }\n        this$1.indentation += char;\n      }\n      var indentString = this.program.magicString.getIndentString();\n\n      // account for dedented class constructors\n      var parent = this.parent;\n      while (parent) {\n        if (parent.kind === 'constructor' && !parent.parent.parent.superClass) {\n          this$1.indentation = this$1.indentation.replace(indentString, '');\n        }\n        parent = parent.parent;\n      }\n      if (useOuter) {\n        this.indentation += indentString;\n      }\n    }\n    return this.indentation;\n  };\n  BlockStatement.prototype.transpile = function transpile(code, transforms) {\n    var this$1 = this;\n    var indentation = this.getIndentation();\n    var introStatementGenerators = [];\n    if (this.argumentsAlias) {\n      introStatementGenerators.push(function (start, prefix, suffix) {\n        var assignment = prefix + \"var \" + this$1.argumentsAlias + \" = arguments\" + suffix;\n        code.appendLeft(start, assignment);\n      });\n    }\n    if (this.thisAlias) {\n      introStatementGenerators.push(function (start, prefix, suffix) {\n        var assignment = prefix + \"var \" + this$1.thisAlias + \" = this\" + suffix;\n        code.appendLeft(start, assignment);\n      });\n    }\n    if (this.argumentsArrayAlias) {\n      introStatementGenerators.push(function (start, prefix, suffix) {\n        var i = this$1.scope.createIdentifier('i');\n        var assignment = prefix + \"var \" + i + \" = arguments.length, \" + this$1.argumentsArrayAlias + \" = Array(\" + i + \");\\n\" + indentation + \"while ( \" + i + \"-- ) \" + this$1.argumentsArrayAlias + \"[\" + i + \"] = arguments[\" + i + \"]\" + suffix;\n        code.appendLeft(start, assignment);\n      });\n    }\n    if (/Function/.test(this.parent.type)) {\n      this.transpileParameters(this.parent.params, code, transforms, indentation, introStatementGenerators);\n    } else if ('CatchClause' === this.parent.type) {\n      this.transpileParameters([this.parent.param], code, transforms, indentation, introStatementGenerators);\n    }\n    if (transforms.letConst && this.isFunctionBlock) {\n      this.transpileBlockScopedIdentifiers(code);\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n    if (this.createdDeclarations.length) {\n      introStatementGenerators.push(function (start, prefix, suffix) {\n        var assignment = prefix + \"var \" + this$1.createdDeclarations.join(', ') + suffix;\n        code.appendLeft(start, assignment);\n      });\n    }\n    if (this.synthetic) {\n      if (this.parent.type === 'ArrowFunctionExpression') {\n        var expr = this.body[0];\n        if (introStatementGenerators.length) {\n          code.appendLeft(this.start, \"{\").prependRight(this.end, this.parent.getIndentation() + \"}\");\n          code.prependRight(expr.start, \"\\n\" + indentation + \"return \");\n          code.appendLeft(expr.end, \";\\n\");\n        } else if (transforms.arrow) {\n          code.prependRight(expr.start, \"{ return \");\n          code.appendLeft(expr.end, \"; }\");\n        }\n      } else if (introStatementGenerators.length) {\n        code.prependRight(this.start, \"{\").appendLeft(this.end, \"}\");\n      }\n    }\n    var start;\n    if (isUseStrict(this.body[0])) {\n      start = this.body[0].end;\n    } else if (this.synthetic || this.parent.type === 'Root') {\n      start = this.start;\n    } else {\n      start = this.start + 1;\n    }\n    var prefix = \"\\n\" + indentation;\n    var suffix = ';';\n    introStatementGenerators.forEach(function (fn, i) {\n      if (i === introStatementGenerators.length - 1) {\n        suffix = \";\\n\";\n      }\n      fn(start, prefix, suffix);\n    });\n  };\n  BlockStatement.prototype.transpileParameters = function transpileParameters(params, code, transforms, indentation, introStatementGenerators) {\n    var this$1 = this;\n    params.forEach(function (param) {\n      if (param.type === 'AssignmentPattern' && param.left.type === 'Identifier') {\n        if (transforms.defaultParameter) {\n          introStatementGenerators.push(function (start, prefix, suffix) {\n            var lhs = prefix + \"if ( \" + param.left.name + \" === void 0 ) \" + param.left.name;\n            code.prependRight(param.left.end, lhs).move(param.left.end, param.right.end, start).appendLeft(param.right.end, suffix);\n          });\n        }\n      } else if (param.type === 'RestElement') {\n        if (transforms.spreadRest) {\n          introStatementGenerators.push(function (start, prefix, suffix) {\n            var penultimateParam = params[params.length - 2];\n            if (penultimateParam) {\n              code.remove(penultimateParam ? penultimateParam.end : param.start, param.end);\n            } else {\n              var start$1 = param.start,\n                end = param.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8\n\n              while (/\\s/.test(code.original[start$1 - 1])) {\n                start$1 -= 1;\n              }\n              while (/\\s/.test(code.original[end])) {\n                end += 1;\n              }\n              code.remove(start$1, end);\n            }\n            var name = param.argument.name;\n            var len = this$1.scope.createIdentifier('len');\n            var count = params.length - 1;\n            if (count) {\n              code.prependRight(start, prefix + \"var \" + name + \" = [], \" + len + \" = arguments.length - \" + count + \";\\n\" + indentation + \"while ( \" + len + \"-- > 0 ) \" + name + \"[ \" + len + \" ] = arguments[ \" + len + \" + \" + count + \" ]\" + suffix);\n            } else {\n              code.prependRight(start, prefix + \"var \" + name + \" = [], \" + len + \" = arguments.length;\\n\" + indentation + \"while ( \" + len + \"-- ) \" + name + \"[ \" + len + \" ] = arguments[ \" + len + \" ]\" + suffix);\n            }\n          });\n        }\n      } else if (param.type !== 'Identifier') {\n        if (transforms.parameterDestructuring) {\n          var ref = this$1.scope.createIdentifier('ref');\n          destructure(code, function (id) {\n            return this$1.scope.createIdentifier(id);\n          }, function (ref) {\n            var name = ref.name;\n            return this$1.scope.resolveName(name);\n          }, param, ref, false, introStatementGenerators);\n          code.prependRight(param.start, ref);\n        }\n      }\n    });\n  };\n  BlockStatement.prototype.transpileBlockScopedIdentifiers = function transpileBlockScopedIdentifiers(code) {\n    var this$1 = this;\n    Object.keys(this.scope.blockScopedDeclarations).forEach(function (name) {\n      var declarations = this$1.scope.blockScopedDeclarations[name];\n      for (var i$2 = 0, list$2 = declarations; i$2 < list$2.length; i$2 += 1) {\n        var declaration = list$2[i$2];\n        var cont = false; // TODO implement proper continue...\n\n        if (declaration.kind === 'for.let') {\n          // special case\n          var forStatement = declaration.node.findNearest('ForStatement');\n          if (forStatement.shouldRewriteAsFunction) {\n            var outerAlias = this$1.scope.createIdentifier(name);\n            var innerAlias = forStatement.reassigned[name] ? this$1.scope.createIdentifier(name) : name;\n            declaration.name = outerAlias;\n            code.overwrite(declaration.node.start, declaration.node.end, outerAlias, {\n              storeName: true\n            });\n            forStatement.aliases[name] = {\n              outer: outerAlias,\n              inner: innerAlias\n            };\n            for (var i = 0, list = declaration.instances; i < list.length; i += 1) {\n              var identifier = list[i];\n              var alias = forStatement.body.contains(identifier) ? innerAlias : outerAlias;\n              if (name !== alias) {\n                code.overwrite(identifier.start, identifier.end, alias, {\n                  storeName: true\n                });\n              }\n            }\n            cont = true;\n          }\n        }\n        if (!cont) {\n          var alias$1 = this$1.scope.createIdentifier(name);\n          if (name !== alias$1) {\n            declaration.name = alias$1;\n            code.overwrite(declaration.node.start, declaration.node.end, alias$1, {\n              storeName: true\n            });\n            for (var i$1 = 0, list$1 = declaration.instances; i$1 < list$1.length; i$1 += 1) {\n              var identifier$1 = list$1[i$1];\n              identifier$1.rewritten = true;\n              code.overwrite(identifier$1.start, identifier$1.end, alias$1, {\n                storeName: true\n              });\n            }\n          }\n        }\n      }\n    });\n  };\n  return BlockStatement;\n}(Node$1);\nfunction isArguments(node) {\n  return node.type === 'Identifier' && node.name === 'arguments';\n}\nfunction spread(code, elements, start, argumentsArrayAlias, isNew) {\n  var i = elements.length;\n  var firstSpreadIndex = -1;\n  while (i--) {\n    var element$1 = elements[i];\n    if (element$1 && element$1.type === 'SpreadElement') {\n      if (isArguments(element$1.argument)) {\n        code.overwrite(element$1.argument.start, element$1.argument.end, argumentsArrayAlias);\n      }\n      firstSpreadIndex = i;\n    }\n  }\n  if (firstSpreadIndex === -1) {\n    return false;\n  } // false indicates no spread elements\n\n  if (isNew) {\n    for (i = 0; i < elements.length; i += 1) {\n      var element$2 = elements[i];\n      if (element$2.type === 'SpreadElement') {\n        code.remove(element$2.start, element$2.argument.start);\n      } else {\n        code.prependRight(element$2.start, '[');\n        code.prependRight(element$2.end, ']');\n      }\n    }\n    return true; // true indicates some spread elements\n  }\n\n  var element = elements[firstSpreadIndex];\n  var previousElement = elements[firstSpreadIndex - 1];\n  if (!previousElement) {\n    code.remove(start, element.start);\n    code.overwrite(element.end, elements[1].start, '.concat( ');\n  } else {\n    code.overwrite(previousElement.end, element.start, ' ].concat( ');\n  }\n  for (i = firstSpreadIndex; i < elements.length; i += 1) {\n    element = elements[i];\n    if (element) {\n      if (element.type === 'SpreadElement') {\n        code.remove(element.start, element.argument.start);\n      } else {\n        code.appendLeft(element.start, '[');\n        code.appendLeft(element.end, ']');\n      }\n    }\n  }\n  return true; // true indicates some spread elements\n}\n\nvar ArrayExpression = function (Node) {\n  function ArrayExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ArrayExpression.__proto__ = Node;\n  ArrayExpression.prototype = Object.create(Node && Node.prototype);\n  ArrayExpression.prototype.constructor = ArrayExpression;\n  ArrayExpression.prototype.initialise = function initialise(transforms) {\n    var this$1 = this;\n    if (transforms.spreadRest && this.elements.length) {\n      var lexicalBoundary = this.findLexicalBoundary();\n      var i = this.elements.length;\n      while (i--) {\n        var element = this$1.elements[i];\n        if (element && element.type === 'SpreadElement' && isArguments(element.argument)) {\n          this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n        }\n      }\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  ArrayExpression.prototype.transpile = function transpile(code, transforms) {\n    Node.prototype.transpile.call(this, code, transforms);\n    if (transforms.spreadRest) {\n      // erase trailing comma after last array element if not an array hole\n      if (this.elements.length) {\n        var lastElement = this.elements[this.elements.length - 1];\n        if (lastElement && /\\s*,/.test(code.original.slice(lastElement.end, this.end))) {\n          code.overwrite(lastElement.end, this.end - 1, ' ');\n        }\n      }\n      if (this.elements.length === 1) {\n        var element = this.elements[0];\n        if (element && element.type === 'SpreadElement') {\n          // special case – [ ...arguments ]\n          if (isArguments(element.argument)) {\n            code.overwrite(this.start, this.end, \"[].concat( \" + this.argumentsArrayAlias + \" )\"); // TODO if this is the only use of argsArray, don't bother concating\n          } else {\n            code.overwrite(this.start, element.argument.start, '[].concat( ');\n            code.overwrite(element.end, this.end, ' )');\n          }\n        }\n      } else {\n        var hasSpreadElements = spread(code, this.elements, this.start, this.argumentsArrayAlias);\n        if (hasSpreadElements) {\n          code.overwrite(this.end - 1, this.end, ')');\n        }\n      }\n    }\n  };\n  return ArrayExpression;\n}(Node$1);\nfunction removeTrailingComma(code, c) {\n  while (code.original[c] !== ')') {\n    if (code.original[c] === ',') {\n      code.remove(c, c + 1);\n      return;\n    }\n    if (code.original[c] === '/') {\n      c = code.original.indexOf(code.original[c + 1] === '/' ? '\\n' : '*/', c) + 1;\n    }\n    c += 1;\n  }\n}\nvar ArrowFunctionExpression = function (Node) {\n  function ArrowFunctionExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ArrowFunctionExpression.__proto__ = Node;\n  ArrowFunctionExpression.prototype = Object.create(Node && Node.prototype);\n  ArrowFunctionExpression.prototype.constructor = ArrowFunctionExpression;\n  ArrowFunctionExpression.prototype.initialise = function initialise(transforms) {\n    this.body.createScope();\n    Node.prototype.initialise.call(this, transforms);\n  };\n  ArrowFunctionExpression.prototype.transpile = function transpile(code, transforms) {\n    var naked = this.params.length === 1 && this.start === this.params[0].start;\n    if (transforms.arrow || this.needsArguments(transforms)) {\n      // remove arrow\n      var charIndex = this.body.start;\n      while (code.original[charIndex] !== '=') {\n        charIndex -= 1;\n      }\n      code.remove(charIndex, this.body.start);\n      Node.prototype.transpile.call(this, code, transforms);\n\n      // wrap naked parameter\n      if (naked) {\n        code.prependRight(this.params[0].start, '(');\n        code.appendLeft(this.params[0].end, ')');\n      }\n\n      // add function\n      if (this.parent && this.parent.type === 'ExpressionStatement') {\n        // standalone expression statement\n        code.prependRight(this.start, '!function');\n      } else {\n        code.prependRight(this.start, 'function ');\n      }\n    } else {\n      Node.prototype.transpile.call(this, code, transforms);\n    }\n    if (transforms.trailingFunctionCommas && this.params.length && !naked) {\n      removeTrailingComma(code, this.params[this.params.length - 1].end);\n    }\n  };\n\n  // Returns whether any transforms that will happen use `arguments`\n  ArrowFunctionExpression.prototype.needsArguments = function needsArguments(transforms) {\n    return transforms.spreadRest && this.params.filter(function (param) {\n      return param.type === 'RestElement';\n    }).length > 0;\n  };\n  return ArrowFunctionExpression;\n}(Node$1);\nfunction checkConst(identifier, scope) {\n  var declaration = scope.findDeclaration(identifier.name);\n  if (declaration && declaration.kind === 'const') {\n    throw new CompileError(identifier.name + \" is read-only\", identifier);\n  }\n}\nvar AssignmentExpression = function (Node) {\n  function AssignmentExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) AssignmentExpression.__proto__ = Node;\n  AssignmentExpression.prototype = Object.create(Node && Node.prototype);\n  AssignmentExpression.prototype.constructor = AssignmentExpression;\n  AssignmentExpression.prototype.initialise = function initialise(transforms) {\n    if (this.left.type === 'Identifier') {\n      var declaration = this.findScope(false).findDeclaration(this.left.name);\n      // special case – https://gitlab.com/Rich-Harris/buble/issues/11\n      var statement = declaration && declaration.node.ancestor(3);\n      if (statement && statement.type === 'ForStatement' && statement.body.contains(this)) {\n        statement.reassigned[this.left.name] = true;\n      }\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  AssignmentExpression.prototype.transpile = function transpile(code, transforms) {\n    if (this.left.type === 'Identifier') {\n      // Do this check after everything has been initialized to find\n      // shadowing declarations after this expression\n      checkConst(this.left, this.findScope(false));\n    }\n    if (this.operator === '**=' && transforms.exponentiation) {\n      this.transpileExponentiation(code, transforms);\n    } else if (/Pattern/.test(this.left.type) && transforms.destructuring) {\n      this.transpileDestructuring(code);\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  AssignmentExpression.prototype.transpileDestructuring = function transpileDestructuring(code) {\n    var this$1 = this;\n    var writeScope = this.findScope(true);\n    var lookupScope = this.findScope(false);\n    var assign = writeScope.createDeclaration('assign');\n    code.appendRight(this.left.end, \"(\" + assign);\n    code.appendLeft(this.right.end, ', ');\n    var statementGenerators = [];\n    destructure(code, function (id) {\n      return writeScope.createDeclaration(id);\n    }, function (node) {\n      var name = lookupScope.resolveName(node.name);\n      checkConst(node, lookupScope);\n      return name;\n    }, this.left, assign, true, statementGenerators);\n    var suffix = ', ';\n    statementGenerators.forEach(function (fn, j) {\n      if (j === statementGenerators.length - 1) {\n        suffix = '';\n      }\n      fn(this$1.end, '', suffix);\n    });\n    if (this.unparenthesizedParent().type === 'ExpressionStatement') {\n      // no rvalue needed for expression statement\n      code.prependRight(this.end, \")\");\n    } else {\n      // destructuring is part of an expression - need an rvalue\n      code.appendRight(this.end, \", \" + assign + \")\");\n    }\n  };\n  AssignmentExpression.prototype.transpileExponentiation = function transpileExponentiation(code) {\n    var scope = this.findScope(false);\n\n    // first, the easy part – `**=` -> `=`\n    var charIndex = this.left.end;\n    while (code.original[charIndex] !== '*') {\n      charIndex += 1;\n    }\n    code.remove(charIndex, charIndex + 2);\n\n    // how we do the next part depends on a number of factors – whether\n    // this is a top-level statement, and whether we're updating a\n    // simple or complex reference\n    var base;\n    var left = this.left.unparenthesize();\n    if (left.type === 'Identifier') {\n      base = scope.resolveName(left.name);\n    } else if (left.type === 'MemberExpression') {\n      var object;\n      var needsObjectVar = false;\n      var property;\n      var needsPropertyVar = false;\n      var statement = this.findNearest(/(?:Statement|Declaration)$/);\n      var i0 = statement.getIndentation();\n      if (left.property.type === 'Identifier') {\n        property = left.computed ? scope.resolveName(left.property.name) : left.property.name;\n      } else {\n        property = scope.createDeclaration('property');\n        needsPropertyVar = true;\n      }\n      if (left.object.type === 'Identifier') {\n        object = scope.resolveName(left.object.name);\n      } else {\n        object = scope.createDeclaration('object');\n        needsObjectVar = true;\n      }\n      if (left.start === statement.start) {\n        if (needsObjectVar && needsPropertyVar) {\n          code.prependRight(statement.start, object + \" = \");\n          code.overwrite(left.object.end, left.property.start, \";\\n\" + i0 + property + \" = \");\n          code.overwrite(left.property.end, left.end, \";\\n\" + i0 + object + \"[\" + property + \"]\");\n        } else if (needsObjectVar) {\n          code.prependRight(statement.start, object + \" = \");\n          code.appendLeft(left.object.end, \";\\n\" + i0);\n          code.appendLeft(left.object.end, object);\n        } else if (needsPropertyVar) {\n          code.prependRight(left.property.start, property + \" = \");\n          code.appendLeft(left.property.end, \";\\n\" + i0);\n          code.move(left.property.start, left.property.end, this.start);\n          code.appendLeft(left.object.end, \"[\" + property + \"]\");\n          code.remove(left.object.end, left.property.start);\n          code.remove(left.property.end, left.end);\n        }\n      } else {\n        if (needsObjectVar && needsPropertyVar) {\n          code.prependRight(left.start, \"( \" + object + \" = \");\n          code.overwrite(left.object.end, left.property.start, \", \" + property + \" = \");\n          code.overwrite(left.property.end, left.end, \", \" + object + \"[\" + property + \"]\");\n        } else if (needsObjectVar) {\n          code.prependRight(left.start, \"( \" + object + \" = \");\n          code.appendLeft(left.object.end, \", \" + object);\n        } else if (needsPropertyVar) {\n          code.prependRight(left.property.start, \"( \" + property + \" = \");\n          code.appendLeft(left.property.end, \", \");\n          code.move(left.property.start, left.property.end, left.start);\n          code.overwrite(left.object.end, left.property.start, \"[\" + property + \"]\");\n          code.remove(left.property.end, left.end);\n        }\n        if (needsPropertyVar) {\n          code.appendLeft(this.end, \" )\");\n        }\n      }\n      base = object + (left.computed || needsPropertyVar ? \"[\" + property + \"]\" : \".\" + property);\n    }\n    code.prependRight(this.right.start, \"Math.pow( \" + base + \", \");\n    code.appendLeft(this.right.end, \" )\");\n  };\n  return AssignmentExpression;\n}(Node$1);\nvar BinaryExpression = function (Node) {\n  function BinaryExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) BinaryExpression.__proto__ = Node;\n  BinaryExpression.prototype = Object.create(Node && Node.prototype);\n  BinaryExpression.prototype.constructor = BinaryExpression;\n  BinaryExpression.prototype.transpile = function transpile(code, transforms) {\n    if (this.operator === '**' && transforms.exponentiation) {\n      code.prependRight(this.start, \"Math.pow( \");\n      code.overwrite(this.left.end, this.right.start, \", \");\n      code.appendLeft(this.end, \" )\");\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return BinaryExpression;\n}(Node$1);\nvar loopStatement = /(?:For(?:In|Of)?|While)Statement/;\nvar BreakStatement = function (Node) {\n  function BreakStatement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) BreakStatement.__proto__ = Node;\n  BreakStatement.prototype = Object.create(Node && Node.prototype);\n  BreakStatement.prototype.constructor = BreakStatement;\n  BreakStatement.prototype.initialise = function initialise() {\n    var loop = this.findNearest(loopStatement);\n    var switchCase = this.findNearest('SwitchCase');\n    if (loop && (!switchCase || loop.depth > switchCase.depth)) {\n      loop.canBreak = true;\n      this.loop = loop;\n    }\n  };\n  BreakStatement.prototype.transpile = function transpile(code) {\n    if (this.loop && this.loop.shouldRewriteAsFunction) {\n      if (this.label) {\n        throw new CompileError('Labels are not currently supported in a loop with locally-scoped variables', this);\n      }\n      code.overwrite(this.start, this.start + 5, \"return 'break'\");\n    }\n  };\n  return BreakStatement;\n}(Node$1);\nvar CallExpression = function (Node) {\n  function CallExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) CallExpression.__proto__ = Node;\n  CallExpression.prototype = Object.create(Node && Node.prototype);\n  CallExpression.prototype.constructor = CallExpression;\n  CallExpression.prototype.initialise = function initialise(transforms) {\n    var this$1 = this;\n    if (transforms.spreadRest && this.arguments.length > 1) {\n      var lexicalBoundary = this.findLexicalBoundary();\n      var i = this.arguments.length;\n      while (i--) {\n        var arg = this$1.arguments[i];\n        if (arg.type === 'SpreadElement' && isArguments(arg.argument)) {\n          this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n        }\n      }\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  CallExpression.prototype.transpile = function transpile(code, transforms) {\n    if (transforms.spreadRest && this.arguments.length) {\n      var hasSpreadElements = false;\n      var context;\n      var firstArgument = this.arguments[0];\n      if (this.arguments.length === 1) {\n        if (firstArgument.type === 'SpreadElement') {\n          code.remove(firstArgument.start, firstArgument.argument.start);\n          hasSpreadElements = true;\n        }\n      } else {\n        hasSpreadElements = spread(code, this.arguments, firstArgument.start, this.argumentsArrayAlias);\n      }\n      if (hasSpreadElements) {\n        // we need to handle super() and super.method() differently\n        // due to its instance\n        var _super = null;\n        if (this.callee.type === 'Super') {\n          _super = this.callee;\n        } else if (this.callee.type === 'MemberExpression' && this.callee.object.type === 'Super') {\n          _super = this.callee.object;\n        }\n        if (!_super && this.callee.type === 'MemberExpression') {\n          if (this.callee.object.type === 'Identifier') {\n            context = this.callee.object.name;\n          } else {\n            context = this.findScope(true).createDeclaration('ref');\n            var callExpression = this.callee.object;\n            code.prependRight(callExpression.start, \"(\" + context + \" = \");\n            code.appendLeft(callExpression.end, \")\");\n          }\n        } else {\n          context = 'void 0';\n        }\n        code.appendLeft(this.callee.end, '.apply');\n        if (_super) {\n          _super.noCall = true; // bit hacky...\n\n          if (this.arguments.length > 1) {\n            if (firstArgument.type !== 'SpreadElement') {\n              code.prependRight(firstArgument.start, \"[ \");\n            }\n            code.appendLeft(this.arguments[this.arguments.length - 1].end, ' )');\n          }\n        } else if (this.arguments.length === 1) {\n          code.prependRight(firstArgument.start, context + \", \");\n        } else {\n          if (firstArgument.type === 'SpreadElement') {\n            code.appendLeft(firstArgument.start, context + \", \");\n          } else {\n            code.appendLeft(firstArgument.start, context + \", [ \");\n          }\n          code.appendLeft(this.arguments[this.arguments.length - 1].end, ' )');\n        }\n      }\n    }\n    if (transforms.trailingFunctionCommas && this.arguments.length) {\n      removeTrailingComma(code, this.arguments[this.arguments.length - 1].end);\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return CallExpression;\n}(Node$1);\n\n// TODO this code is pretty wild, tidy it up\nvar ClassBody = function (Node) {\n  function ClassBody() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ClassBody.__proto__ = Node;\n  ClassBody.prototype = Object.create(Node && Node.prototype);\n  ClassBody.prototype.constructor = ClassBody;\n  ClassBody.prototype.transpile = function transpile(code, transforms, inFunctionExpression, superName) {\n    var this$1 = this;\n    if (transforms.classes) {\n      var name = this.parent.name;\n      var indentStr = code.getIndentString();\n      var i0 = this.getIndentation() + (inFunctionExpression ? indentStr : '');\n      var i1 = i0 + indentStr;\n      var constructorIndex = findIndex(this.body, function (node) {\n        return node.kind === 'constructor';\n      });\n      var constructor = this.body[constructorIndex];\n      var introBlock = '';\n      var outroBlock = '';\n      if (this.body.length) {\n        code.remove(this.start, this.body[0].start);\n        code.remove(this.body[this.body.length - 1].end, this.end);\n      } else {\n        code.remove(this.start, this.end);\n      }\n      if (constructor) {\n        constructor.value.body.isConstructorBody = true;\n        var previousMethod = this.body[constructorIndex - 1];\n        var nextMethod = this.body[constructorIndex + 1];\n\n        // ensure constructor is first\n        if (constructorIndex > 0) {\n          code.remove(previousMethod.end, constructor.start);\n          code.move(constructor.start, nextMethod ? nextMethod.start : this.end - 1, this.body[0].start);\n        }\n        if (!inFunctionExpression) {\n          code.appendLeft(constructor.end, ';');\n        }\n      }\n      var namedFunctions = this.program.options.namedFunctionExpressions !== false;\n      var namedConstructor = namedFunctions || this.parent.superClass || this.parent.type !== 'ClassDeclaration';\n      if (this.parent.superClass) {\n        var inheritanceBlock = \"if ( \" + superName + \" ) \" + name + \".__proto__ = \" + superName + \";\\n\" + i0 + name + \".prototype = Object.create( \" + superName + \" && \" + superName + \".prototype );\\n\" + i0 + name + \".prototype.constructor = \" + name + \";\";\n        if (constructor) {\n          introBlock += \"\\n\\n\" + i0 + inheritanceBlock;\n        } else {\n          var fn = \"function \" + name + \" () {\" + (superName ? \"\\n\" + i1 + superName + \".apply(this, arguments);\\n\" + i0 + \"}\" : \"}\") + (inFunctionExpression ? '' : ';') + (this.body.length ? \"\\n\\n\" + i0 : '');\n          inheritanceBlock = fn + inheritanceBlock;\n          introBlock += inheritanceBlock + \"\\n\\n\" + i0;\n        }\n      } else if (!constructor) {\n        var fn$1 = 'function ' + (namedConstructor ? name + ' ' : '') + '() {}';\n        if (this.parent.type === 'ClassDeclaration') {\n          fn$1 += ';';\n        }\n        if (this.body.length) {\n          fn$1 += \"\\n\\n\" + i0;\n        }\n        introBlock += fn$1;\n      }\n      var scope = this.findScope(false);\n      var prototypeGettersAndSetters = [];\n      var staticGettersAndSetters = [];\n      var prototypeAccessors;\n      var staticAccessors;\n      this.body.forEach(function (method, i) {\n        if ((method.kind === 'get' || method.kind === 'set') && transforms.getterSetter) {\n          throw new CompileError(\"getters and setters are not supported. Use `transforms: { getterSetter: false }` to skip transformation and disable this error\", method);\n        }\n        if (method.kind === 'constructor') {\n          var constructorName = namedConstructor ? ' ' + name : '';\n          code.overwrite(method.key.start, method.key.end, \"function\" + constructorName);\n          return;\n        }\n        if (method.static) {\n          var len = code.original[method.start + 6] == ' ' ? 7 : 6;\n          code.remove(method.start, method.start + len);\n        }\n        var isAccessor = method.kind !== 'method';\n        var lhs;\n        var methodName = method.key.name;\n        if (reserved[methodName] || method.value.body.scope.references[methodName]) {\n          methodName = scope.createIdentifier(methodName);\n        }\n\n        // when method name is a string or a number let's pretend it's a computed method\n\n        var fake_computed = false;\n        if (!method.computed && method.key.type === 'Literal') {\n          fake_computed = true;\n          method.computed = true;\n        }\n        if (isAccessor) {\n          if (method.computed) {\n            throw new Error('Computed accessor properties are not currently supported');\n          }\n          code.remove(method.start, method.key.start);\n          if (method.static) {\n            if (!~staticGettersAndSetters.indexOf(method.key.name)) {\n              staticGettersAndSetters.push(method.key.name);\n            }\n            if (!staticAccessors) {\n              staticAccessors = scope.createIdentifier('staticAccessors');\n            }\n            lhs = \"\" + staticAccessors;\n          } else {\n            if (!~prototypeGettersAndSetters.indexOf(method.key.name)) {\n              prototypeGettersAndSetters.push(method.key.name);\n            }\n            if (!prototypeAccessors) {\n              prototypeAccessors = scope.createIdentifier('prototypeAccessors');\n            }\n            lhs = \"\" + prototypeAccessors;\n          }\n        } else {\n          lhs = method.static ? \"\" + name : name + \".prototype\";\n        }\n        if (!method.computed) {\n          lhs += '.';\n        }\n        var insertNewlines = constructorIndex > 0 && i === constructorIndex + 1 || i === 0 && constructorIndex === this$1.body.length - 1;\n        if (insertNewlines) {\n          lhs = \"\\n\\n\" + i0 + lhs;\n        }\n        var c = method.key.end;\n        if (method.computed) {\n          if (fake_computed) {\n            code.prependRight(method.key.start, '[');\n            code.appendLeft(method.key.end, ']');\n          } else {\n            while (code.original[c] !== ']') {\n              c += 1;\n            }\n            c += 1;\n          }\n        }\n        var funcName = method.computed || isAccessor || !namedFunctions ? '' : methodName + \" \";\n        var rhs = (isAccessor ? \".\" + method.kind : '') + \" = function\" + (method.value.generator ? '* ' : ' ') + funcName;\n        code.remove(c, method.value.start);\n        code.prependRight(method.value.start, rhs);\n        code.appendLeft(method.end, ';');\n        if (method.value.generator) {\n          code.remove(method.start, method.key.start);\n        }\n        code.prependRight(method.start, lhs);\n      });\n      if (prototypeGettersAndSetters.length || staticGettersAndSetters.length) {\n        var intro = [];\n        var outro = [];\n        if (prototypeGettersAndSetters.length) {\n          intro.push(\"var \" + prototypeAccessors + \" = { \" + prototypeGettersAndSetters.map(function (name) {\n            return name + \": { configurable: true }\";\n          }).join(',') + \" };\");\n          outro.push(\"Object.defineProperties( \" + name + \".prototype, \" + prototypeAccessors + \" );\");\n        }\n        if (staticGettersAndSetters.length) {\n          intro.push(\"var \" + staticAccessors + \" = { \" + staticGettersAndSetters.map(function (name) {\n            return name + \": { configurable: true }\";\n          }).join(',') + \" };\");\n          outro.push(\"Object.defineProperties( \" + name + \", \" + staticAccessors + \" );\");\n        }\n        if (constructor) {\n          introBlock += \"\\n\\n\" + i0;\n        }\n        introBlock += intro.join(\"\\n\" + i0);\n        if (!constructor) {\n          introBlock += \"\\n\\n\" + i0;\n        }\n        outroBlock += \"\\n\\n\" + i0 + outro.join(\"\\n\" + i0);\n      }\n      if (constructor) {\n        code.appendLeft(constructor.end, introBlock);\n      } else {\n        code.prependRight(this.start, introBlock);\n      }\n      code.appendLeft(this.end, outroBlock);\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return ClassBody;\n}(Node$1);\n\n// TODO this function is slightly flawed – it works on the original string,\n// not its current edited state.\n// That's not a problem for the way that it's currently used, but it could\n// be in future...\nfunction deindent(node, code) {\n  var start = node.start;\n  var end = node.end;\n  var indentStr = code.getIndentString();\n  var indentStrLen = indentStr.length;\n  var indentStart = start - indentStrLen;\n  if (!node.program.indentExclusions[indentStart] && code.original.slice(indentStart, start) === indentStr) {\n    code.remove(indentStart, start);\n  }\n  var pattern = new RegExp(indentStr + '\\\\S', 'g');\n  var slice = code.original.slice(start, end);\n  var match;\n  while (match = pattern.exec(slice)) {\n    var removeStart = start + match.index;\n    if (!node.program.indentExclusions[removeStart]) {\n      code.remove(removeStart, removeStart + indentStrLen);\n    }\n  }\n}\nvar ClassDeclaration = function (Node) {\n  function ClassDeclaration() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ClassDeclaration.__proto__ = Node;\n  ClassDeclaration.prototype = Object.create(Node && Node.prototype);\n  ClassDeclaration.prototype.constructor = ClassDeclaration;\n  ClassDeclaration.prototype.initialise = function initialise(transforms) {\n    if (this.id) {\n      this.name = this.id.name;\n      this.findScope(true).addDeclaration(this.id, 'class');\n    } else {\n      this.name = this.findScope(true).createIdentifier(\"defaultExport\");\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  ClassDeclaration.prototype.transpile = function transpile(code, transforms) {\n    if (transforms.classes) {\n      if (!this.superClass) {\n        deindent(this.body, code);\n      }\n      var superName = this.superClass && (this.superClass.name || 'superclass');\n      var i0 = this.getIndentation();\n      var i1 = i0 + code.getIndentString();\n\n      // if this is an export default statement, we have to move the export to\n      // after the declaration, because `export default var Foo = ...` is illegal\n      var isExportDefaultDeclaration = this.parent.type === 'ExportDefaultDeclaration';\n      if (isExportDefaultDeclaration) {\n        code.remove(this.parent.start, this.start);\n      }\n      var c = this.start;\n      if (this.id) {\n        code.overwrite(c, this.id.start, 'var ');\n        c = this.id.end;\n      } else {\n        code.prependLeft(c, \"var \" + this.name);\n      }\n      if (this.superClass) {\n        if (this.superClass.end === this.body.start) {\n          code.remove(c, this.superClass.start);\n          code.appendLeft(c, \" = /*@__PURE__*/(function (\" + superName + \") {\\n\" + i1);\n        } else {\n          code.overwrite(c, this.superClass.start, ' = ');\n          code.overwrite(this.superClass.end, this.body.start, \"/*@__PURE__*/(function (\" + superName + \") {\\n\" + i1);\n        }\n      } else {\n        if (c === this.body.start) {\n          code.appendLeft(c, ' = ');\n        } else {\n          code.overwrite(c, this.body.start, ' = ');\n        }\n      }\n      this.body.transpile(code, transforms, !!this.superClass, superName);\n      var syntheticDefaultExport = isExportDefaultDeclaration ? \"\\n\\n\" + i0 + \"export default \" + this.name + \";\" : '';\n      if (this.superClass) {\n        code.appendLeft(this.end, \"\\n\\n\" + i1 + \"return \" + this.name + \";\\n\" + i0 + \"}(\");\n        code.move(this.superClass.start, this.superClass.end, this.end);\n        code.prependRight(this.end, \"));\" + syntheticDefaultExport);\n      } else if (syntheticDefaultExport) {\n        code.prependRight(this.end, syntheticDefaultExport);\n      }\n    } else {\n      this.body.transpile(code, transforms, false, null);\n    }\n  };\n  return ClassDeclaration;\n}(Node$1);\nvar ClassExpression = function (Node) {\n  function ClassExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ClassExpression.__proto__ = Node;\n  ClassExpression.prototype = Object.create(Node && Node.prototype);\n  ClassExpression.prototype.constructor = ClassExpression;\n  ClassExpression.prototype.initialise = function initialise(transforms) {\n    this.name = (this.id ? this.id.name : this.parent.type === 'VariableDeclarator' ? this.parent.id.name : this.parent.type !== 'AssignmentExpression' ? null : this.parent.left.type === 'Identifier' ? this.parent.left.name : this.parent.left.type === 'MemberExpression' ? this.parent.left.property.name : null) || this.findScope(true).createIdentifier('anonymous');\n    Node.prototype.initialise.call(this, transforms);\n  };\n  ClassExpression.prototype.transpile = function transpile(code, transforms) {\n    if (transforms.classes) {\n      var superName = this.superClass && (this.superClass.name || 'superclass');\n      var i0 = this.getIndentation();\n      var i1 = i0 + code.getIndentString();\n      if (this.superClass) {\n        code.remove(this.start, this.superClass.start);\n        code.remove(this.superClass.end, this.body.start);\n        code.appendRight(this.start, \"/*@__PURE__*/(function (\" + superName + \") {\\n\" + i1);\n      } else {\n        code.overwrite(this.start, this.body.start, \"/*@__PURE__*/(function () {\\n\" + i1);\n      }\n      this.body.transpile(code, transforms, true, superName);\n      var superClass = '';\n      if (this.superClass) {\n        superClass = code.slice(this.superClass.start, this.superClass.end);\n        code.remove(this.superClass.start, this.superClass.end);\n      }\n      code.appendLeft(this.end, \"\\n\\n\" + i1 + \"return \" + this.name + \";\\n\" + i0 + \"}(\" + superClass + \"))\");\n    } else {\n      this.body.transpile(code, transforms, false);\n    }\n  };\n  return ClassExpression;\n}(Node$1);\nvar ContinueStatement = function (Node) {\n  function ContinueStatement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ContinueStatement.__proto__ = Node;\n  ContinueStatement.prototype = Object.create(Node && Node.prototype);\n  ContinueStatement.prototype.constructor = ContinueStatement;\n  ContinueStatement.prototype.transpile = function transpile(code) {\n    var loop = this.findNearest(loopStatement);\n    if (loop.shouldRewriteAsFunction) {\n      if (this.label) {\n        throw new CompileError('Labels are not currently supported in a loop with locally-scoped variables', this);\n      }\n      code.overwrite(this.start, this.start + 8, 'return');\n    }\n  };\n  return ContinueStatement;\n}(Node$1);\nvar ExportDefaultDeclaration = function (Node) {\n  function ExportDefaultDeclaration() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ExportDefaultDeclaration.__proto__ = Node;\n  ExportDefaultDeclaration.prototype = Object.create(Node && Node.prototype);\n  ExportDefaultDeclaration.prototype.constructor = ExportDefaultDeclaration;\n  ExportDefaultDeclaration.prototype.initialise = function initialise(transforms) {\n    if (transforms.moduleExport) {\n      throw new CompileError('export is not supported', this);\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  return ExportDefaultDeclaration;\n}(Node$1);\nvar ExportNamedDeclaration = function (Node) {\n  function ExportNamedDeclaration() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ExportNamedDeclaration.__proto__ = Node;\n  ExportNamedDeclaration.prototype = Object.create(Node && Node.prototype);\n  ExportNamedDeclaration.prototype.constructor = ExportNamedDeclaration;\n  ExportNamedDeclaration.prototype.initialise = function initialise(transforms) {\n    if (transforms.moduleExport) {\n      throw new CompileError('export is not supported', this);\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  return ExportNamedDeclaration;\n}(Node$1);\nvar LoopStatement = function (Node) {\n  function LoopStatement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) LoopStatement.__proto__ = Node;\n  LoopStatement.prototype = Object.create(Node && Node.prototype);\n  LoopStatement.prototype.constructor = LoopStatement;\n  LoopStatement.prototype.findScope = function findScope(functionScope) {\n    return functionScope || !this.createdScope ? this.parent.findScope(functionScope) : this.body.scope;\n  };\n  LoopStatement.prototype.initialise = function initialise(transforms) {\n    var this$1 = this;\n    this.body.createScope();\n    this.createdScope = true;\n\n    // this is populated as and when reassignments occur\n    this.reassigned = Object.create(null);\n    this.aliases = Object.create(null);\n    this.thisRefs = [];\n    Node.prototype.initialise.call(this, transforms);\n    if (transforms.letConst) {\n      // see if any block-scoped declarations are referenced\n      // inside function expressions\n      var names = Object.keys(this.body.scope.declarations);\n      var i = names.length;\n      while (i--) {\n        var name = names[i];\n        var declaration = this$1.body.scope.declarations[name];\n        var j = declaration.instances.length;\n        while (j--) {\n          var instance = declaration.instances[j];\n          var nearestFunctionExpression = instance.findNearest(/Function/);\n          if (nearestFunctionExpression && nearestFunctionExpression.depth > this$1.depth) {\n            this$1.shouldRewriteAsFunction = true;\n            for (var i$1 = 0, list = this$1.thisRefs; i$1 < list.length; i$1 += 1) {\n              var node = list[i$1];\n              node.alias = node.alias || node.findLexicalBoundary().getThisAlias();\n            }\n            break;\n          }\n        }\n        if (this$1.shouldRewriteAsFunction) {\n          break;\n        }\n      }\n    }\n  };\n  LoopStatement.prototype.transpile = function transpile(code, transforms) {\n    var needsBlock = this.type != 'ForOfStatement' && (this.body.type !== 'BlockStatement' || this.body.type === 'BlockStatement' && this.body.synthetic);\n    if (this.shouldRewriteAsFunction) {\n      var i0 = this.getIndentation();\n      var i1 = i0 + code.getIndentString();\n      var argString = this.args ? \" \" + this.args.join(', ') + \" \" : '';\n      var paramString = this.params ? \" \" + this.params.join(', ') + \" \" : '';\n      var functionScope = this.findScope(true);\n      var loop = functionScope.createIdentifier('loop');\n      var before = \"var \" + loop + \" = function (\" + paramString + \") \" + (this.body.synthetic ? \"{\\n\" + i0 + code.getIndentString() : '');\n      var after = (this.body.synthetic ? \"\\n\" + i0 + \"}\" : '') + \";\\n\\n\" + i0;\n      code.prependRight(this.body.start, before);\n      code.appendLeft(this.body.end, after);\n      code.move(this.start, this.body.start, this.body.end);\n      if (this.canBreak || this.canReturn) {\n        var returned = functionScope.createIdentifier('returned');\n        var insert = \"{\\n\" + i1 + \"var \" + returned + \" = \" + loop + \"(\" + argString + \");\\n\";\n        if (this.canBreak) {\n          insert += \"\\n\" + i1 + \"if ( \" + returned + \" === 'break' ) break;\";\n        }\n        if (this.canReturn) {\n          insert += \"\\n\" + i1 + \"if ( \" + returned + \" ) return \" + returned + \".v;\";\n        }\n        insert += \"\\n\" + i0 + \"}\";\n        code.prependRight(this.body.end, insert);\n      } else {\n        var callExpression = loop + \"(\" + argString + \");\";\n        if (this.type === 'DoWhileStatement') {\n          code.overwrite(this.start, this.body.start, \"do {\\n\" + i1 + callExpression + \"\\n\" + i0 + \"}\");\n        } else {\n          code.prependRight(this.body.end, callExpression);\n        }\n      }\n    } else if (needsBlock) {\n      code.appendLeft(this.body.start, '{ ');\n      code.prependRight(this.body.end, ' }');\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return LoopStatement;\n}(Node$1);\nvar ForStatement = function (LoopStatement$$1) {\n  function ForStatement() {\n    LoopStatement$$1.apply(this, arguments);\n  }\n  if (LoopStatement$$1) ForStatement.__proto__ = LoopStatement$$1;\n  ForStatement.prototype = Object.create(LoopStatement$$1 && LoopStatement$$1.prototype);\n  ForStatement.prototype.constructor = ForStatement;\n  ForStatement.prototype.findScope = function findScope(functionScope) {\n    return functionScope || !this.createdScope ? this.parent.findScope(functionScope) : this.body.scope;\n  };\n  ForStatement.prototype.transpile = function transpile(code, transforms) {\n    var this$1 = this;\n    var i1 = this.getIndentation() + code.getIndentString();\n    if (this.shouldRewriteAsFunction) {\n      // which variables are declared in the init statement?\n      var names = this.init.type === 'VariableDeclaration' ? this.init.declarations.map(function (declarator) {\n        return extractNames(declarator.id);\n      }) : [];\n      var aliases = this.aliases;\n      this.args = names.map(function (name) {\n        return name in this$1.aliases ? this$1.aliases[name].outer : name;\n      });\n      this.params = names.map(function (name) {\n        return name in this$1.aliases ? this$1.aliases[name].inner : name;\n      });\n      var updates = Object.keys(this.reassigned).map(function (name) {\n        return aliases[name].outer + \" = \" + aliases[name].inner + \";\";\n      });\n      if (updates.length) {\n        if (this.body.synthetic) {\n          code.appendLeft(this.body.body[0].end, \"; \" + updates.join(\" \"));\n        } else {\n          var lastStatement = this.body.body[this.body.body.length - 1];\n          code.appendLeft(lastStatement.end, \"\\n\\n\" + i1 + updates.join(\"\\n\" + i1));\n        }\n      }\n    }\n    LoopStatement$$1.prototype.transpile.call(this, code, transforms);\n  };\n  return ForStatement;\n}(LoopStatement);\nvar ForInStatement = function (LoopStatement$$1) {\n  function ForInStatement() {\n    LoopStatement$$1.apply(this, arguments);\n  }\n  if (LoopStatement$$1) ForInStatement.__proto__ = LoopStatement$$1;\n  ForInStatement.prototype = Object.create(LoopStatement$$1 && LoopStatement$$1.prototype);\n  ForInStatement.prototype.constructor = ForInStatement;\n  ForInStatement.prototype.findScope = function findScope(functionScope) {\n    return functionScope || !this.createdScope ? this.parent.findScope(functionScope) : this.body.scope;\n  };\n  ForInStatement.prototype.transpile = function transpile(code, transforms) {\n    var this$1 = this;\n    var hasDeclaration = this.left.type === 'VariableDeclaration';\n    if (this.shouldRewriteAsFunction) {\n      // which variables are declared in the init statement?\n      var names = hasDeclaration ? this.left.declarations.map(function (declarator) {\n        return extractNames(declarator.id);\n      }) : [];\n      this.args = names.map(function (name) {\n        return name in this$1.aliases ? this$1.aliases[name].outer : name;\n      });\n      this.params = names.map(function (name) {\n        return name in this$1.aliases ? this$1.aliases[name].inner : name;\n      });\n    }\n    LoopStatement$$1.prototype.transpile.call(this, code, transforms);\n    var maybePattern = hasDeclaration ? this.left.declarations[0].id : this.left;\n    if (maybePattern.type !== 'Identifier') {\n      this.destructurePattern(code, maybePattern, hasDeclaration);\n    }\n  };\n  ForInStatement.prototype.destructurePattern = function destructurePattern(code, pattern, isDeclaration) {\n    var scope = this.findScope(true);\n    var i0 = this.getIndentation();\n    var i1 = i0 + code.getIndentString();\n    var ref = scope.createIdentifier('ref');\n    var bodyStart = this.body.body.length ? this.body.body[0].start : this.body.start + 1;\n    code.move(pattern.start, pattern.end, bodyStart);\n    code.prependRight(pattern.end, isDeclaration ? ref : \"var \" + ref);\n    var statementGenerators = [];\n    destructure(code, function (id) {\n      return scope.createIdentifier(id);\n    }, function (ref) {\n      var name = ref.name;\n      return scope.resolveName(name);\n    }, pattern, ref, false, statementGenerators);\n    var suffix = \";\\n\" + i1;\n    statementGenerators.forEach(function (fn, i) {\n      if (i === statementGenerators.length - 1) {\n        suffix = \";\\n\\n\" + i1;\n      }\n      fn(bodyStart, '', suffix);\n    });\n  };\n  return ForInStatement;\n}(LoopStatement);\nvar ForOfStatement = function (LoopStatement$$1) {\n  function ForOfStatement() {\n    LoopStatement$$1.apply(this, arguments);\n  }\n  if (LoopStatement$$1) ForOfStatement.__proto__ = LoopStatement$$1;\n  ForOfStatement.prototype = Object.create(LoopStatement$$1 && LoopStatement$$1.prototype);\n  ForOfStatement.prototype.constructor = ForOfStatement;\n  ForOfStatement.prototype.initialise = function initialise(transforms) {\n    if (transforms.forOf && !transforms.dangerousForOf) {\n      throw new CompileError(\"for...of statements are not supported. Use `transforms: { forOf: false }` to skip transformation and disable this error, or `transforms: { dangerousForOf: true }` if you know what you're doing\", this);\n    }\n    LoopStatement$$1.prototype.initialise.call(this, transforms);\n  };\n  ForOfStatement.prototype.transpile = function transpile(code, transforms) {\n    LoopStatement$$1.prototype.transpile.call(this, code, transforms);\n    if (!transforms.dangerousForOf) {\n      return;\n    }\n\n    // edge case (#80)\n    if (!this.body.body[0]) {\n      if (this.left.type === 'VariableDeclaration' && this.left.kind === 'var') {\n        code.remove(this.start, this.left.start);\n        code.appendLeft(this.left.end, ';');\n        code.remove(this.left.end, this.end);\n      } else {\n        code.remove(this.start, this.end);\n      }\n      return;\n    }\n    var scope = this.findScope(true);\n    var i0 = this.getIndentation();\n    var i1 = i0 + code.getIndentString();\n    var key = scope.createIdentifier('i');\n    var list = scope.createIdentifier('list');\n    if (this.body.synthetic) {\n      code.prependRight(this.left.start, \"{\\n\" + i1);\n      code.appendLeft(this.body.body[0].end, \"\\n\" + i0 + \"}\");\n    }\n    var bodyStart = this.body.body[0].start;\n    code.remove(this.left.end, this.right.start);\n    code.move(this.left.start, this.left.end, bodyStart);\n    code.prependRight(this.right.start, \"var \" + key + \" = 0, \" + list + \" = \");\n    code.appendLeft(this.right.end, \"; \" + key + \" < \" + list + \".length; \" + key + \" += 1\");\n    var isDeclaration = this.left.type === 'VariableDeclaration';\n    var maybeDestructuring = isDeclaration ? this.left.declarations[0].id : this.left;\n    if (maybeDestructuring.type !== 'Identifier') {\n      var statementGenerators = [];\n      var ref = scope.createIdentifier('ref');\n      destructure(code, function (id) {\n        return scope.createIdentifier(id);\n      }, function (ref) {\n        var name = ref.name;\n        return scope.resolveName(name);\n      }, maybeDestructuring, ref, !isDeclaration, statementGenerators);\n      var suffix = \";\\n\" + i1;\n      statementGenerators.forEach(function (fn, i) {\n        if (i === statementGenerators.length - 1) {\n          suffix = \";\\n\\n\" + i1;\n        }\n        fn(bodyStart, '', suffix);\n      });\n      if (isDeclaration) {\n        code.appendLeft(this.left.start + this.left.kind.length + 1, ref);\n        code.appendLeft(this.left.end, \" = \" + list + \"[\" + key + \"];\\n\" + i1);\n      } else {\n        code.appendLeft(this.left.end, \"var \" + ref + \" = \" + list + \"[\" + key + \"];\\n\" + i1);\n      }\n    } else {\n      code.appendLeft(this.left.end, \" = \" + list + \"[\" + key + \"];\\n\\n\" + i1);\n    }\n  };\n  return ForOfStatement;\n}(LoopStatement);\nvar FunctionDeclaration = function (Node) {\n  function FunctionDeclaration() {\n    Node.apply(this, arguments);\n  }\n  if (Node) FunctionDeclaration.__proto__ = Node;\n  FunctionDeclaration.prototype = Object.create(Node && Node.prototype);\n  FunctionDeclaration.prototype.constructor = FunctionDeclaration;\n  FunctionDeclaration.prototype.initialise = function initialise(transforms) {\n    if (this.generator && transforms.generator) {\n      throw new CompileError('Generators are not supported', this);\n    }\n    this.body.createScope();\n    if (this.id) {\n      this.findScope(true).addDeclaration(this.id, 'function');\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  FunctionDeclaration.prototype.transpile = function transpile(code, transforms) {\n    Node.prototype.transpile.call(this, code, transforms);\n    if (transforms.trailingFunctionCommas && this.params.length) {\n      removeTrailingComma(code, this.params[this.params.length - 1].end);\n    }\n  };\n  return FunctionDeclaration;\n}(Node$1);\nvar FunctionExpression = function (Node) {\n  function FunctionExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) FunctionExpression.__proto__ = Node;\n  FunctionExpression.prototype = Object.create(Node && Node.prototype);\n  FunctionExpression.prototype.constructor = FunctionExpression;\n  FunctionExpression.prototype.initialise = function initialise(transforms) {\n    var this$1 = this;\n    if (this.generator && transforms.generator) {\n      throw new CompileError('Generators are not supported', this);\n    }\n    this.body.createScope();\n    if (this.id) {\n      // function expression IDs belong to the child scope...\n      this.body.scope.addDeclaration(this.id, 'function');\n    }\n    Node.prototype.initialise.call(this, transforms);\n    var parent = this.parent;\n    var methodName;\n    if (transforms.conciseMethodProperty && parent.type === 'Property' && parent.kind === 'init' && parent.method && parent.key.type === 'Identifier') {\n      // object literal concise method\n      methodName = parent.key.name;\n    } else if (transforms.classes && parent.type === 'MethodDefinition' && parent.kind === 'method' && parent.key.type === 'Identifier') {\n      // method definition in a class\n      methodName = parent.key.name;\n    } else if (this.id && this.id.type === 'Identifier') {\n      // naked function expression\n      methodName = this.id.alias || this.id.name;\n    }\n    if (methodName) {\n      for (var i$1 = 0, list$1 = this$1.params; i$1 < list$1.length; i$1 += 1) {\n        var param = list$1[i$1];\n        if (param.type === 'Identifier' && methodName === param.name) {\n          // workaround for Safari 9/WebKit bug:\n          // https://gitlab.com/Rich-Harris/buble/issues/154\n          // change parameter name when same as method name\n\n          var scope = this$1.body.scope;\n          var declaration = scope.declarations[methodName];\n          var alias = scope.createIdentifier(methodName);\n          param.alias = alias;\n          for (var i = 0, list = declaration.instances; i < list.length; i += 1) {\n            var identifier = list[i];\n            identifier.alias = alias;\n          }\n          break;\n        }\n      }\n    }\n  };\n  FunctionExpression.prototype.transpile = function transpile(code, transforms) {\n    Node.prototype.transpile.call(this, code, transforms);\n    if (transforms.trailingFunctionCommas && this.params.length) {\n      removeTrailingComma(code, this.params[this.params.length - 1].end);\n    }\n  };\n  return FunctionExpression;\n}(Node$1);\nfunction isReference(node, parent) {\n  if (node.type === 'MemberExpression') {\n    return !node.computed && isReference(node.object, node);\n  }\n  if (node.type === 'Identifier') {\n    // the only time we could have an identifier node without a parent is\n    // if it's the entire body of a function without a block statement –\n    // i.e. an arrow function expression like `a => a`\n    if (!parent) {\n      return true;\n    }\n    if (/(Function|Class)Expression/.test(parent.type)) {\n      return false;\n    }\n    if (parent.type === 'VariableDeclarator') {\n      return node === parent.init;\n    }\n\n    // TODO is this right?\n    if (parent.type === 'MemberExpression' || parent.type === 'MethodDefinition') {\n      return parent.computed || node === parent.object;\n    }\n    if (parent.type === 'ArrayPattern') {\n      return false;\n    }\n\n    // disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n    if (parent.type === 'Property') {\n      if (parent.parent.type === 'ObjectPattern') {\n        return false;\n      }\n      return parent.computed || node === parent.value;\n    }\n\n    // disregard the `bar` in `class Foo { bar () {...} }`\n    if (parent.type === 'MethodDefinition') {\n      return false;\n    }\n\n    // disregard the `bar` in `export { foo as bar }`\n    if (parent.type === 'ExportSpecifier' && node !== parent.local) {\n      return false;\n    }\n    return true;\n  }\n}\nvar Identifier = function (Node) {\n  function Identifier() {\n    Node.apply(this, arguments);\n  }\n  if (Node) Identifier.__proto__ = Node;\n  Identifier.prototype = Object.create(Node && Node.prototype);\n  Identifier.prototype.constructor = Identifier;\n  Identifier.prototype.findScope = function findScope(functionScope) {\n    if (this.parent.params && ~this.parent.params.indexOf(this)) {\n      return this.parent.body.scope;\n    }\n    if (this.parent.type === 'FunctionExpression' && this === this.parent.id) {\n      return this.parent.body.scope;\n    }\n    return this.parent.findScope(functionScope);\n  };\n  Identifier.prototype.initialise = function initialise(transforms) {\n    if (isReference(this, this.parent)) {\n      if (transforms.arrow && this.name === 'arguments' && !this.findScope(false).contains(this.name)) {\n        var lexicalBoundary = this.findLexicalBoundary();\n        var arrowFunction = this.findNearest('ArrowFunctionExpression');\n        var loop = this.findNearest(loopStatement);\n        if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n          this.alias = lexicalBoundary.getArgumentsAlias();\n        }\n        if (loop && loop.body.contains(this) && loop.depth > lexicalBoundary.depth) {\n          this.alias = lexicalBoundary.getArgumentsAlias();\n        }\n      }\n      this.findScope(false).addReference(this);\n    }\n  };\n  Identifier.prototype.transpile = function transpile(code) {\n    if (this.alias) {\n      code.overwrite(this.start, this.end, this.alias, {\n        storeName: true,\n        contentOnly: true\n      });\n    }\n  };\n  return Identifier;\n}(Node$1);\nvar IfStatement = function (Node) {\n  function IfStatement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) IfStatement.__proto__ = Node;\n  IfStatement.prototype = Object.create(Node && Node.prototype);\n  IfStatement.prototype.constructor = IfStatement;\n  IfStatement.prototype.initialise = function initialise(transforms) {\n    Node.prototype.initialise.call(this, transforms);\n  };\n  IfStatement.prototype.transpile = function transpile(code, transforms) {\n    if (this.consequent.type !== 'BlockStatement' || this.consequent.type === 'BlockStatement' && this.consequent.synthetic) {\n      code.appendLeft(this.consequent.start, '{ ');\n      code.prependRight(this.consequent.end, ' }');\n    }\n    if (this.alternate && this.alternate.type !== 'IfStatement' && (this.alternate.type !== 'BlockStatement' || this.alternate.type === 'BlockStatement' && this.alternate.synthetic)) {\n      code.appendLeft(this.alternate.start, '{ ');\n      code.prependRight(this.alternate.end, ' }');\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return IfStatement;\n}(Node$1);\nvar ImportDeclaration = function (Node) {\n  function ImportDeclaration() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ImportDeclaration.__proto__ = Node;\n  ImportDeclaration.prototype = Object.create(Node && Node.prototype);\n  ImportDeclaration.prototype.constructor = ImportDeclaration;\n  ImportDeclaration.prototype.initialise = function initialise(transforms) {\n    if (transforms.moduleImport) {\n      throw new CompileError('import is not supported', this);\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  return ImportDeclaration;\n}(Node$1);\nvar ImportDefaultSpecifier = function (Node) {\n  function ImportDefaultSpecifier() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ImportDefaultSpecifier.__proto__ = Node;\n  ImportDefaultSpecifier.prototype = Object.create(Node && Node.prototype);\n  ImportDefaultSpecifier.prototype.constructor = ImportDefaultSpecifier;\n  ImportDefaultSpecifier.prototype.initialise = function initialise(transforms) {\n    this.findScope(true).addDeclaration(this.local, 'import');\n    Node.prototype.initialise.call(this, transforms);\n  };\n  return ImportDefaultSpecifier;\n}(Node$1);\nvar ImportSpecifier = function (Node) {\n  function ImportSpecifier() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ImportSpecifier.__proto__ = Node;\n  ImportSpecifier.prototype = Object.create(Node && Node.prototype);\n  ImportSpecifier.prototype.constructor = ImportSpecifier;\n  ImportSpecifier.prototype.initialise = function initialise(transforms) {\n    this.findScope(true).addDeclaration(this.local, 'import');\n    Node.prototype.initialise.call(this, transforms);\n  };\n  return ImportSpecifier;\n}(Node$1);\nvar hasDashes = function hasDashes(val) {\n  return /-/.test(val);\n};\nvar formatKey = function formatKey(key) {\n  return hasDashes(key) ? \"'\" + key + \"'\" : key;\n};\nvar formatVal = function formatVal(val) {\n  return val ? '' : 'true';\n};\nvar JSXAttribute = function (Node) {\n  function JSXAttribute() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXAttribute.__proto__ = Node;\n  JSXAttribute.prototype = Object.create(Node && Node.prototype);\n  JSXAttribute.prototype.constructor = JSXAttribute;\n  JSXAttribute.prototype.transpile = function transpile(code, transforms) {\n    var ref = this.name;\n    var start = ref.start;\n    var name = ref.name;\n\n    // Overwrite equals sign if value is present.\n    var end = this.value ? this.value.start : this.name.end;\n    code.overwrite(start, end, formatKey(name) + \": \" + formatVal(this.value));\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return JSXAttribute;\n}(Node$1);\nfunction containsNewLine(node) {\n  return node.type === 'JSXText' && !/\\S/.test(node.value) && /\\n/.test(node.value);\n}\nvar JSXClosingElement = function (Node) {\n  function JSXClosingElement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXClosingElement.__proto__ = Node;\n  JSXClosingElement.prototype = Object.create(Node && Node.prototype);\n  JSXClosingElement.prototype.constructor = JSXClosingElement;\n  JSXClosingElement.prototype.transpile = function transpile(code) {\n    var spaceBeforeParen = true;\n    var lastChild = this.parent.children[this.parent.children.length - 1];\n\n    // omit space before closing paren if\n    //   a) this is on a separate line, or\n    //   b) there are no children but there are attributes\n    if (lastChild && containsNewLine(lastChild) || this.parent.openingElement.attributes.length) {\n      spaceBeforeParen = false;\n    }\n    code.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');\n  };\n  return JSXClosingElement;\n}(Node$1);\nfunction containsNewLine$1(node) {\n  return node.type === 'JSXText' && !/\\S/.test(node.value) && /\\n/.test(node.value);\n}\nvar JSXClosingFragment = function (Node) {\n  function JSXClosingFragment() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXClosingFragment.__proto__ = Node;\n  JSXClosingFragment.prototype = Object.create(Node && Node.prototype);\n  JSXClosingFragment.prototype.constructor = JSXClosingFragment;\n  JSXClosingFragment.prototype.transpile = function transpile(code) {\n    var spaceBeforeParen = true;\n    var lastChild = this.parent.children[this.parent.children.length - 1];\n\n    // omit space before closing paren if this is on a separate line\n    if (lastChild && containsNewLine$1(lastChild)) {\n      spaceBeforeParen = false;\n    }\n    code.overwrite(this.start, this.end, spaceBeforeParen ? ' )' : ')');\n  };\n  return JSXClosingFragment;\n}(Node$1);\nfunction normalise(str, removeTrailingWhitespace) {\n  str = str.replace(/\\u00a0/g, '&nbsp;');\n  if (removeTrailingWhitespace && /\\n/.test(str)) {\n    str = str.replace(/\\s+$/, '');\n  }\n  str = str.replace(/^\\n\\r?\\s+/, '') // remove leading newline + space\n  .replace(/\\s*\\n\\r?\\s*/gm, ' '); // replace newlines with spaces\n\n  // TODO prefer single quotes?\n  return JSON.stringify(str);\n}\nvar JSXElement = function (Node) {\n  function JSXElement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXElement.__proto__ = Node;\n  JSXElement.prototype = Object.create(Node && Node.prototype);\n  JSXElement.prototype.constructor = JSXElement;\n  JSXElement.prototype.transpile = function transpile(code, transforms) {\n    Node.prototype.transpile.call(this, code, transforms);\n    var children = this.children.filter(function (child) {\n      if (child.type !== 'JSXText') {\n        return true;\n      }\n\n      // remove whitespace-only literals, unless on a single line\n      return /\\S/.test(child.raw) || !/\\n/.test(child.raw);\n    });\n    if (children.length) {\n      var c = (this.openingElement || this.openingFragment).end;\n      var i;\n      for (i = 0; i < children.length; i += 1) {\n        var child = children[i];\n        if (child.type === 'JSXExpressionContainer' && child.expression.type === 'JSXEmptyExpression') ;else {\n          var tail = code.original[c] === '\\n' && child.type !== 'JSXText' ? '' : ' ';\n          code.appendLeft(c, \",\" + tail);\n        }\n        if (child.type === 'JSXText') {\n          var str = normalise(child.value, i === children.length - 1);\n          code.overwrite(child.start, child.end, str);\n        }\n        c = child.end;\n      }\n    }\n  };\n  return JSXElement;\n}(Node$1);\nvar JSXExpressionContainer = function (Node) {\n  function JSXExpressionContainer() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXExpressionContainer.__proto__ = Node;\n  JSXExpressionContainer.prototype = Object.create(Node && Node.prototype);\n  JSXExpressionContainer.prototype.constructor = JSXExpressionContainer;\n  JSXExpressionContainer.prototype.transpile = function transpile(code, transforms) {\n    code.remove(this.start, this.expression.start);\n    code.remove(this.expression.end, this.end);\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return JSXExpressionContainer;\n}(Node$1);\nvar JSXFragment = function (JSXElement$$1) {\n  function JSXFragment() {\n    JSXElement$$1.apply(this, arguments);\n  }\n  if (JSXElement$$1) JSXFragment.__proto__ = JSXElement$$1;\n  JSXFragment.prototype = Object.create(JSXElement$$1 && JSXElement$$1.prototype);\n  JSXFragment.prototype.constructor = JSXFragment;\n  return JSXFragment;\n}(JSXElement);\nvar JSXOpeningElement = function (Node) {\n  function JSXOpeningElement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXOpeningElement.__proto__ = Node;\n  JSXOpeningElement.prototype = Object.create(Node && Node.prototype);\n  JSXOpeningElement.prototype.constructor = JSXOpeningElement;\n  JSXOpeningElement.prototype.transpile = function transpile(code, transforms) {\n    var this$1 = this;\n    Node.prototype.transpile.call(this, code, transforms);\n    code.overwrite(this.start, this.name.start, this.program.jsx + \"( \");\n    var html = this.name.type === 'JSXIdentifier' && this.name.name[0] === this.name.name[0].toLowerCase();\n    if (html) {\n      code.prependRight(this.name.start, \"'\");\n    }\n    var len = this.attributes.length;\n    var c = this.name.end;\n    if (len) {\n      var i;\n      var hasSpread = false;\n      for (i = 0; i < len; i += 1) {\n        if (this$1.attributes[i].type === 'JSXSpreadAttribute') {\n          hasSpread = true;\n          break;\n        }\n      }\n      c = this.attributes[0].end;\n      for (i = 0; i < len; i += 1) {\n        var attr = this$1.attributes[i];\n        if (i > 0) {\n          if (attr.start === c) {\n            code.prependRight(c, ', ');\n          } else {\n            code.overwrite(c, attr.start, ', ');\n          }\n        }\n        if (hasSpread && attr.type !== 'JSXSpreadAttribute') {\n          var lastAttr = this$1.attributes[i - 1];\n          var nextAttr = this$1.attributes[i + 1];\n          if (!lastAttr || lastAttr.type === 'JSXSpreadAttribute') {\n            code.prependRight(attr.start, '{ ');\n          }\n          if (!nextAttr || nextAttr.type === 'JSXSpreadAttribute') {\n            code.appendLeft(attr.end, ' }');\n          }\n        }\n        c = attr.end;\n      }\n      var after;\n      var before;\n      if (hasSpread) {\n        if (len === 1) {\n          before = html ? \"',\" : ',';\n        } else {\n          if (!this.program.options.objectAssign) {\n            throw new CompileError(\"Mixed JSX attributes ending in spread requires specified objectAssign option with 'Object.assign' or polyfill helper.\", this);\n          }\n          before = html ? \"', \" + this.program.options.objectAssign + \"({},\" : \", \" + this.program.options.objectAssign + \"({},\";\n          after = ')';\n        }\n      } else {\n        before = html ? \"', {\" : ', {';\n        after = ' }';\n      }\n      code.prependRight(this.name.end, before);\n      if (after) {\n        code.appendLeft(this.attributes[len - 1].end, after);\n      }\n    } else {\n      code.appendLeft(this.name.end, html ? \"', null\" : \", null\");\n      c = this.name.end;\n    }\n    if (this.selfClosing) {\n      code.overwrite(c, this.end, this.attributes.length ? \")\" : \" )\");\n    } else {\n      code.remove(c, this.end);\n    }\n  };\n  return JSXOpeningElement;\n}(Node$1);\nvar JSXOpeningFragment = function (Node) {\n  function JSXOpeningFragment() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXOpeningFragment.__proto__ = Node;\n  JSXOpeningFragment.prototype = Object.create(Node && Node.prototype);\n  JSXOpeningFragment.prototype.constructor = JSXOpeningFragment;\n  JSXOpeningFragment.prototype.transpile = function transpile(code) {\n    code.overwrite(this.start, this.end, this.program.jsx + \"( React.Fragment, null\");\n  };\n  return JSXOpeningFragment;\n}(Node$1);\nvar JSXSpreadAttribute = function (Node) {\n  function JSXSpreadAttribute() {\n    Node.apply(this, arguments);\n  }\n  if (Node) JSXSpreadAttribute.__proto__ = Node;\n  JSXSpreadAttribute.prototype = Object.create(Node && Node.prototype);\n  JSXSpreadAttribute.prototype.constructor = JSXSpreadAttribute;\n  JSXSpreadAttribute.prototype.transpile = function transpile(code, transforms) {\n    code.remove(this.start, this.argument.start);\n    code.remove(this.argument.end, this.end);\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return JSXSpreadAttribute;\n}(Node$1);\nvar nonAsciiLsOrPs = /[\\u2028-\\u2029]/g;\nvar Literal = function (Node) {\n  function Literal() {\n    Node.apply(this, arguments);\n  }\n  if (Node) Literal.__proto__ = Node;\n  Literal.prototype = Object.create(Node && Node.prototype);\n  Literal.prototype.constructor = Literal;\n  Literal.prototype.initialise = function initialise() {\n    if (typeof this.value === 'string') {\n      this.program.indentExclusionElements.push(this);\n    }\n  };\n  Literal.prototype.transpile = function transpile(code, transforms) {\n    if (transforms.numericLiteral) {\n      if (this.raw.match(/^0[bo]/i)) {\n        code.overwrite(this.start, this.end, String(this.value), {\n          storeName: true,\n          contentOnly: true\n        });\n      }\n    }\n    if (this.regex) {\n      var ref = this.regex;\n      var pattern = ref.pattern;\n      var flags = ref.flags;\n      if (transforms.stickyRegExp && /y/.test(flags)) {\n        throw new CompileError('Regular expression sticky flag is not supported', this);\n      }\n      if (transforms.unicodeRegExp && /u/.test(flags)) {\n        code.overwrite(this.start, this.end, \"/\" + rewritePattern(pattern, flags) + \"/\" + flags.replace('u', ''), {\n          contentOnly: true\n        });\n      }\n    } else if (typeof this.value === \"string\" && this.value.match(nonAsciiLsOrPs)) {\n      code.overwrite(this.start, this.end, this.raw.replace(nonAsciiLsOrPs, function (m) {\n        return m == \"\\u2028\" ? \"\\\\u2028\" : \"\\\\u2029\";\n      }), {\n        contentOnly: true\n      });\n    }\n  };\n  return Literal;\n}(Node$1);\nvar MemberExpression = function (Node) {\n  function MemberExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) MemberExpression.__proto__ = Node;\n  MemberExpression.prototype = Object.create(Node && Node.prototype);\n  MemberExpression.prototype.constructor = MemberExpression;\n  MemberExpression.prototype.transpile = function transpile(code, transforms) {\n    if (transforms.reservedProperties && reserved[this.property.name]) {\n      code.overwrite(this.object.end, this.property.start, \"['\");\n      code.appendLeft(this.property.end, \"']\");\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return MemberExpression;\n}(Node$1);\nvar NewExpression = function (Node) {\n  function NewExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) NewExpression.__proto__ = Node;\n  NewExpression.prototype = Object.create(Node && Node.prototype);\n  NewExpression.prototype.constructor = NewExpression;\n  NewExpression.prototype.initialise = function initialise(transforms) {\n    var this$1 = this;\n    if (transforms.spreadRest && this.arguments.length) {\n      var lexicalBoundary = this.findLexicalBoundary();\n      var i = this.arguments.length;\n      while (i--) {\n        var arg = this$1.arguments[i];\n        if (arg.type === 'SpreadElement' && isArguments(arg.argument)) {\n          this$1.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\n          break;\n        }\n      }\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  NewExpression.prototype.transpile = function transpile(code, transforms) {\n    Node.prototype.transpile.call(this, code, transforms);\n    if (transforms.spreadRest && this.arguments.length) {\n      var firstArgument = this.arguments[0];\n      var isNew = true;\n      var hasSpreadElements = spread(code, this.arguments, firstArgument.start, this.argumentsArrayAlias, isNew);\n      if (hasSpreadElements) {\n        code.prependRight(this.start + 'new'.length, ' (Function.prototype.bind.apply(');\n        code.overwrite(this.callee.end, firstArgument.start, ', [ null ].concat( ');\n        code.appendLeft(this.end, ' ))');\n      }\n    }\n    if (this.arguments.length) {\n      removeTrailingComma(code, this.arguments[this.arguments.length - 1].end);\n    }\n  };\n  return NewExpression;\n}(Node$1);\nvar ObjectExpression = function (Node) {\n  function ObjectExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ObjectExpression.__proto__ = Node;\n  ObjectExpression.prototype = Object.create(Node && Node.prototype);\n  ObjectExpression.prototype.constructor = ObjectExpression;\n  ObjectExpression.prototype.transpile = function transpile(code, transforms) {\n    var this$1 = this;\n    Node.prototype.transpile.call(this, code, transforms);\n    var firstPropertyStart = this.start + 1;\n    var spreadPropertyCount = 0;\n    var computedPropertyCount = 0;\n    var firstSpreadProperty = null;\n    var firstComputedProperty = null;\n    for (var i = 0; i < this.properties.length; ++i) {\n      var prop = this$1.properties[i];\n      if (prop.type === 'SpreadElement') {\n        spreadPropertyCount += 1;\n        if (firstSpreadProperty === null) {\n          firstSpreadProperty = i;\n        }\n      } else if (prop.computed && transforms.computedProperty) {\n        computedPropertyCount += 1;\n        if (firstComputedProperty === null) {\n          firstComputedProperty = i;\n        }\n      }\n    }\n    if (spreadPropertyCount && !transforms.objectRestSpread && !(computedPropertyCount && transforms.computedProperty)) {\n      spreadPropertyCount = 0;\n      firstSpreadProperty = null;\n    } else if (spreadPropertyCount) {\n      if (!this.program.options.objectAssign) {\n        throw new CompileError(\"Object spread operator requires specified objectAssign option with 'Object.assign' or polyfill helper.\", this);\n      }\n      var i$1 = this.properties.length;\n      while (i$1--) {\n        var prop$1 = this$1.properties[i$1];\n\n        // enclose run of non-spread properties in curlies\n        if (prop$1.type === 'Property' && !computedPropertyCount) {\n          var lastProp = this$1.properties[i$1 - 1];\n          var nextProp = this$1.properties[i$1 + 1];\n          if (!lastProp || lastProp.type !== 'Property') {\n            code.prependRight(prop$1.start, '{');\n          }\n          if (!nextProp || nextProp.type !== 'Property') {\n            code.appendLeft(prop$1.end, '}');\n          }\n        }\n\n        // Remove ellipsis on spread property\n        if (prop$1.type === 'SpreadElement') {\n          code.remove(prop$1.start, prop$1.argument.start);\n          code.remove(prop$1.argument.end, prop$1.end);\n        }\n      }\n\n      // wrap the whole thing in Object.assign\n      firstPropertyStart = this.properties[0].start;\n      if (!computedPropertyCount) {\n        code.overwrite(this.start, firstPropertyStart, this.program.options.objectAssign + \"({}, \");\n        code.overwrite(this.properties[this.properties.length - 1].end, this.end, ')');\n      } else if (this.properties[0].type === 'SpreadElement') {\n        code.overwrite(this.start, firstPropertyStart, this.program.options.objectAssign + \"({}, \");\n        code.remove(this.end - 1, this.end);\n        code.appendRight(this.end, ')');\n      } else {\n        code.prependLeft(this.start, this.program.options.objectAssign + \"(\");\n        code.appendRight(this.end, ')');\n      }\n    }\n    if (computedPropertyCount && transforms.computedProperty) {\n      var i0 = this.getIndentation();\n      var isSimpleAssignment;\n      var name;\n      if (this.parent.type === 'VariableDeclarator' && this.parent.parent.declarations.length === 1 && this.parent.id.type === 'Identifier') {\n        isSimpleAssignment = true;\n        name = this.parent.id.alias || this.parent.id.name; // TODO is this right?\n      } else if (this.parent.type === 'AssignmentExpression' && this.parent.parent.type === 'ExpressionStatement' && this.parent.left.type === 'Identifier') {\n        isSimpleAssignment = true;\n        name = this.parent.left.alias || this.parent.left.name; // TODO is this right?\n      } else if (this.parent.type === 'AssignmentPattern' && this.parent.left.type === 'Identifier') {\n        isSimpleAssignment = true;\n        name = this.parent.left.alias || this.parent.left.name; // TODO is this right?\n      }\n\n      if (spreadPropertyCount) {\n        isSimpleAssignment = false;\n      }\n\n      // handle block scoping\n      name = this.findScope(false).resolveName(name);\n      var start = firstPropertyStart;\n      var end = this.end;\n      if (isSimpleAssignment) ;else {\n        if (firstSpreadProperty === null || firstComputedProperty < firstSpreadProperty) {\n          name = this.findScope(true).createDeclaration('obj');\n          code.prependRight(this.start, \"( \" + name + \" = \");\n        } else {\n          name = null;\n        } // We don't actually need this variable\n      }\n\n      var len = this.properties.length;\n      var lastComputedProp;\n      var sawNonComputedProperty = false;\n      var isFirst = true;\n      for (var i$2 = 0; i$2 < len; i$2 += 1) {\n        var prop$2 = this$1.properties[i$2];\n        var moveStart = i$2 > 0 ? this$1.properties[i$2 - 1].end : start;\n        if (prop$2.type === 'Property' && (prop$2.computed || lastComputedProp && !spreadPropertyCount)) {\n          if (i$2 === 0) {\n            moveStart = this$1.start + 1;\n          } // Trim leading whitespace\n          lastComputedProp = prop$2;\n          if (!name) {\n            name = this$1.findScope(true).createDeclaration('obj');\n            var propId = name + (prop$2.computed ? '' : '.');\n            code.appendRight(prop$2.start, \"( \" + name + \" = {}, \" + propId);\n          } else {\n            var propId$1 = (isSimpleAssignment ? \";\\n\" + i0 + name : \", \" + name) + (prop$2.key.type === 'Literal' || prop$2.computed ? '' : '.');\n            if (moveStart < prop$2.start) {\n              code.overwrite(moveStart, prop$2.start, propId$1);\n            } else {\n              code.prependRight(prop$2.start, propId$1);\n            }\n          }\n          var c = prop$2.key.end;\n          if (prop$2.computed) {\n            while (code.original[c] !== ']') {\n              c += 1;\n            }\n            c += 1;\n          }\n          if (prop$2.key.type === 'Literal' && !prop$2.computed) {\n            code.overwrite(prop$2.start, prop$2.key.end + 1, '[' + code.slice(prop$2.start, prop$2.key.end) + '] = ');\n          } else if (prop$2.shorthand || prop$2.method && !prop$2.computed && transforms.conciseMethodProperty) {\n            // Replace : with = if Property::transpile inserted the :\n            code.overwrite(prop$2.key.start, prop$2.key.end, code.slice(prop$2.key.start, prop$2.key.end).replace(/:/, ' ='));\n          } else {\n            if (prop$2.value.start > c) {\n              code.remove(c, prop$2.value.start);\n            }\n            code.prependLeft(c, ' = ');\n          }\n\n          // This duplicates behavior from Property::transpile which is disabled\n          // for computed properties or if conciseMethodProperty is false\n          if (prop$2.method && (prop$2.computed || !transforms.conciseMethodProperty)) {\n            if (prop$2.value.generator) {\n              code.remove(prop$2.start, prop$2.key.start);\n            }\n            code.prependRight(prop$2.value.start, \"function\" + (prop$2.value.generator ? '*' : '') + \" \");\n          }\n        } else if (prop$2.type === 'SpreadElement') {\n          if (name && i$2 > 0) {\n            if (!lastComputedProp) {\n              lastComputedProp = this$1.properties[i$2 - 1];\n            }\n            code.appendLeft(lastComputedProp.end, \", \" + name + \" )\");\n            lastComputedProp = null;\n            name = null;\n          }\n        } else {\n          if (!isFirst && spreadPropertyCount) {\n            // We are in an Object.assign context, so we need to wrap regular properties\n            code.prependRight(prop$2.start, '{');\n            code.appendLeft(prop$2.end, '}');\n          }\n          sawNonComputedProperty = true;\n        }\n        if (isFirst && (prop$2.type === 'SpreadElement' || prop$2.computed)) {\n          var beginEnd = sawNonComputedProperty ? this$1.properties[this$1.properties.length - 1].end : this$1.end - 1;\n          // Trim trailing comma because it can easily become a leading comma which is illegal\n          if (code.original[beginEnd] == ',') {\n            ++beginEnd;\n          }\n          var closing = code.slice(beginEnd, end);\n          code.prependLeft(moveStart, closing);\n          code.remove(beginEnd, end);\n          isFirst = false;\n        }\n\n        // Clean up some extranous whitespace\n        var c$1 = prop$2.end;\n        if (i$2 < len - 1 && !sawNonComputedProperty) {\n          while (code.original[c$1] !== ',') {\n            c$1 += 1;\n          }\n        } else if (i$2 == len - 1) {\n          c$1 = this$1.end;\n        }\n        if (prop$2.end != c$1) {\n          code.overwrite(prop$2.end, c$1, '', {\n            contentOnly: true\n          });\n        }\n      }\n      if (!isSimpleAssignment && name) {\n        code.appendLeft(lastComputedProp.end, \", \" + name + \" )\");\n      }\n    }\n  };\n  return ObjectExpression;\n}(Node$1);\nvar Property = function (Node) {\n  function Property() {\n    Node.apply(this, arguments);\n  }\n  if (Node) Property.__proto__ = Node;\n  Property.prototype = Object.create(Node && Node.prototype);\n  Property.prototype.constructor = Property;\n  Property.prototype.initialise = function initialise(transforms) {\n    if ((this.kind === 'get' || this.kind === 'set') && transforms.getterSetter) {\n      throw new CompileError(\"getters and setters are not supported. Use `transforms: { getterSetter: false }` to skip transformation and disable this error\", this);\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  Property.prototype.transpile = function transpile(code, transforms) {\n    Node.prototype.transpile.call(this, code, transforms);\n    if (transforms.conciseMethodProperty && !this.computed && this.parent.type !== 'ObjectPattern') {\n      if (this.shorthand) {\n        code.prependRight(this.start, this.key.name + \": \");\n      } else if (this.method) {\n        var name = '';\n        if (this.program.options.namedFunctionExpressions !== false) {\n          if (this.key.type === 'Literal' && typeof this.key.value === 'number') {\n            name = '';\n          } else if (this.key.type === 'Identifier') {\n            if (reserved[this.key.name] || !/^[a-z_$][a-z0-9_$]*$/i.test(this.key.name) || this.value.body.scope.references[this.key.name]) {\n              name = this.findScope(true).createIdentifier(this.key.name);\n            } else {\n              name = this.key.name;\n            }\n          } else {\n            name = this.findScope(true).createIdentifier(this.key.value);\n          }\n          name = ' ' + name;\n        }\n        if (this.value.generator) {\n          code.remove(this.start, this.key.start);\n        }\n        code.appendLeft(this.key.end, \": function\" + (this.value.generator ? '*' : '') + name);\n      }\n    }\n    if (transforms.reservedProperties && reserved[this.key.name]) {\n      code.prependRight(this.key.start, \"'\");\n      code.appendLeft(this.key.end, \"'\");\n    }\n  };\n  return Property;\n}(Node$1);\nvar ReturnStatement = function (Node) {\n  function ReturnStatement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ReturnStatement.__proto__ = Node;\n  ReturnStatement.prototype = Object.create(Node && Node.prototype);\n  ReturnStatement.prototype.constructor = ReturnStatement;\n  ReturnStatement.prototype.initialise = function initialise(transforms) {\n    this.loop = this.findNearest(loopStatement);\n    this.nearestFunction = this.findNearest(/Function/);\n    if (this.loop && (!this.nearestFunction || this.loop.depth > this.nearestFunction.depth)) {\n      this.loop.canReturn = true;\n      this.shouldWrap = true;\n    }\n    if (this.argument) {\n      this.argument.initialise(transforms);\n    }\n  };\n  ReturnStatement.prototype.transpile = function transpile(code, transforms) {\n    var shouldWrap = this.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;\n    if (this.argument) {\n      if (shouldWrap) {\n        code.prependRight(this.argument.start, \"{ v: \");\n      }\n      this.argument.transpile(code, transforms);\n      if (shouldWrap) {\n        code.appendLeft(this.argument.end, \" }\");\n      }\n    } else if (shouldWrap) {\n      code.appendLeft(this.start + 6, ' {}');\n    }\n  };\n  return ReturnStatement;\n}(Node$1);\nvar Super = function (Node) {\n  function Super() {\n    Node.apply(this, arguments);\n  }\n  if (Node) Super.__proto__ = Node;\n  Super.prototype = Object.create(Node && Node.prototype);\n  Super.prototype.constructor = Super;\n  Super.prototype.initialise = function initialise(transforms) {\n    if (transforms.classes) {\n      this.method = this.findNearest('MethodDefinition');\n      if (!this.method) {\n        throw new CompileError('use of super outside class method', this);\n      }\n      var parentClass = this.findNearest('ClassBody').parent;\n      this.superClassName = parentClass.superClass && (parentClass.superClass.name || 'superclass');\n      if (!this.superClassName) {\n        throw new CompileError('super used in base class', this);\n      }\n      this.isCalled = this.parent.type === 'CallExpression' && this === this.parent.callee;\n      if (this.method.kind !== 'constructor' && this.isCalled) {\n        throw new CompileError('super() not allowed outside class constructor', this);\n      }\n      this.isMember = this.parent.type === 'MemberExpression';\n      if (!this.isCalled && !this.isMember) {\n        throw new CompileError('Unexpected use of `super` (expected `super(...)` or `super.*`)', this);\n      }\n    }\n    if (transforms.arrow) {\n      var lexicalBoundary = this.findLexicalBoundary();\n      var arrowFunction = this.findNearest('ArrowFunctionExpression');\n      var loop = this.findNearest(loopStatement);\n      if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n        this.thisAlias = lexicalBoundary.getThisAlias();\n      }\n      if (loop && loop.body.contains(this) && loop.depth > lexicalBoundary.depth) {\n        this.thisAlias = lexicalBoundary.getThisAlias();\n      }\n    }\n  };\n  Super.prototype.transpile = function transpile(code, transforms) {\n    if (transforms.classes) {\n      var expression = this.isCalled || this.method.static ? this.superClassName : this.superClassName + \".prototype\";\n      code.overwrite(this.start, this.end, expression, {\n        storeName: true,\n        contentOnly: true\n      });\n      var callExpression = this.isCalled ? this.parent : this.parent.parent;\n      if (callExpression && callExpression.type === 'CallExpression') {\n        if (!this.noCall) {\n          // special case – `super( ...args )`\n          code.appendLeft(callExpression.callee.end, '.call');\n        }\n        var thisAlias = this.thisAlias || 'this';\n        if (callExpression.arguments.length) {\n          code.appendLeft(callExpression.arguments[0].start, thisAlias + \", \");\n        } else {\n          code.appendLeft(callExpression.end - 1, \"\" + thisAlias);\n        }\n      }\n    }\n  };\n  return Super;\n}(Node$1);\nvar TaggedTemplateExpression = function (Node) {\n  function TaggedTemplateExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) TaggedTemplateExpression.__proto__ = Node;\n  TaggedTemplateExpression.prototype = Object.create(Node && Node.prototype);\n  TaggedTemplateExpression.prototype.constructor = TaggedTemplateExpression;\n  TaggedTemplateExpression.prototype.initialise = function initialise(transforms) {\n    if (transforms.templateString && !transforms.dangerousTaggedTemplateString) {\n      throw new CompileError(\"Tagged template strings are not supported. Use `transforms: { templateString: false }` to skip transformation and disable this error, or `transforms: { dangerousTaggedTemplateString: true }` if you know what you're doing\", this);\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  TaggedTemplateExpression.prototype.transpile = function transpile(code, transforms) {\n    if (transforms.templateString && transforms.dangerousTaggedTemplateString) {\n      var ordered = this.quasi.expressions.concat(this.quasi.quasis).sort(function (a, b) {\n        return a.start - b.start;\n      });\n      var program = this.program;\n      var rootScope = program.body.scope;\n\n      // insert strings at start\n      var templateStrings = this.quasi.quasis.map(function (quasi) {\n        return JSON.stringify(quasi.value.cooked);\n      }).join(', ');\n      var templateObject = this.program.templateLiteralQuasis[templateStrings];\n      if (!templateObject) {\n        templateObject = rootScope.createIdentifier('templateObject');\n        code.prependRight(this.program.prependAt, \"var \" + templateObject + \" = Object.freeze([\" + templateStrings + \"]);\\n\");\n        this.program.templateLiteralQuasis[templateStrings] = templateObject;\n      }\n      code.overwrite(this.tag.end, ordered[0].start, \"(\" + templateObject);\n      var lastIndex = ordered[0].start;\n      ordered.forEach(function (node) {\n        if (node.type === 'TemplateElement') {\n          code.remove(lastIndex, node.end);\n        } else {\n          code.overwrite(lastIndex, node.start, ', ');\n        }\n        lastIndex = node.end;\n      });\n      code.overwrite(lastIndex, this.end, ')');\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return TaggedTemplateExpression;\n}(Node$1);\nvar TemplateElement = function (Node) {\n  function TemplateElement() {\n    Node.apply(this, arguments);\n  }\n  if (Node) TemplateElement.__proto__ = Node;\n  TemplateElement.prototype = Object.create(Node && Node.prototype);\n  TemplateElement.prototype.constructor = TemplateElement;\n  TemplateElement.prototype.initialise = function initialise() {\n    this.program.indentExclusionElements.push(this);\n  };\n  return TemplateElement;\n}(Node$1);\nvar TemplateLiteral = function (Node) {\n  function TemplateLiteral() {\n    Node.apply(this, arguments);\n  }\n  if (Node) TemplateLiteral.__proto__ = Node;\n  TemplateLiteral.prototype = Object.create(Node && Node.prototype);\n  TemplateLiteral.prototype.constructor = TemplateLiteral;\n  TemplateLiteral.prototype.transpile = function transpile(code, transforms) {\n    Node.prototype.transpile.call(this, code, transforms);\n    if (transforms.templateString && this.parent.type !== 'TaggedTemplateExpression') {\n      var ordered = this.expressions.concat(this.quasis).sort(function (a, b) {\n        return a.start - b.start || a.end - b.end;\n      }).filter(function (node, i) {\n        // include all expressions\n        if (node.type !== 'TemplateElement') {\n          return true;\n        }\n\n        // include all non-empty strings\n        if (node.value.raw) {\n          return true;\n        }\n\n        // exclude all empty strings not at the head\n        return !i;\n      });\n\n      // special case – we may be able to skip the first element,\n      // if it's the empty string, but only if the second and\n      // third elements aren't both expressions (since they maybe\n      // be numeric, and `1 + 2 + '3' === '33'`)\n      if (ordered.length >= 3) {\n        var first = ordered[0];\n        var third = ordered[2];\n        if (first.type === 'TemplateElement' && first.value.raw === '' && third.type === 'TemplateElement') {\n          ordered.shift();\n        }\n      }\n      var parenthesise = (this.quasis.length !== 1 || this.expressions.length !== 0) && this.parent.type !== 'TemplateLiteral' && this.parent.type !== 'AssignmentExpression' && this.parent.type !== 'AssignmentPattern' && this.parent.type !== 'VariableDeclarator' && (this.parent.type !== 'BinaryExpression' || this.parent.operator !== '+');\n      if (parenthesise) {\n        code.appendRight(this.start, '(');\n      }\n      var lastIndex = this.start;\n      ordered.forEach(function (node, i) {\n        var prefix = i === 0 ? parenthesise ? '(' : '' : ' + ';\n        if (node.type === 'TemplateElement') {\n          code.overwrite(lastIndex, node.end, prefix + JSON.stringify(node.value.cooked));\n        } else {\n          var parenthesise$1 = node.type !== 'Identifier'; // TODO other cases where it's safe\n\n          if (parenthesise$1) {\n            prefix += '(';\n          }\n          code.remove(lastIndex, node.start);\n          if (prefix) {\n            code.prependRight(node.start, prefix);\n          }\n          if (parenthesise$1) {\n            code.appendLeft(node.end, ')');\n          }\n        }\n        lastIndex = node.end;\n      });\n      if (parenthesise) {\n        code.appendLeft(lastIndex, ')');\n      }\n      code.overwrite(lastIndex, this.end, \"\", {\n        contentOnly: true\n      });\n    }\n  };\n  return TemplateLiteral;\n}(Node$1);\nvar ThisExpression = function (Node) {\n  function ThisExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) ThisExpression.__proto__ = Node;\n  ThisExpression.prototype = Object.create(Node && Node.prototype);\n  ThisExpression.prototype.constructor = ThisExpression;\n  ThisExpression.prototype.initialise = function initialise(transforms) {\n    var this$1 = this;\n    var lexicalBoundary = this.findLexicalBoundary();\n    if (transforms.letConst) {\n      // save all loops up to the lexical boundary in case we need\n      // to alias them later for block-scoped declarations\n      var node = this.findNearest(loopStatement);\n      while (node && node.depth > lexicalBoundary.depth) {\n        node.thisRefs.push(this$1);\n        node = node.parent.findNearest(loopStatement);\n      }\n    }\n    if (transforms.arrow) {\n      var arrowFunction = this.findNearest('ArrowFunctionExpression');\n      if (arrowFunction && arrowFunction.depth > lexicalBoundary.depth) {\n        this.alias = lexicalBoundary.getThisAlias();\n      }\n    }\n  };\n  ThisExpression.prototype.transpile = function transpile(code) {\n    if (this.alias) {\n      code.overwrite(this.start, this.end, this.alias, {\n        storeName: true,\n        contentOnly: true\n      });\n    }\n  };\n  return ThisExpression;\n}(Node$1);\nvar UpdateExpression = function (Node) {\n  function UpdateExpression() {\n    Node.apply(this, arguments);\n  }\n  if (Node) UpdateExpression.__proto__ = Node;\n  UpdateExpression.prototype = Object.create(Node && Node.prototype);\n  UpdateExpression.prototype.constructor = UpdateExpression;\n  UpdateExpression.prototype.initialise = function initialise(transforms) {\n    if (this.argument.type === 'Identifier') {\n      var declaration = this.findScope(false).findDeclaration(this.argument.name);\n      // special case – https://gitlab.com/Rich-Harris/buble/issues/150\n      var statement = declaration && declaration.node.ancestor(3);\n      if (statement && statement.type === 'ForStatement' && statement.body.contains(this)) {\n        statement.reassigned[this.argument.name] = true;\n      }\n    }\n    Node.prototype.initialise.call(this, transforms);\n  };\n  UpdateExpression.prototype.transpile = function transpile(code, transforms) {\n    if (this.argument.type === 'Identifier') {\n      // Do this check after everything has been initialized to find\n      // shadowing declarations after this expression\n      checkConst(this.argument, this.findScope(false));\n    }\n    Node.prototype.transpile.call(this, code, transforms);\n  };\n  return UpdateExpression;\n}(Node$1);\nvar VariableDeclaration = function (Node) {\n  function VariableDeclaration() {\n    Node.apply(this, arguments);\n  }\n  if (Node) VariableDeclaration.__proto__ = Node;\n  VariableDeclaration.prototype = Object.create(Node && Node.prototype);\n  VariableDeclaration.prototype.constructor = VariableDeclaration;\n  VariableDeclaration.prototype.initialise = function initialise(transforms) {\n    this.scope = this.findScope(this.kind === 'var');\n    this.declarations.forEach(function (declarator) {\n      return declarator.initialise(transforms);\n    });\n  };\n  VariableDeclaration.prototype.transpile = function transpile(code, transforms) {\n    var this$1 = this;\n    var i0 = this.getIndentation();\n    var kind = this.kind;\n    if (transforms.letConst && kind !== 'var') {\n      kind = 'var';\n      code.overwrite(this.start, this.start + this.kind.length, kind, {\n        contentOnly: true,\n        storeName: true\n      });\n    }\n    if (transforms.destructuring && this.parent.type !== 'ForOfStatement' && this.parent.type !== 'ForInStatement') {\n      var c = this.start;\n      var lastDeclaratorIsPattern;\n      this.declarations.forEach(function (declarator, i) {\n        declarator.transpile(code, transforms);\n        if (declarator.id.type === 'Identifier') {\n          if (i > 0 && this$1.declarations[i - 1].id.type !== 'Identifier') {\n            code.overwrite(c, declarator.id.start, \"var \");\n          }\n        } else {\n          var inline = loopStatement.test(this$1.parent.type);\n          if (i === 0) {\n            code.remove(c, declarator.id.start);\n          } else {\n            code.overwrite(c, declarator.id.start, \";\\n\" + i0);\n          }\n          var simple = declarator.init.type === 'Identifier' && !declarator.init.rewritten;\n          var name = simple ? declarator.init.alias || declarator.init.name : declarator.findScope(true).createIdentifier('ref');\n          c = declarator.start;\n          var statementGenerators = [];\n          if (simple) {\n            code.remove(declarator.id.end, declarator.end);\n          } else {\n            statementGenerators.push(function (start, prefix, suffix) {\n              code.prependRight(declarator.id.end, \"var \" + name);\n              code.appendLeft(declarator.init.end, \"\" + suffix);\n              code.move(declarator.id.end, declarator.end, start);\n            });\n          }\n          var scope = declarator.findScope(false);\n          destructure(code, function (id) {\n            return scope.createIdentifier(id);\n          }, function (ref) {\n            var name = ref.name;\n            return scope.resolveName(name);\n          }, declarator.id, name, inline, statementGenerators);\n          var prefix = inline ? 'var ' : '';\n          var suffix = inline ? \", \" : \";\\n\" + i0;\n          statementGenerators.forEach(function (fn, j) {\n            if (i === this$1.declarations.length - 1 && j === statementGenerators.length - 1) {\n              suffix = inline ? '' : ';';\n            }\n            fn(declarator.start, j === 0 ? prefix : '', suffix);\n          });\n        }\n        c = declarator.end;\n        lastDeclaratorIsPattern = declarator.id.type !== 'Identifier';\n      });\n      if (lastDeclaratorIsPattern && this.end > c) {\n        code.overwrite(c, this.end, '', {\n          contentOnly: true\n        });\n      }\n    } else {\n      this.declarations.forEach(function (declarator) {\n        declarator.transpile(code, transforms);\n      });\n    }\n  };\n  return VariableDeclaration;\n}(Node$1);\nvar VariableDeclarator = function (Node) {\n  function VariableDeclarator() {\n    Node.apply(this, arguments);\n  }\n  if (Node) VariableDeclarator.__proto__ = Node;\n  VariableDeclarator.prototype = Object.create(Node && Node.prototype);\n  VariableDeclarator.prototype.constructor = VariableDeclarator;\n  VariableDeclarator.prototype.initialise = function initialise(transforms) {\n    var kind = this.parent.kind;\n    if (kind === 'let' && this.parent.parent.type === 'ForStatement') {\n      kind = 'for.let'; // special case...\n    }\n\n    this.parent.scope.addDeclaration(this.id, kind);\n    Node.prototype.initialise.call(this, transforms);\n  };\n  VariableDeclarator.prototype.transpile = function transpile(code, transforms) {\n    if (!this.init && transforms.letConst && this.parent.kind !== 'var') {\n      var inLoop = this.findNearest(/Function|^For(In|Of)?Statement|^(?:Do)?WhileStatement/);\n      if (inLoop && !/Function/.test(inLoop.type) && !this.isLeftDeclaratorOfLoop()) {\n        code.appendLeft(this.id.end, ' = (void 0)');\n      }\n    }\n    if (this.id) {\n      this.id.transpile(code, transforms);\n    }\n    if (this.init) {\n      this.init.transpile(code, transforms);\n    }\n  };\n  VariableDeclarator.prototype.isLeftDeclaratorOfLoop = function isLeftDeclaratorOfLoop() {\n    return this.parent && this.parent.type === 'VariableDeclaration' && this.parent.parent && (this.parent.parent.type === 'ForInStatement' || this.parent.parent.type === 'ForOfStatement') && this.parent.parent.left && this.parent.parent.left.declarations[0] === this;\n  };\n  return VariableDeclarator;\n}(Node$1);\nvar types$2 = {\n  ArrayExpression: ArrayExpression,\n  ArrowFunctionExpression: ArrowFunctionExpression,\n  AssignmentExpression: AssignmentExpression,\n  BinaryExpression: BinaryExpression,\n  BreakStatement: BreakStatement,\n  CallExpression: CallExpression,\n  ClassBody: ClassBody,\n  ClassDeclaration: ClassDeclaration,\n  ClassExpression: ClassExpression,\n  ContinueStatement: ContinueStatement,\n  DoWhileStatement: LoopStatement,\n  ExportNamedDeclaration: ExportNamedDeclaration,\n  ExportDefaultDeclaration: ExportDefaultDeclaration,\n  ForStatement: ForStatement,\n  ForInStatement: ForInStatement,\n  ForOfStatement: ForOfStatement,\n  FunctionDeclaration: FunctionDeclaration,\n  FunctionExpression: FunctionExpression,\n  Identifier: Identifier,\n  IfStatement: IfStatement,\n  ImportDeclaration: ImportDeclaration,\n  ImportDefaultSpecifier: ImportDefaultSpecifier,\n  ImportSpecifier: ImportSpecifier,\n  JSXAttribute: JSXAttribute,\n  JSXClosingElement: JSXClosingElement,\n  JSXClosingFragment: JSXClosingFragment,\n  JSXElement: JSXElement,\n  JSXExpressionContainer: JSXExpressionContainer,\n  JSXFragment: JSXFragment,\n  JSXOpeningElement: JSXOpeningElement,\n  JSXOpeningFragment: JSXOpeningFragment,\n  JSXSpreadAttribute: JSXSpreadAttribute,\n  Literal: Literal,\n  MemberExpression: MemberExpression,\n  NewExpression: NewExpression,\n  ObjectExpression: ObjectExpression,\n  Property: Property,\n  ReturnStatement: ReturnStatement,\n  Super: Super,\n  TaggedTemplateExpression: TaggedTemplateExpression,\n  TemplateElement: TemplateElement,\n  TemplateLiteral: TemplateLiteral,\n  ThisExpression: ThisExpression,\n  UpdateExpression: UpdateExpression,\n  VariableDeclaration: VariableDeclaration,\n  VariableDeclarator: VariableDeclarator,\n  WhileStatement: LoopStatement\n};\nvar keys = {\n  Program: ['body'],\n  Literal: []\n};\nvar statementsWithBlocks = {\n  IfStatement: 'consequent',\n  ForStatement: 'body',\n  ForInStatement: 'body',\n  ForOfStatement: 'body',\n  WhileStatement: 'body',\n  DoWhileStatement: 'body',\n  ArrowFunctionExpression: 'body'\n};\nfunction wrap(raw, parent) {\n  if (!raw) {\n    return;\n  }\n  if ('length' in raw) {\n    var i = raw.length;\n    while (i--) {\n      wrap(raw[i], parent);\n    }\n    return;\n  }\n\n  // with e.g. shorthand properties, key and value are\n  // the same node. We don't want to wrap an object twice\n  if (raw.__wrapped) {\n    return;\n  }\n  raw.__wrapped = true;\n  if (!keys[raw.type]) {\n    keys[raw.type] = Object.keys(raw).filter(function (key) {\n      return typeof raw[key] === 'object';\n    });\n  }\n\n  // special case – body-less if/for/while statements. TODO others?\n  var bodyType = statementsWithBlocks[raw.type];\n  if (bodyType && raw[bodyType].type !== 'BlockStatement') {\n    var expression = raw[bodyType];\n\n    // create a synthetic block statement, otherwise all hell\n    // breaks loose when it comes to block scoping\n    raw[bodyType] = {\n      start: expression.start,\n      end: expression.end,\n      type: 'BlockStatement',\n      body: [expression],\n      synthetic: true\n    };\n  }\n  raw.parent = parent;\n  raw.program = parent.program || parent;\n  raw.depth = parent.depth + 1;\n  raw.keys = keys[raw.type];\n  raw.indentation = undefined;\n  for (var i$1 = 0, list = keys[raw.type]; i$1 < list.length; i$1 += 1) {\n    var key = list[i$1];\n    wrap(raw[key], raw);\n  }\n  raw.program.magicString.addSourcemapLocation(raw.start);\n  raw.program.magicString.addSourcemapLocation(raw.end);\n  var type = (raw.type === 'BlockStatement' ? BlockStatement : types$2[raw.type]) || Node$1;\n  raw.__proto__ = type.prototype;\n}\nfunction Program(source, ast, transforms, options) {\n  var this$1 = this;\n  this.type = 'Root';\n\n  // options\n  this.jsx = options.jsx || 'React.createElement';\n  this.options = options;\n  this.source = source;\n  this.magicString = new MagicString(source);\n  this.ast = ast;\n  this.depth = 0;\n  wrap(this.body = ast, this);\n  this.body.__proto__ = BlockStatement.prototype;\n  this.templateLiteralQuasis = Object.create(null);\n  for (var i = 0; i < this.body.body.length; ++i) {\n    if (!this$1.body.body[i].directive) {\n      this$1.prependAt = this$1.body.body[i].start;\n      break;\n    }\n  }\n  this.objectWithoutPropertiesHelper = null;\n  this.indentExclusionElements = [];\n  this.body.initialise(transforms);\n  this.indentExclusions = Object.create(null);\n  for (var i$2 = 0, list = this$1.indentExclusionElements; i$2 < list.length; i$2 += 1) {\n    var node = list[i$2];\n    for (var i$1 = node.start; i$1 < node.end; i$1 += 1) {\n      this$1.indentExclusions[i$1] = true;\n    }\n  }\n  this.body.transpile(this.magicString, transforms);\n}\nProgram.prototype = {\n  export: function export$1(options) {\n    if (options === void 0) options = {};\n    return {\n      code: this.magicString.toString(),\n      map: this.magicString.generateMap({\n        file: options.file,\n        source: options.source,\n        includeContent: options.includeContent !== false\n      })\n    };\n  },\n  findNearest: function findNearest() {\n    return null;\n  },\n  findScope: function findScope() {\n    return null;\n  },\n  getObjectWithoutPropertiesHelper: function getObjectWithoutPropertiesHelper(code) {\n    if (!this.objectWithoutPropertiesHelper) {\n      this.objectWithoutPropertiesHelper = this.body.scope.createIdentifier('objectWithoutProperties');\n      code.prependLeft(this.prependAt, \"function \" + this.objectWithoutPropertiesHelper + \" (obj, exclude) { \" + \"var target = {}; for (var k in obj) \" + \"if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) \" + \"target[k] = obj[k]; return target; }\\n\");\n    }\n    return this.objectWithoutPropertiesHelper;\n  }\n};\nvar matrix = {\n  chrome: {\n    48: 610719,\n    49: 652287,\n    50: 783359,\n    51: 783359,\n    52: 1045503,\n    53: 1045503,\n    54: 1045503,\n    55: 3142655,\n    56: 3142655,\n    57: 3142655,\n    58: 4191231,\n    59: 4191231,\n    60: 8385535,\n    61: 8385535,\n    62: 8385535,\n    63: 8385535,\n    64: 8385535,\n    65: 8385535,\n    66: 8385535,\n    67: 8385535,\n    68: 8385535,\n    69: 8385535,\n    70: 8385535,\n    71: 8385535\n  },\n  firefox: {\n    43: 643515,\n    44: 643515,\n    45: 643519,\n    46: 774591,\n    47: 774655,\n    48: 774655,\n    49: 774655,\n    50: 774655,\n    51: 775167,\n    52: 4191231,\n    53: 4191231,\n    54: 4191231,\n    55: 8385535,\n    56: 8385535,\n    57: 8385535,\n    58: 8385535,\n    59: 8385535,\n    60: 8385535,\n    61: 8385535,\n    62: 8385535,\n    63: 8385535,\n    64: 8385535\n  },\n  safari: {\n    8: 524297,\n    9: 594141,\n    10: 1831935,\n    '10.1': 4191231,\n    11: 4191231,\n    '11.1': 8385535,\n    12: 8385535\n  },\n  ie: {\n    8: 0,\n    9: 524289,\n    10: 524289,\n    11: 524289 // no let/const in for loops\n  },\n\n  edge: {\n    12: 610459,\n    13: 774559,\n    14: 2085887,\n    15: 4183039,\n    16: 4183039,\n    17: 4183039,\n    18: 4183039,\n    19: 4183039\n  },\n  node: {\n    '0.10': 524289,\n    '0.12': 524417,\n    4: 594335,\n    5: 594335,\n    6: 783359,\n    8: 4191231,\n    '8.3': 8385535,\n    '8.7': 8385535,\n    '8.10': 8385535\n  }\n};\nvar features = ['getterSetter', 'arrow', 'classes', 'computedProperty', 'conciseMethodProperty', 'defaultParameter', 'destructuring', 'forOf', 'generator', 'letConst', 'moduleExport', 'moduleImport', 'numericLiteral', 'parameterDestructuring', 'spreadRest', 'stickyRegExp', 'templateString', 'unicodeRegExp',\n// ES2016\n'exponentiation',\n// additional transforms, not from\n// https://featuretests.io\n'reservedProperties', 'trailingFunctionCommas', 'asyncAwait', 'objectRestSpread'];\nvar version$1 = \"0.19.6\";\nvar parser = Parser.extend(acornDynamicImport, acornJsx());\nvar dangerousTransforms = ['dangerousTaggedTemplateString', 'dangerousForOf'];\nfunction target(target) {\n  var targets = Object.keys(target);\n  var bitmask = targets.length ? 8388607 : 524289;\n  Object.keys(target).forEach(function (environment) {\n    var versions = matrix[environment];\n    if (!versions) {\n      throw new Error(\"Unknown environment '\" + environment + \"'. Please raise an issue at https://github.com/Rich-Harris/buble/issues\");\n    }\n    var targetVersion = target[environment];\n    if (!(targetVersion in versions)) {\n      throw new Error(\"Support data exists for the following versions of \" + environment + \": \" + Object.keys(versions).join(', ') + \". Please raise an issue at https://github.com/Rich-Harris/buble/issues\");\n    }\n    var support = versions[targetVersion];\n    bitmask &= support;\n  });\n  var transforms = Object.create(null);\n  features.forEach(function (name, i) {\n    transforms[name] = !(bitmask & 1 << i);\n  });\n  dangerousTransforms.forEach(function (name) {\n    transforms[name] = false;\n  });\n  return transforms;\n}\nfunction transform(source, options) {\n  if (options === void 0) options = {};\n  var ast;\n  var jsx = null;\n  try {\n    ast = parser.parse(source, {\n      ecmaVersion: 10,\n      preserveParens: true,\n      sourceType: 'module',\n      allowReturnOutsideFunction: true,\n      onComment: function onComment(block, text) {\n        if (!jsx) {\n          var match = /@jsx\\s+([^\\s]+)/.exec(text);\n          if (match) {\n            jsx = match[1];\n          }\n        }\n      }\n    });\n    options.jsx = jsx || options.jsx;\n  } catch (err) {\n    err.snippet = getSnippet(source, err.loc);\n    err.toString = function () {\n      return err.name + \": \" + err.message + \"\\n\" + err.snippet;\n    };\n    throw err;\n  }\n  var transforms = target(options.target || {});\n  Object.keys(options.transforms || {}).forEach(function (name) {\n    if (name === 'modules') {\n      if (!('moduleImport' in options.transforms)) {\n        transforms.moduleImport = options.transforms.modules;\n      }\n      if (!('moduleExport' in options.transforms)) {\n        transforms.moduleExport = options.transforms.modules;\n      }\n      return;\n    }\n    if (!(name in transforms)) {\n      throw new Error(\"Unknown transform '\" + name + \"'\");\n    }\n    transforms[name] = options.transforms[name];\n  });\n  if (options.objectAssign === true) {\n    options.objectAssign = 'Object.assign';\n  }\n  return new Program(source, ast, transforms, options).export(options);\n}\nexport { target, transform, version$1 as VERSION };"],"names":["reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","this","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Array","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","getOptions","opts","opt","tokens","token","push","array","block","text","startLoc","endLoc","comment","type","value","loc","range","pushComment","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","functionFlags","async","generator","keywordRegexp","words","replace","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","configurable","inGenerator","inAsync","parse","node","startNode","nextToken","parseTopLevel","get","currentVarScope","flags","extend","plugins","len","arguments","cls","parseExpressionAt","parser","parseExpression","tokenizer","defineProperties","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","exports","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","this$1","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","simple","finalizer","object","i$1","list","label$1","statementStart","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","method","tryContextual","k","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","proto","other","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldShorthandAssign","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","result","parseSubscripts","base","noCalls","maybeAsyncArrow","property","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","inNonArrowFunction","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","indexOf","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","Scope","var","lexical","redeclared","scope","currentScope","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","data","apply","$LONE","General_Category","gc","sc","Script_Extensions","scx","Script","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","total","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","word","escStart","esc","acorn","freeze","version","tokTypes","keywordTypes","tokContexts","xhtml","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","hexNumber","decimalNumber","tt","TokContext$1","TokenType$1","isNewLine$1","isIdentifierStart$1","isIdentifierChar$1","tc_oTag","tc_cTag","tc_expr","tok","jsxName","jsxText","jsxTagStart","jsxTagEnd","getQualifiedJSXName","namespace","acornJsx","anonymous","__proto__","create","constructor","jsx_readToken","jsx_readEntity","jsx_readNewLine","normalizeCRLF","jsx_readString","entity","count","jsx_readWord","jsx_parseIdentifier","jsx_parseNamespacedName","allowNamespaces","jsx_parseElementName","allowNamespacedObjects","newNode","jsx_parseAttributeValue","jsx_parseExpressionContainer","jsx_parseEmptyExpression","jsx_parseAttribute","jsx_parseOpeningElementAt","attributes","nodeName","selfClosing","jsx_parseClosingElementAt","jsx_parseElementAt","children","openingElement","closingElement","contents","fragmentOrElement","jsx_parseText","jsx_parseElement","refShortHandDefaultPos","plugin","fn","module","x","lib","defineProperty","DynamicImportKey","undefined","_createClass","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_get","receiver","Function","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_Parser","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","subClass","setPrototypeOf","_inherits","parenAfter","parseDynamicImport","acornDynamicImport","__esModule","toJSON","keys","forEach","map","Node$1","extractNames","names","extractors","ancestor","level","contains","findLexicalBoundary","findNearest","unparenthesizedParent","unparenthesize","findScope","functionScope","getIndentation","initialise","transforms","magicString","original","transpile","Identifier","ObjectPattern","Property","ArrayPattern","RestElement","AssignmentPattern","Scope$1","isBlockScope","createDeclarationCallback","declare","identifiers","references","blockScopedDeclarations","aliases","locate","lines","lineEnd","char","Error","repeat","getSnippet","Math","numDigits","snippet","join","addDeclaration","identifier","instances","addReference","consolidated","consolidateReference","consolidate","createIdentifier","counter","createDeclaration","findDeclaration","resolveName","CompileError","stack","findIndex","handlers","destructureIdentifier","inline","statementGenerators","isIdentifier","suffix","prependRight","move","appendLeft","destructure","handleProperty","remove","destructureObjectPattern","overwrite","nonRestKeys","content","isComputedKey","helper","getObjectWithoutPropertiesHelper","destructureMemberExpression","filter","Boolean","ref$1","contentOnly","BlockStatement","createScope","parentIsFunction","isFunctionBlock","createdDeclarations","thisAlias","argumentsAlias","defaultParameters","getArgumentsAlias","getArgumentsArrayAlias","argumentsArrayAlias","getThisAlias","indentation","useOuter","synthetic","indentString","getIndentString","introStatementGenerators","assignment","transpileParameters","letConst","transpileBlockScopedIdentifiers","defaultParameter","lhs","spreadRest","penultimateParam","start$1","parameterDestructuring","i$2","list$2","cont","forStatement","shouldRewriteAsFunction","outerAlias","innerAlias","reassigned","storeName","outer","inner","alias","alias$1","identifier$1","rewritten","isArguments","spread","isNew","firstSpreadIndex","element$1","element$2","previousElement","ArrayExpression","lexicalBoundary","lastElement","removeTrailingComma","ArrowFunctionExpression","naked","needsArguments","charIndex","trailingFunctionCommas","checkConst","AssignmentExpression","exponentiation","transpileExponentiation","destructuring","transpileDestructuring","writeScope","lookupScope","appendRight","j","needsObjectVar","needsPropertyVar","i0","BinaryExpression","loopStatement","BreakStatement","switchCase","depth","canBreak","CallExpression","arg","hasSpreadElements","firstArgument","callExpression","noCall","ClassBody","inFunctionExpression","superName","classes","indentStr","i1","constructorIndex","introBlock","outroBlock","isConstructorBody","previousMethod","nextMethod","namedFunctions","namedFunctionExpressions","namedConstructor","inheritanceBlock","fn$1","staticAccessors","prototypeGettersAndSetters","staticGettersAndSetters","getterSetter","isAccessor","methodName","fake_computed","funcName","rhs","constructorName","intro","outro","ClassDeclaration","indentStrLen","indentStart","indentExclusions","removeStart","deindent","isExportDefaultDeclaration","prependLeft","syntheticDefaultExport","ClassExpression","ContinueStatement","ExportDefaultDeclaration","moduleExport","ExportNamedDeclaration","LoopStatement","createdScope","thisRefs","nearestFunctionExpression","needsBlock","argString","args","paramString","before","after","canReturn","returned","insert","ForStatement","LoopStatement$$1","declarator","updates","lastStatement","ForInStatement","hasDeclaration","maybePattern","destructurePattern","isDeclaration","bodyStart","ForOfStatement","forOf","dangerousForOf","maybeDestructuring","FunctionDeclaration","FunctionExpression","conciseMethodProperty","isReference","arrowFunction","IfStatement","ImportDeclaration","moduleImport","ImportDefaultSpecifier","ImportSpecifier","JSXAttribute","JSXClosingElement","spaceBeforeParen","lastChild","JSXClosingFragment","normalise","removeTrailingWhitespace","JSON","stringify","JSXElement","child","openingFragment","JSXExpressionContainer","JSXFragment","JSXElement$$1","JSXOpeningElement","jsx","html","toLowerCase","hasSpread","attr","lastAttr","nextAttr","objectAssign","JSXOpeningFragment","JSXSpreadAttribute","nonAsciiLsOrPs","Literal","indentExclusionElements","numericLiteral","stickyRegExp","unicodeRegExp","m","MemberExpression","reservedProperties","NewExpression","ObjectExpression","firstPropertyStart","spreadPropertyCount","computedPropertyCount","firstSpreadProperty","firstComputedProperty","computedProperty","objectRestSpread","prop$1","lastProp","nextProp","isSimpleAssignment","lastComputedProp","sawNonComputedProperty","isFirst","prop$2","moveStart","propId$1","propId","beginEnd","closing","c$1","ReturnStatement","nearestFunction","shouldWrap","Super","parentClass","superClassName","isCalled","isMember","TaggedTemplateExpression","templateString","dangerousTaggedTemplateString","ordered","concat","sort","a","b","rootScope","templateStrings","templateObject","templateLiteralQuasis","prependAt","TemplateElement","TemplateLiteral","third","shift","parenthesise","parenthesise$1","ThisExpression","UpdateExpression","VariableDeclaration","lastDeclaratorIsPattern","VariableDeclarator","inLoop","isLeftDeclaratorOfLoop","types$2","DoWhileStatement","WhileStatement","Program","statementsWithBlocks","wrap","__wrapped","bodyType","addSourcemapLocation","ast","objectWithoutPropertiesHelper","export","generateMap","file","includeContent","matrix","chrome","firefox","safari","ie","edge","features","dangerousTransforms","transform","bitmask","environment","versions","targetVersion","support","modules"],"sourceRoot":""}